export function baseClone(Obj: any, exclude?: any[]) {
    exclude = exclude || [];
    let buf: any;
    if (Obj instanceof Array) {
        buf = [];
        Obj.forEach((val, i) => {
            buf[i] = baseClone(val);
        });
        return buf;
    } else if (Obj instanceof Object && typeof  Obj !== 'function') {
        buf = {};
        for (const key in Obj) {
            if ((Obj.hasOwnProperty(key) || typeof (Obj[key]) === 'function') && exclude.indexOf(key) === -1) {
                buf[key] = baseClone(Obj[key]);
            }
        }
        return buf;
    } else {
        // console.log('啥都不是:' + Obj);
        return Obj;
    }
}