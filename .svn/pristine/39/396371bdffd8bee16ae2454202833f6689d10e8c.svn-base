 <template>
  <div v-if="myTable" class="table-div-0">
    <!-- 左上角填充 -->
    <div class="fix-top-left-table">
      <table v-if='myTable' class='my-table left-table' cellspacing="0" cellpadding="0" border="0">
        <thead>
          <tr v-if="myTable.config.isShowColIndex">
            <th class="rowNumber">
              <div></div>
            </th>
          </tr>
          <tr v-if="myTable.config.isShowRowIndex" v-for='(tr, i) in myTable.tableHeadTop' :key='tr+i'>
            <th class="rowNumber" @dragover='myTable.dragOver($event)' @drop='myTable.drop($event)'>
              <div v-bind:style="[myTable.rowNumber[i].cell.style,myTable.rowNumber[i].style]">{{myTable.rowNumber[i].cell.content}}</div>
            </th>
          </tr>
        </thead>
      </table>
    </div>
    <!-- 左侧固定表头 -->
    <div class="fix-left-table" :scrollTop.prop="myTable.style.scrollTop">
      <table v-if='myTable' class='my-table left-table'>
        <thead>
          <tr v-if="myTable.config.isShowColIndex">
            <th class="rowNumber">
              <div></div>
            </th>
          </tr>
          <tr v-for='(th, i) in myTable.rowNumber' :key='"row"+i'>
            <th v-if="myTable.config.isShowRowIndex" class="rowNumber" tabindex="0" @mousedown="myTable.onMouseDown($event,th)" @mouseout="myTable.onMouseOut($event,th)" @mousemove="myTable.onMouseMove($event,th)" @keydown="myTable.onKeyDown($event)" @keyup="myTable.onKeyUp($event)" @blur="myTable.colRowIndexOnBlur(th)" @click="myTable.onTrClick($event,th)" @dragover='myTable.dragOver($event,th)' @drop='myTable.drop($event,th)'>
              <div v-bind:style="[th.cell.style,th.style]">{{th.cell.content}}</div>
            </th>
          </tr>
        </thead>
      </table>
    </div>
    <!-- 上测固定表头 -->
    <div class="fix-top-table" :scrollLeft.prop="myTable.style.scrollLeft" v-bind:style="myTable.style.topTable">
      <table v-if='myTable' class='my-table' cellspacing="0" cellpadding="0" border="0">
        <thead>
          <tr v-if="myTable.config.isShowColIndex">
            <th class="rowNumber">
              <div></div>
            </th>
            <th class="colNumber" v-bind:style="th.style" @mousedown="myTable.onMouseDown($event,th)" @mouseout="myTable.onMouseOut($event,th)" @mousemove="myTable.onMouseMove($event,th)" @keydown="myTable.onKeyDown($event)" @keyup="myTable.onKeyUp($event)" tabindex="1" @blur="myTable.colRowIndexOnBlur(th)" @click="myTable.onTrClick($event,th)" v-for='(th,i) in myTable.colNumber' :key='"col"+i' v-on:dragover='myTable.dragOver($event,th)' @drop='myTable.drop($event,th)'>
              <div v-bind:style="[th.cell.style,th.style]">{{th.cell.content}}</div>
            </th>
          </tr>
          <tr v-for='(tr, i) in myTable.tableHeadTop' :key='"tr"+i'>
            <th v-if="myTable.config.isShowRowIndex" class="rowNumber">
              <div v-bind:style="[myTable.rowNumber[i].cell.style,myTable.rowNumber[i].style]"></div>
            </th>
            <th class="colNumber" v-if='i===0&&myTable.tableHeadLeft[0]' :colspan="myTable.theadLeftEntity.side2" :rowspan="myTable.tableHeadTop.length">
              <div v-bind:style="[myTable.tableHeadTopLeft.style,myTable.tableHeadTopLeft.cell.style ]">{{myTable.tableId}}</div>
            </th>
            <!-- 上测固定表头 -->
            <th v-bind:style="th.style" class='top-th' v-for='(th, j) in tr' :key='th.name+j' tabindex="1" @keydown="myTable.onKeyDown($event)" @keyup="myTable.onKeyUp($event)" @blur="myTable.onThOnBlur(th)" @click="myTable.onThClick(th)" @dblclick="myTable.ondbClick(th)" v-bind:class="{selected:th.selected}" draggable='true' @dragstart="myTable.dragStart($event,th)" @dragover='myTable.dragOver($event,th)' @drop='myTable.drop($event,th)' @dragleave="myTable.theadTopEntity.dragLeave($event)" :colspan="th.cell.span1" :rowspan="th.cell.span2">
              <div v-bind:style="[th.cell.style,th.style]" v-if="th.showType == 0">{{th.cell.content}}
              </div>
              <div v-if="th.showType == 1">
                <input v-bind:style="[th.cell.style]" @mouseover="myTable.getfocus($event)" @blur="myTable.inputOnBlur(th,true)" v-model="th.cell.content" />
              </div>
              <div v-if="th.showType == 2">
                <button>{{th.cell.content}}</button>
              </div>
            </th>
          </tr>
        </thead>
      </table>
    </div>
    <!-- 主表 -->
    <div class='main-div' v-bind:style="myTable.style.mainTable" :scrollTop="myTable.style.scrollTop" @scroll="myTable.onScroll($event)" id='div1'>
      <table v-if='myTable' class='my-table' cellspacing="0" cellpadding="0" border="0">
        <thead>
          <tr v-if="myTable.config.isShowColIndex">
            <th class="rowNumber">
              <div></div>
            </th>
            <th class="colNumber" v-for='(th,i) in myTable.colNumber' :key='"col"+i' v-on:dragover='myTable.dragOver($event,th)' v-on:drop='myTable.dropTopA_Z($event)'>
              <div v-bind:style="[th.cell.style,th.style]">{{th.cell.content}}</div>
            </th>
          </tr>
          <tr v-for='(tr, i) in myTable.tableHeadTop' :key='tr+i'>
            <th v-if="myTable.config.isShowRowIndex" class="rowNumber"></th>
            <th class="colNumber" v-if='i===0&&myTable.tableHeadLeft[0]' :colspan="myTable.theadLeftEntity.side2" :rowspan="myTable.tableHeadTop.length">
              <div v-bind:style="[myTable.tableHeadTopLeft.style,myTable.tableHeadTopLeft.cell.style ]"></div>
            </th>
            <th v-for='(th, i) in tr' :key='th.name+i' :colspan="th.cell.span1" :rowspan="th.cell.span2">
              <div v-bind:style="[th.cell.style,th.style]"> </div>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr v-for='(tr, i) in myTable.tableBody' :key='tr+i'>
            <th v-if="myTable.config.isShowRowIndex" class="rowNumber">
              <div></div>
            </th>
            <!-- 主表里左侧表头 -->
            <th tabindex="1" v-for="(th,j) in myTable.tableHeadLeft[i]" @click="myTable.onThClick(th)" @dblclick="myTable.ondbClick(th)" @keydown="myTable.onKeyDown($event)" @keyup="myTable.onKeyUp($event)" @blur="myTable.onThOnBlur(th)" v-bind:class="{selected:th.selected}" :key='th+j' draggable='true' @dragstart="myTable.dragStart($event,th)" @dragover='myTable.dragOver($event,th)' @drop='myTable.drop($event,th)' @dragleave="myTable.theadLeftEntity.dragLeave($event)" :colspan="th.cell.span2" :rowspan="th.cell.span1">
              <div v-bind:style="[th.cell.style,th.style]" v-if="th.showType == 0">
                {{th.cell.content}}
              </div>
              <div v-bind:style="[th.cell.style,th.style]" v-if="th.showType == 1">
                <input @mouseover="myTable.getfocus($event)" @blur="myTable.inputOnBlur(th,true)" v-model="th.cell.content" />
              </div>
              <div v-if="th.showType == 2">
                <button>{{th.cell.content}}</button>
              </div>
            </th>
            <!-- <td v-bind:class="{ rowSelected:  myTable.getIfRowSelect(i),colSelected:myTable.getIfColSelectByTd(j)}" v-for='(td, j) in tr' :key='1 + j'></td> -->
            <td tabindex="1" @paste="myTable.onpaste($event,td)" @dblclick="myTable.ondbClick(td)" v-for='(td, j) in tr' :key='1 + j'>
              <div v-bind:style="[td.cell.style,td.style]" v-if="td.showType == 0">{{td.cell.content}}
              </div>
              <div v-bind:style="[td.cell.style,td.style]" v-if="td.showType == 1">
                <input @mouseover="myTable.getfocus($event)" @blur="myTable.inputOnBlur(td,true)" v-model="td.cell.content" />
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</template>

<script lang="ts">
  import { Component, Prop, Vue } from "vue-property-decorator";
  import { DragTable } from "./dragTable";
  export default Vue.component("MyTable", {
    props: {
      inputTable: Object
    },
    data: function() {
      return {
        myTable: this.inputTable || new DragTable().getTable("test")
      };
    },
    watch: {
      inputTable: function(val, oldVal) {
        this.myTable = val || oldVal;
      }
    },
    created() {
      console.log(this.myTable.tableId);
    }
  });
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
  @import "./css/table.css"; /*引入公共样式*/
</style>
