/**
 * 观察者
 */
export class Observer {
    /** 回调函数 */
    public callback: any = null;
    /** 上下文 */
    public context: any = null;

    constructor(callback: (Function), context: any) {
        const self = this;
        self.callback = callback;
        self.context = context;
    }

    /**
     * 发送通知
     * @param args 不定参数
     */
    public notify(...args: any[]): void {
        const self = this;
        self.callback.call(self.context, ...args);
    }

    /**
     * 上下文比较
     * @param context 上下文
     */
    public compar(context: any): boolean {
        return context === this.context;
    }
}