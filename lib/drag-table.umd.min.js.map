{"version":3,"sources":["webpack://drag-table/webpack/universalModuleDefinition","webpack://drag-table/webpack/bootstrap","webpack://drag-table/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://drag-table/./packages/drag-table2.0/views/TableCom.vue?f754","webpack://drag-table/./node_modules/vue-class-component/dist/vue-class-component.common.js","webpack://drag-table/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://drag-table/./packages/drag-table2.0/views/TableCom.vue?2abb","webpack://drag-table/./packages/drag-table2.0/views/com/TopFixTable.vue?e025","webpack://drag-table/./packages/drag-table2.0/views/com/TopFixTable.vue","webpack://drag-table/./packages/drag-table2.0/views/com/TopFixTable.vue?c1e0","webpack://drag-table/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://drag-table/./packages/drag-table2.0/views/com/TopFixTable.vue?427c","webpack://drag-table/./packages/drag-table2.0/views/com/TopLeftFixTable.vue?e69e","webpack://drag-table/./packages/drag-table2.0/views/com/TopLeftFixTable.vue","webpack://drag-table/./packages/drag-table2.0/views/com/TopLeftFixTable.vue?d00c","webpack://drag-table/./packages/drag-table2.0/views/com/TopLeftFixTable.vue?ea21","webpack://drag-table/./packages/drag-table2.0/views/com/LeftFixTable.vue?129e","webpack://drag-table/./packages/drag-table2.0/views/com/LeftFixTable.vue","webpack://drag-table/./packages/drag-table2.0/views/com/LeftFixTable.vue?c11f","webpack://drag-table/./packages/drag-table2.0/views/com/LeftFixTable.vue?ed86","webpack://drag-table/./packages/drag-table2.0/views/com/SelectBox.vue?46dc","webpack://drag-table/./packages/drag-table2.0/views/com/SelectBox.vue","webpack://drag-table/./packages/drag-table2.0/views/com/SelectBox.vue?0c78","webpack://drag-table/./packages/drag-table2.0/views/com/SelectBox.vue?2a6f","webpack://drag-table/./node_modules/tslib/tslib.es6.js","webpack://drag-table/./packages/drag-table2.0/utils/base/clone.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/config.ts","webpack://drag-table/./packages/drag-table2.0/utils/keepClone.ts","webpack://drag-table/./packages/drag-table2.0/utils/myObejctClone.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/baseSlice.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/drop.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/dropRight.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/last.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/guid.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/objecSet.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/replaceAll.ts","webpack://drag-table/./packages/drag-table2.0/utils/base/getA_Z.ts","webpack://drag-table/./packages/drag-table2.0/module/formula/Formula.ts","webpack://drag-table/./packages/drag-table2.0/config/BaseContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/BaseCellConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/CellContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/TheadContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/TreeContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/IndexContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/BaseTheadConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/IndexTheadConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/BaseTableConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/BaseTbodyConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/TbodyContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/SelfContainerConfig.ts","webpack://drag-table/./packages/drag-table2.0/config/DragTableConfig.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/cell/BaseCell.ts","webpack://drag-table/./packages/drag-table2.0/module/positionManager/PositionManager.ts","webpack://drag-table/./packages/drag-table2.0/communication/Subject.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/BaseContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/CellContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/style/Style.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/SelfContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/TreeContainer.ts","webpack://drag-table/./packages/drag-table2.0/utils/Factory.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/TheadContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/thead/BaseThead.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/TbodyContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/tbody/BaseTbody.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/IndexContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/thead/IndexThead.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/container/TableContainer.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/selectBox/SelectBox.ts","webpack://drag-table/./packages/drag-table2.0/viewModule/table/BaseTable.ts","webpack://drag-table/./packages/drag-table2.0/views/TableCom.vue","webpack://drag-table/./packages/drag-table2.0/views/TableCom.vue?5e21","webpack://drag-table/./packages/drag-table2.0/views/TableCom.vue?96e3","webpack://drag-table/./packages/drag-table2.0/DragTable.ts","webpack://drag-table/./node_modules/@vue/cli-service/lib/commands/build/entry-lib-no-default.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__8bbf__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","document","currentScript","src","match","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TableCom_vue_vue_type_style_index_0_id_5f04bc67_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TableCom_vue_vue_type_style_index_0_id_5f04bc67_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_interopDefault","ex","Vue","hasProto","__proto__","Array","createDecorator","target","index","Ctor","constructor","__decorators__","undefined","push","options","mixins","Ctors","_i","arguments","length","extend","isPrimitive","type","collectDataFromConstructor","vm","Component","originalInit","_init","_this","keys","getOwnPropertyNames","$options","props","forEach","charAt","set","configurable","data","plainData","$internalHooks","componentFactory","_componentTag","proto","indexOf","descriptor","getOwnPropertyDescriptor","methods","computed","decorators","fn","superProto","getPrototypeOf","Super","Extended","forwardStaticMembers","Original","extendedDescriptor","superDescriptor","registerHooks","apply","Component$1","default","TableComvue_type_template_id_5f04bc67_scoped_true_render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","position","on","keydown","$event","myTable","onKeyDown","keyup","onKeyUp","hasLeftFixedTable","hasTopFixedTable","attrs","inputTable","_e","style","scrollTop","scroll","onScroll","$rowNumber","$colNumber","cellspacing","cellpadding","border","width","height","tabindex","lineHeight","_v","_s","isTopLeftShow","topLeftValue","_l","th","dragover","dragOver","dragleave","dragLeave","dragenter","dragEnter","drop","mousedown","onMouseDown","mousemove","onMouseMove","mouseout","onMouseOut","cell","content","id","$tableHeadTop","$tableHeadLeft","tableHeadTopLeft","colspan","theadLeftEntity","side2","rowspan","theadTopEntity","j","span1","span2","draggable","click","onClick","dragstart","dragStart","dragend","dragEnd","treeContainer","viewBox","svg","$openStatus","sc","displayClass","status","displayType","title","dblclick","onDbClick","directives","rawName","expression","domProps","mouseover","onMouseOver","blur","inputOnBlur","input","composing","$set","change","$$selectedVal","filter","selected","map","val","_value","multiple","onChange","onBlur","select","option","text","background-color","$tableBody","td","paste","onPaste","onInput","mouseup","onMouseUp","focus","onFocus","positionType","_m","staticRenderFns","TopFixTablevue_type_template_id_1bc49ef3_render","scrollLeft","padding","background","tr","TopFixTablevue_type_template_id_1bc49ef3_staticRenderFns","TopFixTablevue_type_script_lang_ts_","external_commonjs_vue_commonjs2_vue_root_Vue_default","a","component","watch","oldVal","com_TopFixTablevue_type_script_lang_ts_","normalizeComponent","scriptExports","render","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","__file","TopFixTable","TopLeftFixTablevue_type_template_id_40f11108_render","isShowColIndex","isShowRowIndex","border-width","TopLeftFixTablevue_type_template_id_40f11108_staticRenderFns","TopLeftFixTablevue_type_script_lang_ts_","com_TopLeftFixTablevue_type_script_lang_ts_","TopLeftFixTable_component","TopLeftFixTable","LeftFixTablevue_type_template_id_8c994d5e_render","LeftFixTablevue_type_template_id_8c994d5e_staticRenderFns","LeftFixTablevue_type_script_lang_ts_","com_LeftFixTablevue_type_script_lang_ts_","LeftFixTable_component","LeftFixTable","SelectBoxvue_type_template_id_44dc8f2e_render","display","$selectBoxEntity","table","selectBoxType","top","left","SelectBoxvue_type_template_id_44dc8f2e_staticRenderFns","SelectBoxvue_type_script_lang_ts_","String","com_SelectBoxvue_type_script_lang_ts_","SelectBox_component","SelectBox","extendStatics","b","setPrototypeOf","__extends","__","baseClone","Obj","excludeReg","keepReg","withFunction","buf","needContinue","test","needKeep","UtilsConfig","keepClone","obj","myObejctClone","$renderState","hasrendered","tmpObject","val_1","isArray","item","clone","baseSlice","array","start","end","result","dropRight","last","S4","Math","random","toString","substring","guid","objectSet","targetObect","sourceObject","setType","sourceObjectClone","replaceAll","targetString","oldStr","newStr","reg","RegExp","res","replace","getA_Z","shang","floor","yushu","fromCharCode","Formula_Formula","Formula","complexEval","str","multObj","simpleEval","substr","valueArray","markArray","tempValue","ch","split","isOper","dv","pop","mark","simpleTwoEval","dv1","reverseArray","v1","v2","value1","value2","parseFloat","toFixed","oldArray","newArray","size","cellStr2Position","cellStr","exec","colStr","rowStr","curlyBracesHandle","container","regObj","rowNum","formula","selfCol","colNum","percentHandle","percentReg","group1","Number","BaseContainerConfig","config","userData","BaseCellConfig_BaseCellConfig","_super","BaseCellConfig","oldValue","selectionStart","fontSize","float","color","textAlign","whiteSpace","textOverflow","overflow","boxSizing","userSelect","normal","dbclick","optionList","readonly","formatter","verification","state","hasVerification","vTypes","message","integer","notNull","number","date","decimal","CellContainerConfig_CellContainerConfig","CellContainerConfig","widthNum","heightNum","widthChildNum","heightChildNum","widthSelfNum","heightSelfNum","paddingLeftNum","children","isRootParent","$inSystem","hideType","$positionCheck","side1","TheadContainerConfig_TheadContainerConfig","TheadContainerConfig","canSum","canDragResize","$resizeChildren","selfContainers","theadPosition","tbodyConfig","TreeContainerConfig_TreeContainerConfig","TreeContainerConfig","heighSelftNum","allChildren","cursor","close","paths","open","loading","IndexContainerConfig_IndexContainerConfig","IndexContainerConfig","BaseTheadConfig_BaseTheadConfig","BaseTheadConfig","$leafIndexList","$leafIndexList2","IndexTheadConfig_IndexTheadConfig","IndexTheadConfig","zIndex","BaseTableConfig_BaseTableConfig","BaseTableConfig","tableName","debugLevel","isOverflowX","isOverflowY","maxWidth","maxHeight","scrollBarWidth","scrollBarHeight","defaultExpandedIds","mainTable","topTable","leftTable","BaseTbodyConfig_BaseTbodyConfig","BaseTbodyConfig","topIndexList","leftIndexList","bodyData","TbodyContainerConfig_TbodyContainerConfig","TbodyContainerConfig","separator","SelfContainerConfig_SelfContainerConfig","SelfContainerConfig","show","rightNum","right","tips","DragTableConfig_DragTableConfig","DragTableConfig","baseCell","baseContainer","cellContainer","topThead","leftThead","topIndexThead","leftIndexThead","theadContainer","topIndexContainer","leftIndexContainer","selfContainer","tbodyContainer","baseTbody","getInstance","instances","BaseCell_BaseCell","BaseCell","param","nullReplace","hasFormula","tmpValue","canClickAdd","selectOption","$warningMessage","inRender","$ICObject","paramClone","initBeforeSetData","setCellData","$groupId","$parent","$dragTableConfig","setConfig","configCopy","error","console","doVerify","vType","isNaN","mathObj","num","format","fType","round","tmp","repairRes","dotIndex","zeroCount","nowBit","fill","join","pow","cellData","setProperty","ev","checkHasFormula","checkLastCharStatus","srcElement","stopPropagation","update","parentContainer","warning","sourceContainer","getContainer","setCell","$positionManager","canFocus","$editContainer","rootParentSendMsg","ev_type","event","objectName","msg","alert","selectedIndex","checkStatus","parnetContainer","rootParent","$rootParent","posiitonReg","formulaContent_1","valueBack_1","ICObject_1","tmpNameStr","newPositonStr","search","lastCharIndex","char","log","regStart","regEnd","PositionManager_PositionManager","PositionManager","positionMap","treeContainerMap","Map","hideContainerMap","instance","clearPositionMapById","copyPosition","tableObj","colObj","getTopIndexContainer","cloneP","getLeftIndexContainer","getColObj","getRowObj","setPositionMap","saveLastPositionMap","tableClone","lastPosition","Subject","callbackList","subscribe","callback","fun","arg","unsubscribe","splice","sendMsg","notify","resultList","BaseContainer_BaseContainer","BaseContainer","$subject","setContainerData","$rootTable","containerData","containerData2","weight1","weight2","callBack","paramClone2","getDataByWeight","setChildren","child","createContain","addChild","targetIndex","deletChild","count","needDeleteItChildren","hasDeleteContainer","childrenStartIndex_1","replaceChild","newChild","childrenList_1","subjectSend","preventDefault","returnValue","data1","data2","resData","dk1","dk2","wk1","wk2","sonKey","sonValue","CellContainer_CellContainer","CellContainer","conditionHandle","which","setWidthOrHeight","indexContainer","delThisRow","delType","delOneRowCol","pastedText","clipboardData","getData","originalEvent","BaseStyle","addBackgroundColor","dom","removeBackgroundColor","removeProperty","addBorder","borderBearing","borderColor","removeBorder","checkBearing","rule","currentTarget","xLeft","offsetWidth","xright","yTop","offsetHeight","yBottom","bottom","offsetY","offsetX","getOffsetTopByBody","el","offsetTop","tagName","offsetParent","getOffsetLeftByBody","offsetLeft","SelfContainer_SelfContainer","SelfContainer","resize","TreeContainer_TreeContainer","TreeContainer","nextStatus","parnent","loop","hideChildren","checkAndChange","childInnerContainer","openChildrenCount","$treeParent","paddingLeft","getContainerByTheadPosition","init","addChildren","openOrClose","operation","showAndHide","addChildrenAsy","then","thisParent","dataClone","Factory_ContainerFactory","theadParent_1","insertIndex_1","cleanChildrenInSystem","addContainer","delCount","addByTree","theadDelete","targetContainerPosition","withChildren","ContainerFactory","createContainer","TheadContainer_TheadContainer","TheadContainer","$dragType","attachParam","setSelfContainers","side1Name","side2Name","hideTypeTemporary","resetByIndexContainer","maxGridSide2","maxStyleSide2","sumGridSide1","sumStyleSide1","resizeChildren","childPosition","makeChildrenSameSide2","innerContainerRender","selfContainerRender","paddingRight","paddingRightNum","otherRes","changeEveryChildProperty","getTopList","list","cloneP_1","tmpP","getLeftList","bear","currentTargetDom","clear","targetDom_1","initMouseLeftX","pageX","initMouseTopY","pageY","initWidth","clientWidth","initHeight","clientHeight","initLeft","initTop","x","y","oneColRowObj_1","delSide1_1","sideName_1","mousemove_1","e","minWidth","container_1","oldSide","mouseup_1","removeEventListener","addEventListener","dragStartData","operationType","dataTransfer","setData","JSON","stringify","targetDom","resetDragOverStyle","bearing","stringData","parse","dragTsData","targetContainer","targetBearing","source","res_1","increaseTheLeafChildHeight","diffGrid","diffStyle","selfStyleSide2","BaseThead_BaseThead","BaseThead","maxLayerContainer","canDo","convert2TheadTopList","basePosition","convert2TheadLeftList","TbodyContainer_TbodyContainer","TbodyContainer","renderByThead","BaseTbody_BaseTbody","BaseTbody","setRowData","leftId","rowData","topId","renderId","setColData","colData","setTbodyData","addOneRow","keyString","leftThId","leftIndexTh","topIndexTh","sumContainer","$theadContainer","leftThTbdoyConfig","topThTbdoyConfig","containerList","stringPosition","weight","convert","trData","output","valueType","objectData","arrayObjectData","arrayArrayData","trObject","trArray","outputByObject","tmpTr_1","trData_1","cleanTimeOutTbody","newData","IndexContainer_IndexContainer","IndexContainer","IndexThead_IndexThead","IndexThead","fastAddChild","copyTh","TableContainer_TableContainer","TableContainer","$keyDownSet","Set","delete","getEntity","theadTopIndexEntity","theadLeftIndexEntity","tbodyEntity","SelectBox_SelectBox","$TableContainer","selectMap","selectList","stlye","baseTable","createSelectContainer","rootTable","topStyle","borderBottom","bottomStyle","borderTop","leftStyle","borderLeft","rightStyle","currentCotanier","has","hasSet","callbackfn","thisArg","BaseTable_BaseTable","BaseTable","setExpandedContainer","getAllHideContainer","backgroundColor","initSubject","tableConfig","copyJson","initAfterSetData","onDestroy","onReceiveMsg","initTable","colIndex","theadAdd","targetParentPosition","params","paramTheadAdd","needAddThead","lastSelectContainer","insertIndex","sourceContainerData","lastSCParam","leftContainer","defParam","addOneCol","topContainer","theadAddReplace","targetThead","targetIndexPosition","targetParentContainer","tmpContainer","targetWithChildren","theadMove","souceIndexPosition","souceParentPosition","sourceThead","sourceParentContainer","theadType","canDel","theadMoveReplace","addSum","newParentContainData","mustContainerData","addParam","lSCParam","needDelTheadContainer","delContainerWithParentWhoHasNoChild","delContainer","Entity","delIndex","IndexEntity","getTbodyData","outPutType","resizeTable","indexTheadRender","theadTopHeight","theadLeftWidth","topBasePosition","leftBasePosition","topLeftCell","renderTBody","Table","addParent","fristContainer","isSameParent","theadEntity","sourceContainerList_1","sort","tmpContainer_1","getTheadLeavesList1","merge","canMerge","confirm","pre","lat","disMerge","slice","theadTopWidth","theadLeftHeight","topIndexWidth","leftIndexHeight","resizeTableWidth","thContainer","$IndexContainer","resizeTableHeight","originalColTh","rowIndex","originalRowTh","dropHandle","position_1","targetWithChildren_1","sourceWithChildren_1","targetContainer_1","sourceContainer_1","operationType_1","handleInner","handleTop","targetContainer1Position","sourceContainerSource","targetParentPosition1","targetContainerIndex","processThead","source2ParentPosition","tmpChild","hasChild","mutiPaste","lastContainer","isSameParentSet","afterContainerClick","afterContainerRClick","processTheadData","editContainer","valueArr","addValue","elInput","activeElement","selectionEnd","topLeftPositon","overflowX","overflowY","TableComvue_type_script_lang_ts_","components","created","views_TableComvue_type_script_lang_ts_","TableCom_component","TableCom","DragTable_DragTable","DragTable","defConfig","$config","version","tableList","tableMap","addTable","deleteTable","currentTable","ontableChange","createTable","unionParam","tmpTable","serialize","jsonList","deserialize","__webpack_exports__"],"mappings":"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","file":"drag-table.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drag-table\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"drag-table\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fae3\");\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableCom.vue?vue&type=style&index=0&id=5f04bc67&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableCom.vue?vue&type=style&index=0&id=5f04bc67&scoped=true&lang=css&\"","/**\n  * vue-class-component v6.2.0\n  * (c) 2015-present Evan You\n  * @license MIT\n  */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(require('vue'));\n\nvar hasProto = { __proto__: [] } instanceof Array;\nfunction createDecorator(factory) {\n    return function (target, key, index) {\n        var Ctor = typeof target === 'function'\n            ? target\n            : target.constructor;\n        if (!Ctor.__decorators__) {\n            Ctor.__decorators__ = [];\n        }\n        if (typeof index !== 'number') {\n            index = undefined;\n        }\n        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });\n    };\n}\nfunction mixins() {\n    var Ctors = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Ctors[_i] = arguments[_i];\n    }\n    return Vue.extend({ mixins: Ctors });\n}\nfunction isPrimitive(value) {\n    var type = typeof value;\n    return value == null || (type !== \"object\" && type !== \"function\");\n}\nfunction warn(message) {\n    if (typeof console !== 'undefined') {\n        console.warn('[vue-class-component] ' + message);\n    }\n}\n\nfunction collectDataFromConstructor(vm, Component) {\n    // override _init to prevent to init as Vue instance\n    var originalInit = Component.prototype._init;\n    Component.prototype._init = function () {\n        var _this = this;\n        // proxy to actual vm\n        var keys = Object.getOwnPropertyNames(vm);\n        // 2.2.0 compat (props are no longer exposed as self properties)\n        if (vm.$options.props) {\n            for (var key in vm.$options.props) {\n                if (!vm.hasOwnProperty(key)) {\n                    keys.push(key);\n                }\n            }\n        }\n        keys.forEach(function (key) {\n            if (key.charAt(0) !== '_') {\n                Object.defineProperty(_this, key, {\n                    get: function () { return vm[key]; },\n                    set: function (value) { return vm[key] = value; },\n                    configurable: true\n                });\n            }\n        });\n    };\n    // should be acquired class property values\n    var data = new Component();\n    // restore original _init to avoid memory leak (#209)\n    Component.prototype._init = originalInit;\n    // create plain data object\n    var plainData = {};\n    Object.keys(data).forEach(function (key) {\n        if (data[key] !== undefined) {\n            plainData[key] = data[key];\n        }\n    });\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(Component.prototype instanceof Vue) && Object.keys(plainData).length > 0) {\n            warn('Component class must inherit Vue or its descendant class ' +\n                'when class property is used.');\n        }\n    }\n    return plainData;\n}\n\nvar $internalHooks = [\n    'data',\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeDestroy',\n    'destroyed',\n    'beforeUpdate',\n    'updated',\n    'activated',\n    'deactivated',\n    'render',\n    'errorCaptured' // 2.5\n];\nfunction componentFactory(Component, options) {\n    if (options === void 0) { options = {}; }\n    options.name = options.name || Component._componentTag || Component.name;\n    // prototype props.\n    var proto = Component.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n            return;\n        }\n        // hooks\n        if ($internalHooks.indexOf(key) > -1) {\n            options[key] = proto[key];\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (typeof descriptor.value === 'function') {\n            // methods\n            (options.methods || (options.methods = {}))[key] = descriptor.value;\n        }\n        else if (descriptor.get || descriptor.set) {\n            // computed properties\n            (options.computed || (options.computed = {}))[key] = {\n                get: descriptor.get,\n                set: descriptor.set\n            };\n        }\n    });\n    (options.mixins || (options.mixins = [])).push({\n        data: function () {\n            return collectDataFromConstructor(this, Component);\n        }\n    });\n    // decorate options\n    var decorators = Component.__decorators__;\n    if (decorators) {\n        decorators.forEach(function (fn) { return fn(options); });\n        delete Component.__decorators__;\n    }\n    // find super\n    var superProto = Object.getPrototypeOf(Component.prototype);\n    var Super = superProto instanceof Vue\n        ? superProto.constructor\n        : Vue;\n    var Extended = Super.extend(options);\n    forwardStaticMembers(Extended, Component, Super);\n    return Extended;\n}\nvar reservedPropertyNames = [\n    // Unique id\n    'cid',\n    // Super Vue constructor\n    'super',\n    // Component options that will be used by the component\n    'options',\n    'superOptions',\n    'extendOptions',\n    'sealedOptions',\n    // Private assets\n    'component',\n    'directive',\n    'filter'\n];\nfunction forwardStaticMembers(Extended, Original, Super) {\n    // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable\n    Object.getOwnPropertyNames(Original).forEach(function (key) {\n        // `prototype` should not be overwritten\n        if (key === 'prototype') {\n            return;\n        }\n        // Some browsers does not allow reconfigure built-in properties\n        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);\n        if (extendedDescriptor && !extendedDescriptor.configurable) {\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        // If the user agent does not support `__proto__` or its family (IE <= 10),\n        // the sub class properties may be inherited properties from the super class in TypeScript.\n        // We need to exclude such properties to prevent to overwrite\n        // the component options object which stored on the extended constructor (See #192).\n        // If the value is a referenced value (object or function),\n        // we can check equality of them and exclude it if they have the same reference.\n        // If it is a primitive value, it will be forwarded for safety.\n        if (!hasProto) {\n            // Only `cid` is explicitly exluded from property forwarding\n            // because we cannot detect whether it is a inherited property or not\n            // on the no `__proto__` environment even though the property is reserved.\n            if (key === 'cid') {\n                return;\n            }\n            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);\n            if (!isPrimitive(descriptor.value)\n                && superDescriptor\n                && superDescriptor.value === descriptor.value) {\n                return;\n            }\n        }\n        // Warn if the users manually declare reserved properties\n        if (process.env.NODE_ENV !== 'production'\n            && reservedPropertyNames.indexOf(key) >= 0) {\n            warn(\"Static property name '\" + key + \"' declared on class '\" + Original.name + \"' \" +\n                'conflicts with reserved property name of Vue internal. ' +\n                'It may cause unexpected behavior of the component. Consider renaming the property.');\n        }\n        Object.defineProperty(Extended, key, descriptor);\n    });\n}\n\nfunction Component(options) {\n    if (typeof options === 'function') {\n        return componentFactory(options);\n    }\n    return function (Component) {\n        return componentFactory(Component, options);\n    };\n}\n(function (Component) {\n    function registerHooks(keys) {\n        $internalHooks.push.apply($internalHooks, keys);\n    }\n    Component.registerHooks = registerHooks;\n})(Component || (Component = {}));\nvar Component$1 = Component;\n\nexports.default = Component$1;\nexports.createDecorator = createDecorator;\nexports.mixins = mixins;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.myTable)?_c('div',{staticClass:\"clearfix\",staticStyle:{\"position\":\"relative\"},on:{\"keydown\":function($event){_vm.myTable.onKeyDown($event)},\"keyup\":function($event){_vm.myTable.onKeyUp($event)}}},[(_vm.myTable.hasLeftFixedTable && _vm.myTable.hasTopFixedTable)?_c('TopLeftFixTable',{attrs:{\"inputTable\":_vm.myTable}}):_vm._e(),(_vm.myTable.hasLeftFixedTable)?_c('LeftFixTable',{attrs:{\"inputTable\":_vm.myTable}}):_vm._e(),(_vm.myTable.hasTopFixedTable)?_c('TopFixTable',{attrs:{\"inputTable\":_vm.myTable}}):_vm._e(),_c('div',{staticClass:\"main-table\",style:(_vm.myTable.style.mainTable),attrs:{\"scrollTop\":_vm.myTable.style.scrollTop},on:{\"scroll\":function($event){_vm.myTable.onScroll($event)}}},[(_vm.myTable && _vm.myTable.$rowNumber[0] && _vm.myTable.$colNumber[0])?_c('table',{staticClass:\"my-table\",attrs:{\"cellspacing\":\"0\",\"cellpadding\":\"0\",\"border\":\"0\"}},[(_vm.myTable.isShowColIndex)?_c('tr',[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",style:({width:_vm.myTable.$rowNumber[0].style.width,height:_vm.myTable.$colNumber[0].style.height}),attrs:{\"tabindex\":\"1\"}},[_c('div',{style:({width:_vm.myTable.$rowNumber[0].style.width,height:_vm.myTable.$colNumber[0].style.height,lineHeight:_vm.myTable.$colNumber[0].style.height})},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.isTopLeftShow? _vm.myTable.topLeftValue:'')+\"\\n          \")])]):_vm._e(),_vm._l((_vm.myTable.$colNumber),function(th,i){return _c('th',{key:\"col\"+i,staticClass:\"colNumber\",style:([th.style]),on:{\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)},\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)}}},[_c('div',{style:([th.cell.style])},[_vm._v(_vm._s(th.cell.content))])])})],2):_vm._e(),_vm._l((_vm.myTable.$rowNumber),function(th,i){return _c('tr',{key:th.id},[(i < _vm.myTable.$tableHeadTop.length)?[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",on:{\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)}}},[_c('div',{style:([th.cell.style])},[_vm._v(\"\\n              \"+_vm._s(_vm.myTable.hasLeftFixedTable ?'':th.cell.content)+\"\\n            \")])]):_vm._e(),(i===0 && _vm.myTable.$tableHeadLeft[0] && _vm.myTable.$tableHeadTop[0])?_c('th',{staticClass:\"colNumber\",style:([_vm.myTable.tableHeadTopLeft.style]),attrs:{\"tabindex\":\"1\",\"colspan\":_vm.myTable.theadLeftEntity.side2,\"rowspan\":_vm.myTable.theadTopEntity.side2}},[_c('div',{style:([_vm.myTable.tableHeadTopLeft.cell.style])})]):_vm._e(),_vm._l((_vm.myTable.$tableHeadTop[i]),function(th,j){return _c('th',{key:th.id,style:([th.style]),attrs:{\"colspan\":th.span1,\"rowspan\":th.span2,\"draggable\":th.draggable,\"tabindex\":\"1\"},on:{\"click\":function($event){th.onClick($event)},\"dragstart\":function($event){th.dragStart($event)},\"dragend\":function($event){th.dragEnd($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)},\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)}}},[(th.treeContainer.show)?_c('svg',{style:(th.treeContainer.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){th.treeContainer.onClick($event)}}},_vm._l((th.treeContainer.svg[th.treeContainer.$openStatus].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e(),_vm._l((th.selfContainers),function(sc){return (sc.show)?_c('svg',{style:(sc.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){sc.onClick($event)}}},_vm._l((sc.svg[sc.type].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e()}),(th.cell.displayClass[th.cell.status].displayType == 'text')?_c('div',{style:([th.cell.style]),attrs:{\"title\":th.cell.title},on:{\"dblclick\":function($event){th.cell.onDbClick($event)}}},[_vm._v(\"\\n              \"+_vm._s(th.cell.content)+\"\\n            \")]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'input')?_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],style:([th.cell.style]),domProps:{\"value\":(th.cell.value)},on:{\"mouseover\":function($event){th.cell.onMouseOver($event)},\"blur\":function($event){th.cell.inputOnBlur($event,true)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(th.cell, \"value\", $event.target.value)}}})]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'button')?_c('div',[_c('button',{on:{\"click\":function($event){th.cell.onClick($event)}}},[_vm._v(_vm._s(th.cell.content))])]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'select')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],style:([th.cell.style]),attrs:{\"tabindex\":\"1\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(th.cell, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){th.cell.onChange($event)}],\"blur\":function($event){th.cell.onBlur($event)}}},_vm._l((th.cell.select.optionList),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.text}},[_vm._v(_vm._s(option.text))])})):_vm._e()],2)})]:[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",style:(th.style),on:{\"mousedown\":function($event){th.onMouseDown($event)},\"mouseout\":function($event){th.onMouseOut($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)}}},[_c('div',{style:([th.cell.style])},[_vm._v(\"\\n              \"+_vm._s(th.cell.content)+\"\\n            \")])]):_vm._e(),_vm._l((_vm.myTable.$tableHeadLeft[i - _vm.myTable.$tableHeadTop.length]),function(th,j){return _c('th',{key:th+j,style:([th.style]),attrs:{\"tabindex\":\"1\",\"draggable\":th.draggable,\"colspan\":th.span2,\"rowspan\":th.span1},on:{\"click\":function($event){th.onClick($event)},\"blur\":function($event){th.onBlur($event)},\"dragstart\":function($event){th.dragStart($event)},\"dragend\":function($event){th.dragEnd($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)},\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)}}},[(th.treeContainer.show)?_c('svg',{style:(th.treeContainer.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){th.treeContainer.onClick($event)}}},_vm._l((th.treeContainer.svg[th.treeContainer.$openStatus].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e(),_vm._l((th.selfContainers),function(sc){return (sc.show)?_c('svg',{style:(sc.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){sc.onClick($event)}}},_vm._l((sc.svg[sc.type].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e()}),(th.cell.displayClass[th.cell.status].displayType == 'text')?_c('div',{style:([th.cell.style]),attrs:{\"title\":th.cell.title},on:{\"dblclick\":function($event){th.cell.onDbClick()}}},[_vm._v(\"\\n              \"+_vm._s(th.cell.content)+\"\\n            \")]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'input')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],staticStyle:{\"background-color\":\"#fff\"},style:([th.cell.style]),domProps:{\"value\":(th.cell.value)},on:{\"mouseover\":function($event){th.cell.onMouseOver($event)},\"blur\":function($event){th.cell.inputOnBlur($event,true)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(th.cell, \"value\", $event.target.value)}}}):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'button')?_c('button',{style:([th.cell.style]),on:{\"click\":function($event){th.cell.onClick($event)}}},[_vm._v(_vm._s(th.cell.content))]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'select')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],style:([th.cell.style]),attrs:{\"tabindex\":\"1\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(th.cell, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){th.cell.onChange($event)}],\"blur\":function($event){th.cell.onBlur($event)}}},_vm._l((th.cell.select.optionList),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.text}},[_vm._v(_vm._s(option.text))])})):_vm._e()],2)}),_vm._l((_vm.myTable.$tableBody[i - _vm.myTable.$tableHeadTop.length]),function(td,j){return _c('td',{key:1 + j,style:([td.style]),attrs:{\"tabindex\":\"1\"},on:{\"click\":function($event){td.onClick($event)},\"mousedown\":function($event){td.onMouseDown($event)},\"blur\":function($event){td.onBlur($event)},\"paste\":function($event){td.onPaste($event)}}},[(td.cell.displayClass[td.cell.status].displayType == 'text')?_c('div',{style:([td.cell.style]),on:{\"dblclick\":function($event){td.cell.onDbClick($event)}}},[_vm._v(_vm._s(td.cell.content)+\"\\n            \")]):_vm._e(),(td.cell.displayClass[td.cell.status].displayType == 'input')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(td.cell.value),expression:\"td.cell.value\"}],style:([td.cell.style]),attrs:{\"type\":\"text\"},domProps:{\"value\":(td.cell.value)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(td.cell, \"value\", $event.target.value)},function($event){td.cell.onInput($event)}],\"mouseup\":function($event){td.cell.onMouseUp($event)},\"mouseover\":function($event){td.cell.onMouseOver($event)},\"focus\":function($event){td.cell.onFocus($event)},\"blur\":function($event){td.cell.inputOnBlur($event,true)},\"keydown\":function($event){td.cell.onKeyDown($event)}}}):_vm._e(),(td.cell && td.cell.displayClass[td.cell.status].displayType == 'select')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(td.cell.value),expression:\"td.cell.value\"}],style:([td.cell.style]),attrs:{\"tabindex\":\"1\"},on:{\"blur\":function($event){td.cell.onBlur($event)},\"mouseover\":function($event){td.cell.onMouseOver($event)},\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(td.cell, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){td.cell.onChange($event)}]}},_vm._l((td.cell.select.optionList),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.text}},[_vm._v(_vm._s(option.text))])})):_vm._e()])})]],2)})],2):_vm._e(),(_vm.myTable)?_c('SelectBox',{attrs:{\"inputTable\":_vm.myTable,\"positionType\":\"main\"}}):_vm._e()],1),_vm._m(0)],1):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"rightMeu\"}},[_c('ul')])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fix-top-table\",style:(_vm.myTable.style.topTable),domProps:{\"scrollLeft\":_vm.myTable.style.scrollLeft}},[(_vm.myTable && _vm.myTable.$rowNumber[0] && _vm.myTable.$colNumber[0])?_c('table',{staticClass:\"my-table\",attrs:{\"cellspacing\":\"0\",\"cellpadding\":\"0\",\"border\":\"0\"}},[_c('thead',[(_vm.myTable.isShowColIndex)?_c('tr',[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",style:({padding:_vm.myTable.$rowNumber[0].style.padding,\n          background:_vm.myTable.$rowNumber[0].style.background}),attrs:{\"tabindex\":\"1\"}},[_c('div',{style:({width:_vm.myTable.$rowNumber[0].style.width,\n          height:_vm.myTable.$colNumber[0].style.height,lineHeight:_vm.myTable.$colNumber[0].style.height})},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.isTopLeftShow? _vm.myTable.topLeftValue:'')+\"\\n          \")])]):_vm._e(),_vm._l((_vm.myTable.$colNumber),function(th,i){return _c('th',{key:\"col\"+i,staticClass:\"colNumber\",style:(th.style),attrs:{\"tabindex\":\"1\"},on:{\"mousedown\":function($event){th.onMouseDown($event)},\"mouseout\":function($event){th.onMouseOut($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"click\":function($event){th.onClick($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)}}},[_c('div',{style:(th.cell.style)},[_vm._v(_vm._s(th.cell.content))])])})],2):_vm._e(),_vm._l((_vm.myTable.$tableHeadTop),function(tr,i){return _c('tr',{key:\"tr\"+i},[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",style:(_vm.myTable.$rowNumber[i].style),attrs:{\"tabindex\":\"1\"},on:{\"mousedown\":function($event){_vm.myTable.$rowNumber[i].onMouseDown($event)},\"mousemove\":function($event){_vm.myTable.$rowNumber[i].onMouseMove($event)},\"mouseout\":function($event){_vm.myTable.$rowNumber[i].onMouseOut($event)},\"dragover\":function($event){_vm.myTable.$rowNumber[i].dragOver($event)},\"dragleave\":function($event){_vm.myTable.$rowNumber[i].dragLeave($event)},\"dragenter\":function($event){_vm.myTable.$rowNumber[i].dragEnter($event)},\"drop\":function($event){_vm.myTable.$rowNumber[i].drop($event)}}},[_c('div',{style:(_vm.myTable.$rowNumber[i].cell.style)},[_vm._v(_vm._s(_vm.myTable.$rowNumber[i].cell.content))])]):_vm._e(),(i===0 && _vm.myTable.$tableHeadLeft[0] && _vm.myTable.$tableHeadTop[0])?_c('th',{staticClass:\"colNumber\",style:(_vm.myTable.tableHeadTopLeft.style),attrs:{\"tabindex\":\"1\",\"colspan\":_vm.myTable.theadLeftEntity.side2,\"rowspan\":_vm.myTable.theadTopEntity.side2}},[_c('div',{style:(_vm.myTable.tableHeadTopLeft.cell.style)})]):_vm._e(),_vm._l((tr),function(th,j){return _c('th',{key:th.id +j,staticClass:\"top-th\",style:(th.style),attrs:{\"tabindex\":\"1\",\"draggable\":th.draggable,\"colspan\":th.span1,\"rowspan\":th.span2},on:{\"blur\":function($event){th.onBlur($event)},\"click\":function($event){th.onClick($event)},\"dragstart\":function($event){th.dragStart($event)},\"dragend\":function($event){th.dragEnd($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)},\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)}}},[(th.treeContainer.show)?_c('svg',{style:(th.treeContainer.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){th.treeContainer.onClick($event)}}},_vm._l((th.treeContainer.svg[th.treeContainer.$openStatus].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e(),_vm._l((th.selfContainers),function(sc){return (sc.show)?_c('svg',{style:(sc.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){sc.onClick($event)}}},_vm._l((sc.svg[sc.type].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e()}),(th.cell.displayClass[th.cell.status].displayType == 'text')?_c('div',{style:([th.cell.style]),attrs:{\"title\":th.cell.title},on:{\"dblclick\":function($event){th.cell.onDbClick()}}},[_vm._v(\"\\n            \"+_vm._s(th.cell.content)+\"\\n          \")]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'input')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],style:([th.cell.style]),domProps:{\"value\":(th.cell.value)},on:{\"mouseover\":function($event){th.cell.onMouseOver($event)},\"blur\":function($event){th.cell.inputOnBlur($event,true)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(th.cell, \"value\", $event.target.value)}}}):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'button')?_c('button',{style:([th.cell.style]),on:{\"click\":function($event){th.cell.onClick($event)}}},[_vm._v(_vm._s(th.cell.content))]):_vm._e()],2)})],2)})],2)]):_vm._e(),(_vm.myTable)?_c('SelectBox',{attrs:{\"inputTable\":_vm.myTable,\"positionType\":\"top\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport { BaseTable } from \"../../viewModule/table/BaseTable\";\nexport default Vue.component(\"TopFixTable\", {\n  props: {\n    inputTable: Object\n  },\n  data: function() {\n    return {\n      myTable: this.inputTable\n    };\n  },\n  watch: {\n    inputTable: function(val, oldVal) {\n      this.myTable = val || oldVal;\n    }\n  }\n});\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopFixTable.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopFixTable.vue?vue&type=script&lang=ts&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./TopFixTable.vue?vue&type=template&id=1bc49ef3&\"\nimport script from \"./TopFixTable.vue?vue&type=script&lang=ts&\"\nexport * from \"./TopFixTable.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TopFixTable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fix-top-left-table\"},[(_vm.myTable && _vm.myTable.$rowNumber[0] && _vm.myTable.$colNumber[0])?_c('table',{staticClass:\"my-table left-top-table\",attrs:{\"cellspacing\":\"0\",\"cellpadding\":\"0\",\"border\":\"0\"}},[_c('thead',[(_vm.myTable.isShowColIndex && _vm.myTable.isShowRowIndex)?_c('tr',[_c('th',{staticClass:\"rowNumber\",style:({padding:_vm.myTable.$rowNumber[0].style.padding,background:_vm.myTable.$rowNumber[0].style.background}),attrs:{\"tabindex\":\"1\"}},[_c('div',{style:({width:_vm.myTable.$rowNumber[0].style.width, height:_vm.myTable.$colNumber[0].style.height,lineHeight:_vm.myTable.$colNumber[0].style.height})},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.isTopLeftShow? _vm.myTable.topLeftValue:'')+\"\\n          \")])]),_vm._l((_vm.myTable.theadLeftEntity.$leafIndexList2),function(th,i){return _c('th',{staticClass:\"colNumber\",style:(_vm.myTable.$colNumber[i].style),attrs:{\"tabindex\":\"1\"},on:{\"mousedown\":function($event){_vm.myTable.$colNumber[i].onMouseDown($event)},\"mouseout\":function($event){_vm.myTable.$colNumber[i].onMouseOut($event)},\"mousemove\":function($event){_vm.myTable.$colNumber[i].onMouseMove($event)},\"click\":function($event){_vm.myTable.$colNumber[i].onClick($event)},\"dragenter\":function($event){_vm.myTable.$colNumber[i].dragEnter($event)},\"dragleave\":function($event){_vm.myTable.$colNumber[i].dragLeave($event)},\"dragover\":function($event){_vm.myTable.$colNumber[i].dragOver($event)},\"drop\":function($event){_vm.myTable.$colNumber[i].drop($event)}}},[_c('div',{style:(_vm.myTable.$colNumber[i].cell.style)},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.$colNumber[i].cell.content)+\"\\n          \")])])})],2):_vm._e(),_vm._l((_vm.myTable.$tableHeadTop),function(tr,i){return (_vm.myTable.isShowRowIndex)?_c('tr',{key:tr+i},[_c('th',{staticClass:\"rowNumber\",style:(_vm.myTable.$rowNumber[i].style),attrs:{\"tabindex\":\"1\"},on:{\"click\":function($event){_vm.myTable.$rowNumber[i].onClick($event)},\"dragenter\":function($event){_vm.myTable.$rowNumber[i].dragEnter($event)},\"dragleave\":function($event){_vm.myTable.$rowNumber[i].dragLeave($event)},\"dragover\":function($event){_vm.myTable.$rowNumber[i].dragOver($event)},\"drop\":function($event){_vm.myTable.$rowNumber[i].drop($event)},\"mousedown\":function($event){_vm.myTable.$rowNumber[i].onMouseDown($event)},\"mouseout\":function($event){_vm.myTable.$rowNumber[i].onMouseOut($event)},\"mousemove\":function($event){_vm.myTable.$rowNumber[i].onMouseMove($event)}}},[_c('div',{style:([_vm.myTable.$rowNumber[i].cell.style]),attrs:{\"title\":_vm.myTable.$rowNumber[i].cell.content}},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.$rowNumber[i].cell.content)+\"\\n          \")])]),(i === 0 && _vm.myTable.$tableHeadLeft[0] && _vm.myTable.$tableHeadTop[0])?_c('th',{staticClass:\"colNumber\",staticStyle:{\"border-width\":\"1px\"},style:(_vm.myTable.tableHeadTopLeft.style),attrs:{\"tabindex\":\"1\",\"colspan\":_vm.myTable.theadLeftEntity.side2,\"rowspan\":_vm.myTable.theadTopEntity.side2}},[_c('div',{style:(_vm.myTable.tableHeadTopLeft.cell.style)})]):_vm._e()]):_vm._e()})],2)]):_vm._e(),(_vm.myTable)?_c('SelectBox',{attrs:{\"inputTable\":_vm.myTable,\"positionType\":\"top-left\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport { BaseTable } from \"../../viewModule/table/BaseTable\";\nexport default Vue.component(\"TopLeftFixTable\", {\n  props: {\n    inputTable: Object\n  },\n  data: function() {\n    return {\n      myTable: this.inputTable\n    };\n  },\n  watch: {\n    inputTable: function(val, oldVal) {\n      this.myTable = val || oldVal;\n    }\n  }\n});\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopLeftFixTable.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopLeftFixTable.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TopLeftFixTable.vue?vue&type=template&id=40f11108&\"\nimport script from \"./TopLeftFixTable.vue?vue&type=script&lang=ts&\"\nexport * from \"./TopLeftFixTable.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TopLeftFixTable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fix-left-table\",style:(_vm.myTable.style.leftTable),domProps:{\"scrollTop\":_vm.myTable.style.scrollTop}},[(_vm.myTable && _vm.myTable.$rowNumber[0] && _vm.myTable.$colNumber[0])?_c('table',{staticClass:\"my-table left-table\"},[_c('thead',[(_vm.myTable.isShowColIndex)?_c('tr',[_c('th',{staticClass:\"rowNumber\",style:({padding:(_vm.myTable.$rowNumber[0]||_vm.myTable.$colNumber[0]||{}).style.padding,background:(_vm.myTable.$rowNumber[0]||_vm.myTable.$colNumber[0]||{}).style.background}),attrs:{\"tabindex\":\"1\"}},[_c('div',{style:({width:_vm.myTable.$rowNumber[0].style.width,height:_vm.myTable.$colNumber[0].style.height,lineHeight:_vm.myTable.$colNumber[0].style.height})},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.isTopLeftShow? _vm.myTable.topLeftValue:'')+\"\\n          \")])]),_vm._l((_vm.myTable.theadLeftEntity.$leafIndexList2),function(th,i){return _c('th',{staticClass:\"colNumber\",style:(_vm.myTable.$colNumber[i].style)},[_c('div',{style:(_vm.myTable.$colNumber[i].cell.style)},[_vm._v(\"\\n            \"+_vm._s(_vm.myTable.$colNumber[i].cell.content)+\"\\n          \")])])})],2):_vm._e(),_vm._l((_vm.myTable.$rowNumber),function(th,i){return _c('tr',{key:\"row\"+i},[(_vm.myTable.isShowRowIndex)?_c('th',{staticClass:\"rowNumber\",style:(th.style),attrs:{\"tabindex\":\"1\"},on:{\"mousedown\":function($event){th.onMouseDown($event)},\"mouseout\":function($event){th.onMouseOut($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"click\":function($event){th.onClick($event)},\"dragstart\":function($event){th.dragStart($event)},\"dragend\":function($event){th.dragEnd($event)},\"dragover\":function($event){th.dragOver($event)},\"dragleave\":function($event){th.dragLeave($event)},\"dragenter\":function($event){th.dragEnter($event)},\"drop\":function($event){th.drop($event)}}},[_c('div',{style:([th.cell.style]),attrs:{\"title\":th.cell.content}},[_vm._v(_vm._s(th.cell.content))])]):_vm._e(),(i===0 && _vm.myTable.$tableHeadLeft[0]&&_vm.myTable.$tableHeadTop[0])?_c('th',{staticClass:\"colNumber\",style:(_vm.myTable.tableHeadTopLeft.style),attrs:{\"tabindex\":\"1\",\"colspan\":_vm.myTable.theadLeftEntity.side2,\"rowspan\":_vm.myTable.theadTopEntity.side2},on:{\"click\":function($event){_vm.myTable.onClick($event)}}},[_c('div',{style:(_vm.myTable.tableHeadTopLeft.cell.style)})]):_vm._e(),_vm._l((_vm.myTable.$tableHeadLeft[i - _vm.myTable.theadTopEntity.side2]),function(th,j){return _c('th',{key:th+j,style:([th.style]),attrs:{\"tabindex\":\"1\",\"draggable\":th.draggable,\"colspan\":th.span2,\"rowspan\":th.span1},on:{\"click\":function($event){th.onClick($event)},\"blur\":function($event){th.onBlur($event)},\"dragstart\":function($event){th.dragStart($event)},\"dragover\":function($event){th.dragOver($event)},\"drop\":function($event){th.drop($event)},\"dragleave\":function($event){th.dragLeave($event)},\"mousedown\":function($event){th.onMouseDown($event)},\"mousemove\":function($event){th.onMouseMove($event)},\"mouseout\":function($event){th.onMouseOut($event)}}},[(th.treeContainer.show)?_c('svg',{style:(th.treeContainer.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){th.treeContainer.onClick($event)}}},_vm._l((th.treeContainer.svg[th.treeContainer.$openStatus].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e(),_vm._l((th.selfContainers),function(sc){return (sc.show)?_c('svg',{style:(sc.style),attrs:{\"viewBox\":\"0 0 1024 1024\"},on:{\"click\":function($event){sc.onClick($event)}}},_vm._l((sc.svg[sc.type].paths),function(d){return _c('path',{attrs:{\"d\":d}})})):_vm._e()}),(th.cell.displayClass[th.cell.status].displayType == 'text')?_c('div',{style:([th.cell.style]),attrs:{\"title\":th.cell.title},on:{\"dblclick\":function($event){th.cell.onDbClick()}}},[_vm._v(\"\\n\\n            \"+_vm._s(th.cell.content)+\"\\n          \")]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'input')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],staticStyle:{\"background-color\":\"#fff\"},style:([th.cell.style]),domProps:{\"value\":(th.cell.value)},on:{\"mouseover\":function($event){th.cell.onMouseOver($event)},\"blur\":function($event){th.cell.inputOnBlur($event,true)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(th.cell, \"value\", $event.target.value)}}}):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'button')?_c('button',{style:([th.cell.style]),on:{\"click\":function($event){th.cell.onClick($event)}}},[_vm._v(_vm._s(th.cell.content))]):_vm._e(),(th.cell.displayClass[th.cell.status].displayType == 'select')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(th.cell.value),expression:\"th.cell.value\"}],style:([th.cell.style]),attrs:{\"tabindex\":\"1\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(th.cell, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){th.cell.onChange($event)}],\"blur\":function($event){th.cell.onBlur($event)}}},_vm._l((th.cell.select.optionList),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.text}},[_vm._v(_vm._s(option.text))])})):_vm._e()],2)})],2)})],2)]):_vm._e(),(_vm.myTable)?_c('SelectBox',{attrs:{\"inputTable\":_vm.myTable,\"positionType\":\"left\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport { BaseTable } from \"../../viewModule/table/BaseTable\";\nexport default Vue.component(\"LeftFixTable\", {\n  props: {\n    inputTable: Object\n  },\n  data: function() {\n    return {\n      myTable: this.inputTable\n    };\n  },\n  watch: {\n    inputTable: function(val, oldVal) {\n      this.myTable = val || oldVal;\n    }\n  }\n});\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeftFixTable.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeftFixTable.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LeftFixTable.vue?vue&type=template&id=8c994d5e&\"\nimport script from \"./LeftFixTable.vue?vue&type=script&lang=ts&\"\nexport * from \"./LeftFixTable.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"LeftFixTable.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"absolute\",\"display\":\"contents\"}},_vm._l((_vm.myTable.$selectBoxEntity.selectList),function(val,key){return (val.position.table === _vm.myTable.position.table && val.selectBoxType === _vm.positionType)?_c('div',{key:key,style:({\n    position: 'absolute',\n    top:val.style.top+'px',\n    left:val.style.left+'px'\n    })},[_c('span',[_c('div',{style:(val.topStyle)}),_c('div',{style:(val.rightStyle)}),_c('div',{style:(val.bottomStyle)}),_c('div',{style:(val.leftStyle)})])]):_vm._e()}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport { BaseTable } from \"../../viewModule/table/BaseTable\";\nexport default Vue.component(\"SelectBox\", {\n  props: {\n    inputTable: Object,\n    positionType: String\n  },\n  data: function() {\n    return {\n      myTable: this.inputTable\n    };\n  },\n  watch: {\n    inputTable: function(val, oldVal) {\n      this.myTable = val || oldVal;\n    }\n  }\n});\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/ts-loader/index.js??ref--12-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=44dc8f2e&\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=ts&\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"SelectBox.vue\"\nexport default component.exports","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function baseClone(Obj: any, excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean) {\r\n    let buf: any;\r\n    if (Obj instanceof Array) {\r\n        buf = [];\r\n        Obj.forEach((val, i) => {\r\n            buf[i] = baseClone(val, excludeReg, keepReg);\r\n        });\r\n        return buf;\r\n    } else if (typeof Obj === 'function') {\r\n        return Obj;\r\n    } else if (Obj instanceof Object) {\r\n        buf = {};\r\n        for (const key in Obj) {\r\n            if ((Obj.hasOwnProperty(key) || (typeof (Obj[key]) === 'function') && withFunction)) {\r\n                const needContinue = excludeReg ? (excludeReg.test(key) ? true : false) : false;\r\n                const needKeep = keepReg ? (keepReg.test(key) ? true : false) : false;\r\n                if (needContinue) {\r\n                    continue;\r\n                } else {\r\n                    if (needKeep) {\r\n                        buf[key] = (Obj[key]);\r\n                    } else {\r\n                        buf[key] = baseClone(Obj[key], excludeReg, keepReg, withFunction);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return buf;\r\n    } else {\r\n        // console.log('啥都不是:' + Obj);\r\n        return Obj;\r\n    }\r\n}","export class UtilsConfig {\r\n    public static keepReg: RegExp = /\\$|userData/;\r\n}","\r\nimport { baseClone } from './base/clone';\r\nimport { UtilsConfig } from './base/config';\r\nexport function keepClone(obj: any, excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean) {\r\n    keepReg = keepReg || UtilsConfig.keepReg;\r\n    return baseClone(obj, excludeReg, keepReg, withFunction);\r\n}","import { keepClone } from './keepClone';\r\nexport function myObejctClone(Obj: any, excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean) {\r\n    const object: any = Object.create({});\r\n    for (const key in Obj) {\r\n        if (Obj.hasOwnProperty(key) || (withFunction && typeof Obj[key] === 'function')) {\r\n            if (key === '_value') {\r\n                Object.defineProperty(object, 'value', {\r\n                    get() {\r\n                        return this._value;\r\n                    },\r\n                    set(value) {\r\n                        this.$renderState.hasrendered = false;\r\n                        this._value = value;\r\n                    }\r\n                });\r\n            }\r\n            const tmpObject: any = Obj[key];\r\n            let val: any = null;\r\n            const needContinue = excludeReg ? (excludeReg.test(key) ? true : false) : false;\r\n            const needKeep = keepReg ? (keepReg.test(key) ? true : false) : false;\r\n            if (needContinue) {\r\n                continue;\r\n            } else if (needKeep) {\r\n                val = Obj[key];\r\n            } else if (Array.isArray(tmpObject)) {\r\n                val = [];      \r\n                tmpObject.forEach((item: any) => {\r\n                    if ( typeof item.clone === 'function') {\r\n                        val.push(item.clone(excludeReg, keepReg, withFunction));\r\n                    } else {\r\n                        val.push(keepClone(item, excludeReg, keepReg, withFunction));\r\n                    }\r\n                });\r\n            } else if (typeof Obj[key] === 'object') {\r\n                if (tmpObject && typeof tmpObject.clone === 'function') {\r\n                    val = tmpObject.clone(excludeReg, keepReg, withFunction);\r\n                } else {\r\n                    val = (keepClone(tmpObject, excludeReg, keepReg, withFunction));\r\n                }\r\n            } else {\r\n                val = Obj[key];\r\n            }\r\n            object[key] = val;\r\n        }\r\n    }\r\n    return object;\r\n}","/**\r\n * The base implementation of `_.slice` without an iteratee call guard.\r\n *\r\n * @private\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\n\r\nexport function baseSlice(array: any[], start: number, end: number) {\r\n    let index = -1;\r\n    let length = array.length;\r\n    start = start == null ? 0 : (+start || 0);\r\n    if (start < 0) {\r\n        start = -start > length ? 0 : (length + start);\r\n    }\r\n    end = (end === undefined || end > length) ? length : (+end || 0);\r\n    if (end < 0) {\r\n        end += length;\r\n    }\r\n    length = start > end ? 0 : ((end - start) >>> 0);\r\n    start >>>= 0;\r\n\r\n    const result = Array(length);\r\n    while (++index < length) {\r\n        result[index] = array[index + start];\r\n    }\r\n    return result;\r\n}\r\n","\r\nimport { baseSlice } from './baseSlice';\r\nexport function drop(array: any[], n?: number) {\r\n    const length = array == null ? 0 : array.length; // 数组长度\r\n    if (!length) {// 如果为空数组，返回空数组\r\n        return [];\r\n    }\r\n    n = n === undefined ? 1 : n;\r\n    return baseSlice(array, n < 0 ? 0 : n, length); // 调用baseSlice对数组从n位置进行切割，并返回切好的数组\r\n}\r\n","\r\nimport { baseSlice } from './baseSlice';\r\nexport function dropRight(array: any[], n?: number) {\r\n    const length = array == null ? 0 : array.length; // 数组长度\r\n    if (!length) {// 如果为空数组，返回空数组\r\n        return [];\r\n    }\r\n    n = n === undefined ? 1 : n;\r\n    n = length - n;\r\n    return baseSlice(array, 0, n < 0 ? 0 : n); // 调用baseSlice对数组从n位置进行切割，并返回切好的数组\r\n}\r\n","export function last(array: any[]) {\r\n  const length = array ? array.length : 0;\r\n  return length ? array[length - 1] : undefined;\r\n}","function S4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n// Generate a pseudo-GUID by concatenating random hexadecimal.\r\nexport function guid() {\r\n    return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n}\r\n\r\n","import { clone } from '..';\r\n\r\nexport function objectSet(targetObect: any, sourceObject: any, setType?: 'union' | 'intersection', keepReg?: RegExp) {\r\n    const sourceObjectClone = clone(sourceObject, undefined, keepReg);\r\n    setType = setType || 'intersection';\r\n    if (targetObect && sourceObjectClone) {\r\n        for (const key in sourceObjectClone) {\r\n            if (targetObect.hasOwnProperty(key) || (setType === 'union' && sourceObjectClone.hasOwnProperty(key))) {\r\n                const value: any = targetObect[key];\r\n                const needKeep = keepReg ? (keepReg.test(key) ? true : false) : false;\r\n                if (typeof value === 'object' && !Array.isArray(value) && !needKeep) {\r\n                    objectSet(targetObect[key], sourceObjectClone[key], setType);\r\n                } else if (sourceObjectClone[key] !== undefined) {\r\n                    targetObect[key] = sourceObjectClone[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return targetObect;\r\n}\r\n","export function replaceAll(targetString: string, oldStr: string, newStr: string) {\r\n    const reg = new RegExp(oldStr, 'g');\r\n    const res = targetString.replace(reg, newStr);\r\n    return res;\r\n}","/**\r\n * 将序号转换成A、B、C\r\n *\r\n * @private\r\n * @param {number} index\r\n * @returns {string}\r\n * @memberof DefaultTable\r\n */\r\nexport function getA_Z(index: number): string {\r\n    const shang = Math.floor(index / 26);\r\n    const yushu = index % 26;\r\n    let res = '';\r\n    if (shang > 0) {\r\n        res += String.fromCharCode(shang + 65 - 1);\r\n    }\r\n    res += String.fromCharCode(yushu + 65);\r\n    return res;\r\n}\r\n","import { CellContainer } from '../../viewModule/container/CellContainer';\r\nimport * as _ from '../../utils/index';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\n\r\n\r\nexport class Formula {\r\n    // 复杂的计算方法（包含括号）\r\n    public static complexEval(str: string) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (typeof str !== 'string') {// 转化成字符串\r\n            str = str + '';\r\n        }\r\n        str = (str + '').replace(/[\\s]/g, '');\r\n        const reg = '[\\(][^\\(]*?[\\)]';\r\n        let multObj = str.match(reg); // 匹配括号\r\n        // 不断计算最底层括号的数据\r\n        while (null != multObj) {\r\n            const content = multObj[0] + '';\r\n\r\n            const result = this.simpleEval(content.substr(1, content.length - 2));\r\n            str = str.replace(multObj[0], result);\r\n            multObj = str.match(reg);\r\n        }\r\n\r\n        return this.simpleEval(str);\r\n    }\r\n    // 简单的计算方法，只有加减乘除\r\n    public static simpleEval(str: string) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (typeof str !== 'string') {// 转化成字符串\r\n            str = str + '';\r\n        }\r\n\r\n        let valueArray = new Array(); // 值的数组\r\n        let markArray = new Array(); // 符号的数组\r\n        let tempValue: any = 0;\r\n        const ch = str.split('');\r\n        let isOper = false;\r\n        // debugger \r\n        for (let i = 0; i < ch.length; i++) {\r\n            if (ch[i] === '+' || ch[i] === '-' || ch[i] === '*' || ch[i] === '/') {// 符号\r\n                let dv = tempValue * 1;\r\n                if (isOper) {\r\n                    const value = valueArray.pop();\r\n                    const mark = markArray.pop();\r\n                    dv = this.simpleTwoEval(mark, value, dv);\r\n                }\r\n                valueArray.push(dv);\r\n                markArray.push(ch[i]);\r\n                tempValue = 0;\r\n                isOper = false;\r\n                if (ch[i] === '*' || ch[i] === '/') {\r\n                    isOper = true;\r\n                }\r\n\r\n            } else {\r\n                tempValue += ch[i] + '';\r\n                if (i === ch.length - 1) {// 最后一位\r\n                    let dv = tempValue * 1;\r\n                    if (isOper) {\r\n                        const dv1 = valueArray.pop();\r\n                        const mark = markArray.pop();\r\n                        const result = this.simpleTwoEval(mark, dv1, tempValue);\r\n                        dv = result;\r\n                    }\r\n                    valueArray.push(dv);\r\n                }\r\n            }\r\n        }\r\n\r\n        valueArray = this.reverseArray(valueArray);\r\n        markArray = this.reverseArray(markArray);\r\n        while (valueArray.length > 1) {\r\n            const v1 = valueArray.pop();\r\n            const v2 = valueArray.pop();\r\n            const mark = markArray.pop();\r\n            valueArray.push(this.simpleTwoEval(mark, v1, v2));\r\n        }\r\n        return valueArray[0] || 0;\r\n\r\n    }\r\n\r\n    // 两个数的加减乘除\r\n    public static simpleTwoEval(mark: string, value1: number, value2: number) {\r\n        let res = 0;\r\n        if (mark === '+') {\r\n            res = value1 + value2;\r\n        } else if (mark === '-') {\r\n            res = value1 - value2;\r\n        } else if (mark === '*') {\r\n\r\n            res = value1 * value2;\r\n        } else if (mark === '/') {\r\n            res = value1 / value2;\r\n        }\r\n        res = parseFloat(res.toFixed(10));\r\n        return res;\r\n    }\r\n\r\n    // 反转数组\r\n    public static reverseArray(oldArray: any[]) {\r\n        const newArray = new Array();\r\n        const size = oldArray.length;\r\n        for (let i = 0; i < size; i++) {\r\n            newArray.push(oldArray.pop());\r\n        }\r\n        return newArray;\r\n\r\n    }\r\n\r\n    /**\r\n     * name\r\n     */\r\n    public static cellStr2Position(cellStr: string): PositionInterface {\r\n        const res: PositionInterface = {\r\n            table: (/^[\\u4e00-\\u9fa5_a-zA-Z0-9_]+(?=\\!)/.exec(cellStr) || [null])[0],\r\n            colStr: (/[^!]?([A-Z])+/.exec(cellStr) || [null])[0],\r\n            rowStr: (/[0-9]+$/.exec(cellStr) || [null])[0],\r\n        };\r\n        return res;\r\n    }\r\n\r\n    public static curlyBracesHandle(str: string, container: CellContainer) {\r\n        const reg = '[\\{][^\\{]*?[\\}]';\r\n        let regObj = str.match(reg);\r\n        while (null != regObj) {\r\n            (regObj || []).forEach((item: string) => {\r\n                const rowNum = container.position.rowNum + '';\r\n                if (/sr/.test(item)) {\r\n                    let formula = item.replace(/sr/g, rowNum);\r\n                    formula = formula.replace(/[{}]/g, '');\r\n                    const res = Formula.complexEval(formula);\r\n                    str = str.replace(item, res + 1);\r\n                } else if (/sc/.test(item)) {\r\n                    const selfCol = container.position.colNum + '';\r\n                    let formula = item.replace(/sc/g, selfCol);\r\n                    formula = formula.replace(/[{}]/g, '');\r\n                    const res = Formula.complexEval(formula);\r\n                    str = str.replace(item, _.getA_Z(res));\r\n                }\r\n            });\r\n            regObj = str.match(reg);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public static percentHandle(str: string) {\r\n        const percentReg = /(\\d+(\\.\\d+)*)%/g;\r\n        const res = str.replace(percentReg, (match: any, group1: string) => {\r\n            return Number(group1) * 0.01 + '';\r\n        });\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n","import { PositionInterface } from '../interface/PositionInterface';\r\n\r\nexport class BaseContainerConfig {\r\n    public readonly?: boolean; // 表头是否可以编辑\r\n    public style?: any = {};\r\n    public config?: any = {};\r\n    public userData?: any = {};\r\n\r\n    public position?: PositionInterface = {\r\n        table: 0,\r\n        colNum: 0,\r\n        rowNum: 0,\r\n    };\r\n}\r\n","import { BaseContainerConfig } from './BaseContainerConfig';\r\nimport { DisplayClassInterface, VerificationInterface } from '../interface/viewModule/cell/BaseCellInterface';\r\n\r\nexport class BaseCellConfig extends BaseContainerConfig {\r\n    public readonly?: boolean; // 表头是否可以编辑\r\n    public oldValue: string = '';\r\n    public content: any = ''; // 内容\r\n    public positionManagerId?: string;\r\n    public selectionStart: number = 0;\r\n    public title: any = '';\r\n    public status: 'normal' | 'dbclick' | 'readonly' = 'normal';\r\n    public displayType: 'text' | 'select' | 'input' = 'text';\r\n    public style?: any = {\r\n        fontSize: 12,\r\n        float: 'left',\r\n        // padding:'0px 5px',\r\n        color: '#000',\r\n        textAlign: 'center',\r\n        width: '110px',\r\n        height: '28px',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        userSelect: 'none',\r\n        // background: 'transparent',\r\n    };\r\n\r\n    public displayClass: DisplayClassInterface = {\r\n        normal: {\r\n            displayType: 'text',\r\n        },\r\n        dbclick: {\r\n            displayType: 'input',\r\n            select: {\r\n                optionList: [\r\n                ],\r\n            },\r\n        },\r\n        readonly: {\r\n            displayType: 'text'\r\n        }\r\n    };\r\n    // 格式\r\n    public formatter: string = '';\r\n    // 验证\r\n    public verification: VerificationInterface = {\r\n        state: true,\r\n        hasVerification: false,\r\n        vTypes: [], //\r\n        message: {\r\n            integer: '必须输入整型',\r\n            notNull: '该项是必填项',\r\n            number: '您好请输入数字类型:例如 123|32|3.5....',\r\n            date: '您好请输入正确时间:例如 2019-01-01',\r\n            decimal: '您好请输入正确数字'\r\n        }\r\n    };\r\n}\r\n","import { BaseContainerConfig } from './BaseContainerConfig';\r\nimport { BaseCellInterface } from '../interface/viewModule/cell/BaseCellInterface';\r\nimport { BaseCellConfig } from './BaseCellConfig';\r\n\r\nexport class CellContainerConfig extends BaseContainerConfig {\r\n    public widthNum?: number = 0;\r\n    public heightNum?: number = 0;\r\n    public widthChildNum?: number = 0;\r\n    public heightChildNum?: number = 0;\r\n    public widthSelfNum?: number = 110;\r\n    public heightSelfNum?: number = 38;\r\n    public paddingLeftNum: number = 0;\r\n    public children = new Array();\r\n    public isRootParent = false;\r\n    public $inSystem = false;\r\n    public cell?: BaseCellInterface = new BaseCellConfig();\r\n    public hideType = 'visible';\r\n    public $positionCheck = ['top', 'bottom', 'left', 'right', 'inner'];\r\n    public side1 = 1;\r\n    public side2 = 1;\r\n    public span1 = 1;\r\n    public span2 = 1;\r\n    public style?: any = {\r\n        padding: '0px 0px',\r\n        // width: '110px',\r\n        // height: '38px',\r\n        overflow: 'hidden',\r\n        userSelect: 'text',\r\n        boxSizing: 'border-box',\r\n        position: 'relative'\r\n    };\r\n}\r\n","import * as _ from '../utils';\r\nimport { CellContainerConfig } from './CellContainerConfig';\r\nexport class TheadContainerConfig extends CellContainerConfig {\r\n    public span1: number = 1;\r\n    public span2: number = 1;\r\n    public canSum = false;\r\n    public canDragResize = false;\r\n    public draggable = true;// 是否可以拖动\r\n    public $resizeChildren = [];\r\n    public selfContainers = [];\r\n    public theadPosition = new Array();\r\n    public tbodyConfig = {};\r\n    public children = [];\r\n    public style = _.objectSet(this.style, {\r\n        overflow: 'hidden',\r\n        boxSizing: 'border-box',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        background: '#f5f7fa',\r\n    }, 'union');\r\n}\r\n","import * as _ from '../utils';\r\nimport { CellContainerConfig } from './CellContainerConfig';\r\nexport class TreeContainerConfig extends CellContainerConfig {\r\n    public widthSelfNum?: number = 15;\r\n    public heighSelftNum?: number = 38;\r\n    public allChildren = new Array();\r\n    public $positionCheck = null;\r\n    public style = {\r\n        cursor: 'pointer',\r\n        float: 'left',\r\n        left: '0px',\r\n        boxSizing: 'content-box',\r\n        position: 'absolute'\r\n    };\r\n    public $openStatus = 'close';\r\n    public svg = {\r\n        close: {\r\n            paths: [\r\n                'M815.2 911.7H210.8c-55.4 0-100.7-45.3-100.7-100.7V206.5c0-55.4 45.3-100.7 100.7-100.7h604.5c55.4 0 100.7 45.3 100.7 100.7V811c0 55.3-45.3 100.7-100.8 100.7zM210.8 156.1c-30.2 0-50.4 20.1-50.4 50.4V811c0 30.2 20.1 50.4 50.4 50.4h604.5c30.2 0 50.4-20.1 50.4-50.4V206.5c0-30.2-20.1-50.4-50.4-50.4H210.8z m0 0',\r\n                'M714.5 533.9h-403c-15.1 0-25.2-10.1-25.2-25.2s10.1-25.2 25.2-25.2h403c15.1 0 25.2 10.1 25.2 25.2s-10.1 25.2-25.2 25.2z m0 0',\r\n                'M513 735.4c-15.1 0-25.2-10.1-25.2-25.2v-403c0-15.1 10.1-25.2 25.2-25.2s25.2 10.1 25.2 25.2v403c0 15.1-10.1 25.2-25.2 25.2z m0 0'\r\n            ]\r\n        },\r\n        open: {\r\n            paths: [\r\n                'M815.2 911.7H210.8c-55.4 0-100.7-45.3-100.7-100.7V206.5c0-55.4 45.3-100.7 100.7-100.7h604.5c55.4 0 100.7 45.3 100.7 100.7V811c0 55.3-45.3 100.7-100.8 100.7zM210.8 156.1c-30.2 0-50.4 20.1-50.4 50.4V811c0 30.2 20.1 50.4 50.4 50.4h604.5c30.2 0 50.4-20.1 50.4-50.4V206.5c0-30.2-20.1-50.4-50.4-50.4H210.8z m0 0',\r\n                'M714.5 533.9h-403c-15.1 0-25.2-10.1-25.2-25.2s10.1-25.2 25.2-25.2h403c15.1 0 25.2 10.1 25.2 25.2s-10.1 25.2-25.2 25.2z m0 0',\r\n            ]\r\n        },\r\n        loading:{\r\n            paths:[\r\n                'M693.333333 650.325333q17.322667 0 29.994667 12.672l120.661333 120.661333q12.672 12.672 12.672 30.336 0 17.322667-12.672 29.994667t-29.994667 12.672q-17.664 0-30.336-12.672l-120.661333-120.661333q-12.330667-12.330667-12.330667-30.336 0-17.664 12.501333-30.165333t30.165333-12.501333zM331.008 650.325333q17.664 0 30.165333 12.501333t12.501333 30.165333-12.672 30.336l-120.661333 120.661333q-12.672 12.672-29.994667 12.672-17.664 0-30.165333-12.501333t-12.501333-30.165333q0-18.005333 12.330667-30.336l120.661333-120.661333q12.672-12.672 30.336-12.672zM85.333333 469.333333l170.666667 0q17.664 0 30.165333 12.501333t12.501333 30.165333-12.501333 30.165333-30.165333 12.501333l-170.666667 0q-17.664 0-30.165333-12.501333t-12.501333-30.165333 12.501333-30.165333 30.165333-12.501333zM512 725.333333q17.664 0 30.165333 12.501333t12.501333 30.165333l0 170.666667q0 17.664-12.501333 30.165333t-30.165333 12.501333-30.165333-12.501333-12.501333-30.165333l0-170.666667q0-17.664 12.501333-30.165333t30.165333-12.501333zM210.346667 167.338667q17.322667 0 29.994667 12.672l120.661333 120.661333q12.672 12.672 12.672 29.994667 0 17.664-12.501333 30.165333t-30.165333 12.501333q-18.005333 0-30.336-12.330667l-120.661333-120.661333q-12.330667-12.330667-12.330667-30.336 0-17.664 12.501333-30.165333t30.165333-12.501333zM768 469.333333l170.666667 0q17.664 0 30.165333 12.501333t12.501333 30.165333-12.501333 30.165333-30.165333 12.501333l-170.666667 0q-17.664 0-30.165333-12.501333t-12.501333-30.165333 12.501333-30.165333 30.165333-12.501333zM512 42.666667q17.664 0 30.165333 12.501333t12.501333 30.165333l0 170.666667q0 17.664-12.501333 30.165333t-30.165333 12.501333-30.165333-12.501333-12.501333-30.165333l0-170.666667q0-17.664 12.501333-30.165333t30.165333-12.501333zM813.994667 167.338667q17.322667 0 29.994667 12.672t12.672 29.994667q0 17.664-12.672 30.336l-120.661333 120.661333q-12.330667 12.330667-29.994667 12.330667-18.346667 0-30.506667-12.16t-12.16-30.506667q0-17.664 12.330667-29.994667l120.661333-120.661333q12.672-12.672 30.336-12.672z'\r\n            ]\r\n        }\r\n    };\r\n}\r\n","import * as _ from '../utils';\r\nimport { TheadContainerConfig } from './TheadContainerConfig';\r\nexport class IndexContainerConfig extends TheadContainerConfig {\r\n    public  $positionCheck = new Array();\r\n    public  canSum = true;\r\n    public  style = _.objectSet(this.style, {background: '#fff', }, 'union');\r\n}\r\n","\r\nimport * as _ from '../utils';\r\nimport { TheadContainerConfig } from './TheadContainerConfig';\r\nexport class BaseTheadConfig extends TheadContainerConfig {\r\n    public draggable: boolean = true; // 是否可以拖动\r\n    public readonly?: boolean = false; // 表头是否可以编辑\r\n    public $leafIndexList = new Array();\r\n    public $leafIndexList2 = new Array();\r\n    public side1 = 0;\r\n    public side2 = 0;\r\n    public span1 = 0;\r\n    public span2 = 0;\r\n    public isRootParent = true;\r\n    public style = _.objectSet(this.style, {\r\n        background: '#f5f7fa',\r\n        cursor: 'pointer',\r\n    }, 'union');\r\n\r\n}\r\n","import * as _ from '../utils';\r\nimport { IndexContainerConfig } from './IndexContainerConfig';\r\nexport class IndexTheadConfig extends IndexContainerConfig {\r\n    public $leafIndexList = new Array();\r\n    public $leafIndexList2 = new Array();\r\n    public side1 = 0;\r\n    public side2 = 0;\r\n    public span1 = 0;\r\n    public span2 = 0;\r\n    public isRootParent = true;\r\n    public  style = _.objectSet(this.style,{\r\n        overflow: 'hidden',\r\n        boxSizing: 'border-box',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        userSelect: 'none',\r\n        background: '#fff',\r\n        zIndex: 99\r\n    }, 'union');\r\n}\r\n","import { BaseContainerConfig } from './BaseContainerConfig';\r\n\r\nexport class BaseTableConfig extends BaseContainerConfig {\r\n    public type: any = 'table';\r\n    public isTopLeftShow?: boolean = false; // 左上角单元格是否显示表名\r\n    public tableName?: string = ''; // 表名\r\n    public debugLevel?: number = 0; // 1为调试模式 0是正常模式\r\n    public isShowColIndex?: boolean = true;  // 是否显示 列标识：A、B、D、C\r\n    public isShowRowIndex?: boolean = true; // 是否显示 行标识：1、2、3、4\r\n    public isOverflowX?: boolean = false; // 超出宽X度是否出现滚动条\r\n    public isOverflowY?: boolean = false; // 超出高Y度是否出现滚动条\r\n    public canDragResize?: boolean = false; // 是否可以拖动 控制行列宽度\r\n    public hasTopFixedTable?: boolean = true; // 是否有上侧固定表头\r\n    public hasLeftFixedTable?: boolean = true; // 是否有左侧固定表头\r\n    public maxWidth?: string = '100%'; // 如果加滚动条 表格默认宽度\r\n    public maxHeight?: string = '400px'; // 如果加滚动条 表格默认高度\r\n    public scrollBarWidth?: string = '17px'; // 右侧滚动条宽度\r\n    public scrollBarHeight?: string = '17px';// 底侧滚动条高度\r\n    public defaultExpandedIds: string[] = [];// 默认展开树形容器节点id\r\n    public style = {\r\n        scrollTop: 0, // 滚动条 用于主表与上侧固定表头滚动条联动操作\r\n        scrollLeft: 0, // 滚动条 用于主表与左侧固定表头滚动条联动操作\r\n        mainTable: {\r\n        },\r\n        topTable: {\r\n        },\r\n        leftTable: {\r\n        }\r\n    };\r\n}\r\n","import { CellContainerConfig } from './CellContainerConfig';\r\nimport * as _ from '../utils';\r\nexport class BaseTbodyConfig extends CellContainerConfig {\r\n    public topIndexList = new Array();\r\n    public leftIndexList = new Array();\r\n    public bodyData = {};\r\n    public style = _.objectSet(this.style, { background: '#fff', }, 'union');\r\n}\r\n","import * as _ from '../utils';\r\nimport { CellContainerConfig } from './CellContainerConfig';\r\nexport class TbodyContainerConfig extends CellContainerConfig {\r\n    public separator = '_';\r\n    public style = _.objectSet(this.style, {\r\n        background: '#fff',\r\n    }, 'union');\r\n}\r\n","import * as _ from '../utils';\r\nimport { BaseContainerConfig } from './BaseContainerConfig';\r\nexport class SelfContainerConfig extends BaseContainerConfig {\r\n    public show: boolean = false;\r\n    public type: string = 'tips';\r\n    public widthSelfNum: number = 15;\r\n    public rightNum: number = 5;\r\n    public style = {\r\n        float: 'right',\r\n        right: '0px',\r\n        width: '15px',\r\n        boxSizing: 'content-box',\r\n        position: 'absolute'\r\n    };\r\n    public svg = {\r\n        tips: {\r\n            paths: [\r\n                'M997.64736 819.1488l0-0.13824L577.84832 91.89888l-0.07168 0c-5.25312-19.3536-29.25056-33.87392-58.07104-33.87392-29.0304 0-52.94592 14.86848-57.99424 34.432L32.0256 836.608l0.35328 0.49152c-9.82016 9.74848-7.92576 32.89088 5.39648 54.49216 13.39904 22.02624 33.59232 34.29888 46.63808 29.24544l0.49152 0.768 869.75488 0 0.49152-1.11616c14.52032 2.24256 32.39936-10.52672 43.55072-33.24928C1011.74272 861.08672 1010.90304 831.63136 997.64736 819.1488L997.64736 819.1488zM458.83904 320.52224c0-32.18944 26.15808-58.27584 58.27584-58.27584 32.26112 0 58.28096 26.0864 58.28096 58.27584l0 300.36992c0 32.11264-26.01984 58.27584-58.28096 58.27584-32.11776 0-58.27584-26.15808-58.27584-58.27584L458.83904 320.52224 458.83904 320.52224zM517.12 844.81536c-34.9952 0-63.39584-28.40576-63.39584-63.46752 0-35.00032 28.40064-63.26272 63.39584-63.26272 34.9952 0 63.39072 28.26752 63.39072 63.26272C580.51072 816.33792 552.1152 844.81536 517.12 844.81536L517.12 844.81536z'\r\n            ]\r\n        }\r\n    };\r\n}\r\n","import { BaseCellInterface } from '../interface/viewModule/cell/BaseCellInterface';\r\nimport { TheadContainerInterface } from '../interface/viewModule/container/TheadContainer';\r\nimport { BaseTableInterface } from '../interface/viewModule/table/BaseTable';\r\nimport { BaseTheadInterface } from '../interface/viewModule/thead/BaseThead';\r\nimport { IndexTheadInterface } from '../interface/viewModule/thead/IndexThead';\r\nimport { BaseTbodyInterface } from '../interface/viewModule/tbody/BaseTbody';\r\nimport { CellContainerInterface } from '../interface/viewModule/container/CellContainer';\r\nimport { BaseContainerInterface } from '../interface/viewModule/container/BaseContainer';\r\nimport { TreeContainerInterface } from '../interface/viewModule/container/TreeContainer';\r\nimport { BaseCellConfig } from './BaseCellConfig';\r\nimport { BaseContainerConfig } from './BaseContainerConfig';\r\nimport { CellContainerConfig } from './CellContainerConfig';\r\nimport { TheadContainerConfig } from './TheadContainerConfig';\r\nimport { TreeContainerConfig } from './TreeContainerConfig';\r\nimport { IndexContainerConfig } from './IndexContainerConfig';\r\nimport { BaseTheadConfig } from './BaseTheadConfig';\r\nimport { IndexTheadConfig } from './IndexTheadConfig';\r\nimport { BaseTableConfig } from './BaseTableConfig';\r\nimport { BaseTbodyConfig } from './BaseTbodyConfig';\r\nimport { IndexContainerInterface } from '../interface/viewModule/container/IndexContainer';\r\nimport { TbodyContainerConfig } from './TbodyContainerConfig';\r\nimport { TbodyContainerInterface } from '../interface/viewModule/container/TbodyContainer';\r\nimport { SelfContainerInterface } from '../interface/viewModule/container/SelfContainer';\r\nimport { SelfContainerConfig } from './SelfContainerConfig';\r\n\r\nexport class DragTableConfig {\r\n    public static instances: object = {\r\n    };\r\n    /**\r\n     * getInstance\r\n     */\r\n    public static getInstance(id: any) {\r\n        let res: DragTableConfig;\r\n        if (this.instances.hasOwnProperty(id)) {\r\n            res = this.instances[id];\r\n        } else {\r\n            res = this.instances[id] = new DragTableConfig();\r\n        }\r\n        return res;\r\n    }\r\n    // public renderEvent?= ['blur', 'change', 'paste', 'render', 'theadAdd', 'afterDrop'];\r\n\r\n    public BaseCellConfig?= new BaseCellConfig();\r\n    public BaseContainerConfig?= new BaseContainerConfig();\r\n    public CellContainerConfig?= new CellContainerConfig();\r\n    public TheadContainerConfig?= new TheadContainerConfig();\r\n    public TbodyContainerConfig?= new TbodyContainerConfig();\r\n    public TreeContainerConfig?= new TreeContainerConfig();\r\n    public SelfContainerConfig?= new SelfContainerConfig();\r\n    public IndexContainerConfig?= new IndexContainerConfig();\r\n    public BaseTheadConfig?= new BaseTheadConfig();\r\n    public IndexTheadConfig?= new IndexTheadConfig();\r\n    public BaseTbodyConfig?= new BaseTbodyConfig();\r\n    public BaseTableConfig?= new BaseTableConfig();\r\n\r\n    public baseCell?: BaseCellInterface = {}; // Cell配置\r\n    public baseContainer?: BaseContainerInterface = {}; // 基础容器\r\n    public cellContainer?: CellContainerInterface = {}; // 基础Cell容器\r\n    public topThead?: BaseTheadInterface = {}; // 上表头theadTopEntity配置\r\n    public leftThead?: BaseTheadInterface = {}; // 左表头theadLeftEntity配置\r\n    public topIndexThead?: IndexTheadInterface = {}; // 上表头theadTopEntity配置\r\n    public leftIndexThead?: IndexTheadInterface = {}; // 左表头theadLeftEntity配置\r\n    public theadContainer?: TheadContainerInterface = {}; // 基础容器\r\n    public topIndexContainer?: IndexContainerInterface = {}; // 行列标志容器\r\n    public leftIndexContainer?: IndexContainerInterface = {\r\n        style: {\r\n            width: '80px'\r\n        }\r\n    }; // 行列标志容器\r\n    public treeContainer?: TreeContainerInterface = {}; // 钻取容器\r\n    public selfContainer?: SelfContainerInterface = {}; // 提示容器\r\n    public tbodyContainer?: TbodyContainerInterface = {}; // tbody配置\r\n    public baseTbody?: BaseTbodyInterface = {}; // tbody配置\r\n    public table?: BaseTableInterface = {}; // BaseTable类配置\r\n\r\n\r\n\r\n}\r\n","\r\nimport * as _ from '../../utils';\r\nimport { BaseCellInterface, DisplayClassInterface, SelectOptionInterface, VerificationInterface } from '../../interface/viewModule/cell/BaseCellInterface';\r\nimport { CellContainer } from '../container/CellContainer';\r\nimport { Formula } from '../../module/formula/Formula';\r\nimport { TheadContainer } from '../../viewModule/container/TheadContainer';\r\nimport { TbodyContainer } from '../../viewModule/container/TbodyContainer';\r\nimport { BaseThead } from '../thead/BaseThead';\r\nimport { BaseTbody } from '../tbody/BaseTbody';\r\nimport { IndexThead } from '../thead/IndexThead';\r\nimport { DragTableConfig } from '../../config/DragTableConfig';\r\nexport class BaseCell implements BaseCellInterface {\r\n    public $groupId: string;\r\n    public nullReplace: string = '';\r\n    public content: any; // 内容\r\n    public selectionStart: number;\r\n    public readonly: boolean;\r\n    public oldValue: string;\r\n    public title: any;\r\n    public status: 'normal' | 'dbclick' | 'readonly';\r\n    public displayType: 'text' | 'select' | 'input';\r\n    public $parent: CellContainer; // 父级（TheadContainer 或者TbodyContainer）\r\n    // 用户自定义\r\n    public userData: any = {};\r\n    // 展示类\r\n    public displayClass: DisplayClassInterface;\r\n    // 格式\r\n    public formatter: string;\r\n\r\n    // 公式\r\n    public formula = {\r\n        hasFormula: false,\r\n        tmpValue: '',\r\n        canClickAdd: true,\r\n    };\r\n    // 样式\r\n    public style: any = {};\r\n    // 验证\r\n    public verification: VerificationInterface;\r\n    // 选择框\r\n    public select = {\r\n        selectOption: null,\r\n        optionList: [],\r\n    };\r\n\r\n    public set value(value: any) {\r\n        this.$renderState.hasrendered = false;\r\n        this._value = value;\r\n    }\r\n    public get value() {\r\n        return this._value;\r\n    }\r\n\r\n    // 配置文件\r\n    public config: BaseCellInterface = {};\r\n    public $dragTableConfig: DragTableConfig;\r\n    private _value: any; // 存储内容\r\n    private $warningMessage: string[] = [];\r\n    // 渲染状态\r\n    private $renderState = {\r\n        inRender: false, // 渲染中？\r\n        hasrendered: false,// 渲染过？\r\n    };\r\n    private $ICObject: any = {}; // index-Container-对应;\r\n\r\n    constructor(param: BaseCellInterface) {\r\n        const paramClone = _.keepClone(param);\r\n        this.initBeforeSetData(paramClone);\r\n        // 设置一遍 默认配置config的参数\r\n        _.objectSet(this, this.config, 'union');\r\n        this.setCellData(paramClone);\r\n    }\r\n\r\n    public initBeforeSetData(paramClone: BaseCellInterface) {\r\n        this.value = paramClone.value || '';\r\n        this.$groupId = paramClone.$groupId;\r\n        this.$parent = paramClone.$parent as CellContainer;\r\n        this.$dragTableConfig = DragTableConfig.getInstance(this.$groupId);\r\n        _.objectSet(this.config, this.$dragTableConfig.BaseCellConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.baseCell, 'union');\r\n    }\r\n\r\n\r\n    /**\r\n     * 通用设置配置\r\n     *\r\n     * @param {*} config\r\n     * @memberof BaseCellInterface\r\n     */\r\n    public setConfig(config: BaseCellInterface): void {\r\n        const configCopy = _.clone(config);\r\n        try {\r\n            if (configCopy) {\r\n                _.objectSet(this.config, configCopy, 'union');\r\n                _.objectSet(this.style, configCopy.style, 'union');\r\n                _.objectSet(this, this.config);// 不加union\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * doVerify\r\n     */\r\n    public doVerify(): boolean {\r\n        this.$warningMessage = [];\r\n        let res = true;\r\n        this.verification.state = true;\r\n        let content: any = this.content + '';\r\n        const percentReg = /(^\\d+(\\.\\d+)*)%$/;\r\n        content = content.replace(percentReg, (match: any, group1: string) => {\r\n            return Number(group1) * 0.01;\r\n        });\r\n        if (this.verification.hasVerification) {\r\n            this.verification.vTypes.forEach((vType: string) => {\r\n                res = true;\r\n                if (vType === 'number' && content) {\r\n                    res = !isNaN(content);\r\n                } else if (vType === 'date' && content) {\r\n                    const reg = /((?!0000)[0-9]{4}-((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-8])|(0[13-9]|1[0-2])-(29|30)|(0[13578]|1[02])-31)|([0-9]{2}(0[48]|[2468][048]|[13579][26])|(0[48]|[2468][048]|[13579][26])00)-02-29)/;\r\n                    res = reg.test(content);\r\n                } else if (vType === 'integer' && content) {\r\n                    const reg = /^[+]{0,1}(\\d+)$/;\r\n                    res = res && (reg.test(content));\r\n                } else if (/decimal/.test(vType) && content) {\r\n                    const mathObj = vType.match(/%[0-9]+/);\r\n                    let num = 0;\r\n                    if (mathObj !== null) {\r\n                        num = Number(mathObj[0].replace('%', ''));\r\n                    }\r\n                    let reg: any;\r\n                    if (num === 0) {\r\n                        reg = /^\\d+(\\.\\d+)*$/;\r\n                    } else {\r\n                        reg = new RegExp('^\\\\d+(\\\\.\\\\d{1,' + num + '})?$');\r\n                    }\r\n                    res = res && (reg.test(content));\r\n                    // 构造提示信息\r\n                    {\r\n                        let ex = '';\r\n                        for (let i = 0; i < num; i++) {\r\n                            ex += '1';\r\n                        }\r\n                        this.verification.message[vType] = this.verification.message[vType] || '您好请输入最多' + num + '位小数:例如 3.' + ex;\r\n                    }\r\n\r\n                } else if (vType === 'notNull') {\r\n                    res = (content !== '' && content !== undefined && content !== null);\r\n                }\r\n\r\n                if (!res) {\r\n                    this.$warningMessage.push(vType);\r\n                }\r\n                this.verification.state = this.verification.state && res;\r\n            });\r\n\r\n\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * format\r\n     */\r\n    public format(): void {\r\n        const fType = this.formatter;\r\n        let content: any = this.content + '';\r\n        let res = true;\r\n        const percentReg = /(^\\d+(\\.\\d+)*)%$/;\r\n        content = content.replace(percentReg, (match: any, group1: string) => {\r\n            return /percent/.test(fType) ? group1 : Number(group1) * 0.01;\r\n        });\r\n        if (this.formatter && !isNaN(content) && content && this.verification.state) {\r\n            if (fType === 'date') {\r\n                const reg = /((?!0000)[0-9]{4}-((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-8])|(0[13-9]|1[0-2])-(29|30)|(0[13578]|1[02])-31)|([0-9]{2}(0[48]|[2468][048]|[13579][26])|(0[48]|[2468][048]|[13579][26])00)-02-29)/;\r\n                this.content = reg.test(content) ? content : '1990-01-01';\r\n            } else if (fType === 'integer') {\r\n                const reg = /^[+]{0,1}(\\d+)$/;\r\n                this.content = reg.test(content) ? content : Math.round(content);\r\n            } else if (/decimal|percent/.test(fType)) {\r\n                const mathObj = fType.match(/%[0-9]+/);\r\n                let num = 0;\r\n                if (mathObj !== null) {\r\n                    const tmp = Number(mathObj[0].replace('%', ''));\r\n                    num = tmp;\r\n                }\r\n                let reg: any;\r\n                if (num === 0) {\r\n                    reg = /^\\d+(\\.\\d+)*$/;\r\n                } else {\r\n                    reg = new RegExp('^\\\\d+\\\\.\\\\d{' + num + '}$');\r\n                }\r\n                // content = /percent/.test(fType) ? Formula.simpleEval(content + '*100') + '' : content;\r\n                res = reg.test(content);\r\n\r\n                let repairRes = content;\r\n                if (!res) {\r\n\r\n                    const dotIndex = content.indexOf('.');\r\n                    let zeroCount = 0;\r\n                    if (dotIndex !== -1) {\r\n                        const nowBit = content.split('.')[1].length;\r\n                        zeroCount = num - nowBit;\r\n                    } else {\r\n                        repairRes += (num === 0 ? '' : '.');\r\n                        zeroCount = num;\r\n                    }\r\n                    if (zeroCount > 0) {\r\n                        repairRes += new Array(zeroCount).fill(0).join('');\r\n                    } else {\r\n                        repairRes = Math.round(content * Math.pow(10, num)) / (Math.pow(10, num) * 1.0);\r\n                    }\r\n                }\r\n                this.content = /percent/.test(fType) ? repairRes + '%' : repairRes;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 设置数据\r\n     *\r\n     * @param {BaseCellInterface} cellData\r\n     * @memberof BaseCell\r\n     */\r\n    public setCellData(cellData: BaseCellInterface): void {\r\n\r\n        const self: any = this;\r\n        for (const key in cellData) {\r\n            // 2018/11/23将 if (containerData.hasOwnProperty(key))修改为 if (this.hasOwnProperty(key))\r\n            if (this.hasOwnProperty(key) || key === 'value') {\r\n                const _value: any = (cellData as any)[key];\r\n                // 对私有属性(_)和不需要保存属性($)特殊处理\r\n                if (key.indexOf('$') !== -1 || _value === undefined) {\r\n                    continue;\r\n                } else if (key === 'displayClass') {\r\n                    _.objectSet(this.displayClass, _value, 'union');\r\n                    _.objectSet(this, this.displayClass[this.status]);\r\n                } else if (typeof _value === 'object' && !Array.isArray(_value)) {\r\n                    _.objectSet(self[key], _value, 'union');\r\n                } else {\r\n                    this.setProperty(key, _value);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置属性\r\n     *\r\n     * @param {string} key\r\n     * @param {*} val\r\n     * @returns\r\n     * @memberof BaseCell\r\n     */\r\n    public setProperty(key: string, val: any): void {\r\n        if (val === undefined) {\r\n            return;\r\n        }\r\n        (this as any)[key] = val;\r\n        this.$renderState.hasrendered = false;\r\n    }\r\n\r\n    public clone(excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean): BaseCellInterface {\r\n        return _.myObejctClone(this, excludeReg, keepReg, withFunction);\r\n    }\r\n    /**\r\n     * onFocus\r\n     */\r\n    public onFocus(ev: any): void {\r\n        const res = this.checkHasFormula();\r\n        this.checkLastCharStatus(ev);\r\n    }\r\n\r\n    /**\r\n     * onMouseOver\r\n     */\r\n    public onMouseOver(ev: any): any {\r\n        switch (this.displayType) {\r\n            case 'input':\r\n                ev.srcElement.focus();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * click\r\n     */\r\n    public onClick(ev: any): void {\r\n        ev.stopPropagation();\r\n        const displayType = this.displayClass[this.status].displayType;\r\n    }\r\n    /**\r\n     * onMouseUp\r\n     */\r\n    public onMouseUp(ev: any): any {\r\n        this.checkLastCharStatus(ev);\r\n    }\r\n    /**\r\n     * onBlur\r\n     */\r\n    public inputOnBlur(ev: any, update?: boolean): void {\r\n        // debugger\r\n        this.status = 'normal';\r\n        this.onBlur(ev);\r\n        const parentContainer = this.$parent;\r\n        this.render();\r\n        if (!this.verification.state) {\r\n            this.$warningMessage.forEach((vType: string) => {\r\n                this.warning(this.verification.message[vType]);\r\n            });\r\n        }\r\n        if (parentContainer) {\r\n            if (update) {\r\n                const sourceContainer = parentContainer.getContainer(parentContainer.position);\r\n                sourceContainer.setCell(this);\r\n                sourceContainer.cell.render();\r\n                parentContainer.$positionManager.canFocus = true;\r\n                parentContainer.$positionManager.$editContainer = null;\r\n            }\r\n            (parentContainer as TheadContainer | TbodyContainer).rootParentSendMsg({\r\n                ev_type: 'blur',\r\n                render: true,\r\n                event: ev,\r\n                data: {\r\n                    objectName: 'Cell',\r\n                    object: this,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * onInput\r\n     */\r\n    public onInput(ev: any): void {\r\n        this.checkLastCharStatus(ev);\r\n    }\r\n\r\n\r\n    public onDbClick(ev: any): void {\r\n        if (!(this.status === 'readonly')) {\r\n            this.status = 'dbclick';\r\n            _.objectSet(this, this.displayClass[this.status], 'union');\r\n        }\r\n        const parentContainer = this.$parent;\r\n        if (parentContainer) {\r\n            (parentContainer as TheadContainer | TbodyContainer).rootParentSendMsg({\r\n                ev_type: 'dbclick',\r\n                event: ev,\r\n                data: {\r\n                    objectName: 'Cell',\r\n                    object: this,\r\n                },\r\n            });\r\n        }\r\n        // ev.target.focus();\r\n    }\r\n\r\n    /**\r\n     * onBlur\r\n     */\r\n    public onBlur(ev: any): void {\r\n        if (!(this.status === 'readonly')) {\r\n            this.status = 'normal';\r\n            this.oldValue = this._value;\r\n            _.objectSet(this, this.displayClass[this.status]);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * warning\r\n     */\r\n    public warning(msg: string): void {\r\n        alert(msg);\r\n    }\r\n\r\n    /**\r\n     * onKeyDown\r\n     * 回车失去焦点\r\n     */\r\n    public onKeyDown(ev: any): void {\r\n        // debugger\r\n        if (ev.key === 'Enter') {\r\n            ev.target.blur();\r\n        } else if (ev.key === 'Escape') {\r\n            this._value = this.oldValue;\r\n            ev.target.blur();\r\n        }\r\n    }\r\n    /**\r\n     * onChange事件\r\n     *\r\n     * @param {*} e\r\n     * @memberof BaseCell\r\n     */\r\n    public onChange(ev: any): void {\r\n        if (!(this.status === 'readonly')) {\r\n            this.status = 'normal';\r\n        }\r\n        this.$renderState.hasrendered = false;\r\n        switch (this.displayType) {\r\n            case 'select':\r\n                const selectedIndex = ev.target.selectedIndex;\r\n                this.select.selectOption = this.select.optionList[selectedIndex];\r\n                break;\r\n        }\r\n        const parentContainer = this.$parent;\r\n        if (parentContainer) {\r\n            (parentContainer as TheadContainer | TbodyContainer).rootParentSendMsg({\r\n                ev_type: 'change',\r\n                render: true,\r\n                event: ev,\r\n                data: {\r\n                    objectName: 'Cell',\r\n                    object: this,\r\n                },\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * checkStatus\r\n     */\r\n    public checkStatus() {\r\n        let readonly: boolean = false;\r\n        const parnetContainer: CellContainer = this.$parent;\r\n        if (this.readonly !== undefined) {\r\n            readonly = this.readonly;\r\n        } else if (parnetContainer) {\r\n            const rootParent: BaseThead | BaseTbody | IndexThead = parnetContainer.$rootParent;\r\n            if (parnetContainer.readonly !== undefined) {\r\n                readonly = parnetContainer.readonly;\r\n            } else if (rootParent) {\r\n                if (rootParent.readonly !== undefined) {\r\n                    readonly = rootParent.readonly;\r\n                }\r\n            }\r\n        }\r\n        if (readonly === true) {\r\n            this.status = 'readonly';\r\n        } else {\r\n            this.status = 'normal';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * render\r\n     * 渲染\r\n     */\r\n    public render(): void {\r\n        const parentContainer: any = this.$parent;\r\n        if (parentContainer) {\r\n            this.style.width = parentContainer.widthSelfNum - 2 + 'px';\r\n            this.style.height = parentContainer.heightSelfNum - 2 + 'px';\r\n            this.style.lineHeight = parentContainer.style.height;\r\n        }\r\n        if (this.$renderState.hasrendered && !this.formula.hasFormula) {\r\n            // debugger;\r\n            return;\r\n        } else if (this.$renderState.inRender) {\r\n            this.content = 0;\r\n            const position = parentContainer.position;\r\n            console.error('重复引用:table' + position.table + '!' + position.colStr + position.rowStr);\r\n        } else {\r\n            this.$renderState.inRender = true;\r\n            this.checkHasFormula();\r\n            if (parentContainer && this.formula.hasFormula) {\r\n                const posiitonReg = /([\\u4e00-\\u9fa5_a-zA-Z0-9_]+!)?[A-Z]+[0-9]+/g;\r\n                let formulaContent = this._value.replace(/^=/, ''); // 拷贝一份不带'='的，用于计算\r\n\r\n                let valueBack: string = this._value; // 拷贝一份带'='的，用于替换\r\n                {\r\n                    // 处理百分号计算\r\n                    formulaContent = Formula.percentHandle(formulaContent);\r\n                    // 处理花括号计算\r\n                    formulaContent = Formula.curlyBracesHandle(formulaContent, parentContainer);\r\n                }\r\n\r\n                let ICObject: any = {}; // 新建一个对象存储对应信息\r\n                const regObj = formulaContent.match(posiitonReg);\r\n                (regObj || []).forEach((item: string) => {\r\n                    // 获得position 如果没有table则默认为同表操作\r\n                    const position = Formula.cellStr2Position(item);\r\n                    position.table = position.table || parentContainer.position.table;\r\n                    const tmpNameStr = position.table + '!' + position.colStr + position.rowStr;\r\n\r\n                    let result: CellContainer;\r\n                    // 2019/4/2因为时间不够 逻辑未明确 所以注释该语句，解决$ICObject所存数据未及时更新bug，但\r\n                    // 产生的后果是，公式中单元格位置变动时，不能自动更新公式 \r\n\r\n                    // ICObject = this.$ICObject;\r\n                    if (ICObject.hasOwnProperty(tmpNameStr)) {\r\n                        result = ICObject[tmpNameStr];\r\n                        if (result) {\r\n                            const newPositonStr = ((result.position.table === parentContainer.position.table) ? '' : result.position.table + '!') + result.position.colStr + result.position.rowStr;\r\n                            ICObject[tmpNameStr] = result;\r\n                            valueBack = _.replaceAll(valueBack, item, 'back_' + tmpNameStr);\r\n                            if (valueBack.search('back_' + tmpNameStr) !== -1) {\r\n                                valueBack = _.replaceAll(valueBack, 'back_' + tmpNameStr, newPositonStr);\r\n                            } else {\r\n                                // debugger\r\n                                // valueBack = _.replaceAll(valueBack, item, tmpNameStr);\r\n                            }\r\n                        } else {\r\n                            console.error('cell:render() result为空');\r\n                        }\r\n                    } else {\r\n                        result = parentContainer.getContainer(position);\r\n                        ICObject[tmpNameStr] = result;\r\n                    }\r\n                    if (result && result.cell) {\r\n                        result.cell.render();\r\n                        formulaContent = formulaContent.replace(item, result.cell.content || 0);\r\n                        // console.log(formulaContent);\r\n                    }\r\n                });\r\n                this._value = valueBack;\r\n                this.$ICObject = ICObject;\r\n\r\n                formulaContent = Formula.complexEval(formulaContent);\r\n                this.content = formulaContent;\r\n\r\n            } else {\r\n                this.content = (this._value === '' || this._value === null || this._value === undefined) ? this.nullReplace : this._value;\r\n            }\r\n            this.$renderState.inRender = false;\r\n\r\n        }\r\n        this.doVerify();\r\n        this.format();\r\n        this.checkStatus();\r\n    }\r\n\r\n    /**\r\n     * check\r\n     */\r\n    private checkLastCharStatus(ev: any): void {\r\n        this.selectionStart = ev.target.selectionStart;\r\n        const lastCharIndex = this.selectionStart - 1;\r\n        const char = (this._value + '').substr(lastCharIndex, 1);\r\n        const parentContainer = this.$parent;\r\n        console.log('char:' + char);\r\n\r\n        if (/^[\\+\\-\\*\\/\\=]$/.test(char)) {\r\n            // debugger\r\n            this.formula.canClickAdd = true;\r\n            parentContainer.$positionManager.canFocus = false;\r\n            parentContainer.$positionManager.$editContainer = parentContainer;\r\n            this.formula.tmpValue = this._value;\r\n        } else {\r\n            this.formula.canClickAdd = false;\r\n            parentContainer.$positionManager.canFocus = true;\r\n            parentContainer.$positionManager.$editContainer = null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * checkHasFormula\r\n     */\r\n    private checkHasFormula(): boolean {\r\n        if (this.$parent) {\r\n            const regStart = /^=/;\r\n            if (regStart.test(this._value)) {\r\n                this.formula.hasFormula = true;\r\n                const regEnd = /[A-Z]+[0-9]+$/g;\r\n                if (regEnd.test(this._value)) {\r\n                    this.formula.canClickAdd = true;\r\n                } else {\r\n                    this.formula.canClickAdd = false;\r\n                }\r\n                this.formula.canClickAdd = true;\r\n            } else {\r\n                this.formula.hasFormula = false;\r\n            }\r\n        }\r\n        return this.formula.hasFormula;\r\n    }\r\n\r\n}\r\n\r\n","import { PositionInterface } from '../../interface/PositionInterface';\r\nimport { CellContainer } from '../../viewModule/container/CellContainer';\r\nimport * as _ from '../../utils';\r\nimport { TreeContainer } from '../../viewModule/container/TreeContainer';\r\n\r\n\r\nexport class PositionManager {\r\n\r\n    public static instances: any = {};\r\n    /**\r\n     * getInstance\r\n     */\r\n    public static getInstance(type: string) {\r\n        let instance = this.instances[type];\r\n        if (!instance) {\r\n            this.instances[type] = instance = new PositionManager(type);\r\n        }\r\n        return instance;\r\n    }\r\n    public positionMap: object = {\r\n\r\n    };\r\n\r\n    public treeContainerMap: Map<any, TreeContainer> = new Map();\r\n    public hideContainerMap: Map<any, CellContainer> = new Map();\r\n    public type: string;\r\n    public $editContainer: CellContainer | null = null;\r\n    public canFocus: boolean = true; // 是否可以获得焦点\r\n\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n\r\n    public clearPositionMapById(key: any): void {\r\n        delete this.positionMap[key + 'clone'];\r\n        delete this.positionMap[key + 'last'];\r\n        delete this.positionMap[key + 'source'];\r\n    }\r\n\r\n    /**\r\n     * getContainer\r\n     */\r\n    public getContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): any {\r\n        let res = null;\r\n        try {\r\n            if (position) {\r\n                type = type || 'source';\r\n                const copyPosition = _.clone(position);\r\n                copyPosition.table = copyPosition.table + type;\r\n                const tableObj = this.positionMap[copyPosition.table];\r\n                if (tableObj) {\r\n                    const colObj = tableObj[copyPosition.colStr];\r\n                    if (colObj) {\r\n                        res = colObj[copyPosition.rowStr];\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('getContainer发生错误');\r\n            console.log(error);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n\r\n\r\n    public getTopIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): any {\r\n        type = type || 'source';\r\n        const cloneP = _.clone(position);\r\n        cloneP.rowStr = 0;\r\n        return this.getContainer(cloneP, type);\r\n    }\r\n\r\n    public getLeftIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): any {\r\n        type = type || 'source';\r\n        const cloneP = _.clone(position);\r\n        cloneP.colStr = '@';\r\n        return this.getContainer(cloneP, type);\r\n    }\r\n\r\n    /**\r\n     * getColObj\r\n     */\r\n    public getColObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): any {\r\n        type = type || 'source';\r\n        const copyPosition = _.clone(position);\r\n        copyPosition.table = copyPosition.table + type;\r\n        let res = null;\r\n        const tableObj = this.positionMap[copyPosition.table];\r\n        if (tableObj) {\r\n            const colObj = tableObj[copyPosition.colStr];\r\n            res = colObj;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * getRowObj\r\n     */\r\n    public getRowObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): any {\r\n        type = type || 'source';\r\n        const copyPosition = _.clone(position);\r\n        copyPosition.table = copyPosition.table + type;\r\n        let res = null;\r\n        const tableObj = this.positionMap[copyPosition.table];\r\n        if (tableObj) {\r\n            res = {};\r\n            for (const colStr in tableObj) {\r\n                if (tableObj.hasOwnProperty(colStr)) {\r\n                    const colObj = tableObj[colStr];\r\n                    res[colStr] = colObj[copyPosition.rowStr];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * setPositionMap\r\n     */\r\n    public setPositionMap(position: PositionInterface, container: CellContainer, type?: 'clone' | 'source' | 'last'): void {\r\n        type = type || 'source';\r\n        const copyPosition = _.clone(position);\r\n        copyPosition.table = copyPosition.table + type;\r\n        if (!this.positionMap.hasOwnProperty(copyPosition.table)) {\r\n            this.positionMap[copyPosition.table] = {};\r\n        }\r\n        const tableObj = this.positionMap[copyPosition.table];\r\n        if (!tableObj.hasOwnProperty(copyPosition.colStr)) {\r\n            tableObj[copyPosition.colStr] = {};\r\n        }\r\n        const colObj = tableObj[copyPosition.colStr];\r\n        colObj[copyPosition.rowStr] = container;\r\n    }\r\n\r\n    /**\r\n     * saveLastPositionMap\r\n     */\r\n    public saveLastPositionMap(position: PositionInterface): object {\r\n        const copyPosition = _.clone(position);\r\n        const tableClone = this.positionMap[copyPosition.table + 'source'];\r\n        for (const colStr in tableClone) {\r\n            if (tableClone.hasOwnProperty(colStr)) {\r\n                const colObj = tableClone[colStr];\r\n\r\n                for (const rowStr in colObj) {\r\n                    if (colObj.hasOwnProperty(rowStr)) {\r\n                        const container: CellContainer = colObj[rowStr];\r\n                        const lastPosition = _.clone(copyPosition);\r\n                        lastPosition.colStr = colStr;\r\n                        lastPosition.rowStr = rowStr;\r\n                        // debugger\r\n                        this.setPositionMap(lastPosition, container.clone(), 'last');\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        return this.positionMap[copyPosition.table + 'last'];\r\n    }\r\n}\r\n","\r\nexport class Subject {\r\n    private callbackList: any[] = new Array();\r\n    public subscribe(callback: (msg: any) => void, self: any) {\r\n        this.callbackList.push({\r\n            fun: callback,\r\n            arg: self,\r\n        });\r\n    }\r\n    public unsubscribe(callback: (msg: any) => void, self: any) {\r\n        let index = -1;\r\n        this.callbackList.forEach((item: any, i: number) => {\r\n            if (item === {\r\n                fun: callback,\r\n                arg: self,\r\n            }) {\r\n                index = i;\r\n            }\r\n        });\r\n        // const index = this.callbackList.indexOf(callback);\r\n        if (index > -1) {\r\n            this.callbackList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n\r\n    public sendMsg(msg: any): any {\r\n        return this.notify(msg);\r\n    }\r\n\r\n    private notify(msg: any) {\r\n        const resultList = [];\r\n        this.callbackList.forEach((obj) => {\r\n            resultList.push(obj.fun.call(obj.arg, msg) || true);\r\n        });\r\n        return resultList;\r\n    }\r\n}","import { BaseContainerInterface } from '../../interface/viewModule/container/BaseContainer';\r\nimport * as _ from '../../utils/index';\r\nimport { DragTableConfig } from '../../config/DragTableConfig';\r\nimport { PositionManager } from '../../module/positionManager/PositionManager';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\nimport { TheadContainer } from './TheadContainer';\r\nimport { TbodyContainer } from './TbodyContainer';\r\nimport { IndexContainer } from './IndexContainer';\r\nimport { Subject } from '../../communication/Subject';\r\nimport { SubjectMsgInterface } from '../../interface/SubjectMsgInterface';\r\nimport { UtilsConfig } from '../../utils/base/config';\r\nimport { BaseTable } from '../table/BaseTable';\r\n\r\n// 只有对于容器来说才有相对位置\r\nexport abstract class BaseContainer {\r\n    public id: any;\r\n    public config: any;\r\n    public style: any;\r\n    public type: 'top' | 'left' | 'top-index' | 'left-index' | 'inner' | 'tbody' | 'table';\r\n    public position: PositionInterface;\r\n    public children: BaseContainer[]; // 子容器\r\n    public userData: any;\r\n    public $groupId: string;\r\n    public $subject: Subject = new Subject(); //  订阅事件\r\n    public $dragTableConfig: DragTableConfig;\r\n    public $positionManager: PositionManager; // 位置记录器\r\n    public $rootTable: BaseTable; // 根容器\r\n    public $parent: any;\r\n    public $inSystem: boolean;\r\n    public widthNum: number;\r\n    public heightNum: number;\r\n    public widthChildNum: number;\r\n    public heightChildNum: number;\r\n    public widthSelfNum: number;\r\n    public heightSelfNum: number;\r\n    public paddingLeftNum: number;\r\n    public paddingRightNum: number;\r\n\r\n    constructor(param: BaseContainerInterface) {\r\n        const paramClone = _.keepClone(param);\r\n        // 1、预先初始化，包括默认配置config\r\n        // 2、并将dragTableConfig融合到用户参数param里获得param2；\r\n        this.initBeforeSetData(paramClone);\r\n        // 设置一遍 默认配置config的参数\r\n        _.objectSet(this, this.config, 'union');\r\n        // 设置用户设置param\r\n        this.setContainerData(paramClone);\r\n        // this.config = null;\r\n    }\r\n    /**\r\n     * initBeforeConstructor\r\n     */\r\n    public initBeforeSetData(paramClone: any): void {\r\n        // 初始化默认配置\r\n        this.id = paramClone.id || 'def_' + _.guid();\r\n        this.config = {};\r\n        this.$groupId = paramClone.$groupId;\r\n        this.$rootTable = paramClone.$rootTable;\r\n        this.$positionManager = PositionManager.getInstance(this.$groupId);\r\n        this.$dragTableConfig = DragTableConfig.getInstance(this.$groupId);\r\n        // dragtable设置注入\r\n        this.config = _.clone(this.$dragTableConfig.BaseContainerConfig);\r\n        // _.objectSet(this.config, this.$dragTableConfig.BaseContainerConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.baseContainer, 'union');\r\n        this.type = paramClone.type || 'top';\r\n    }\r\n\r\n    /**\r\n     * setContainerData\r\n     */\r\n    public setContainerData(containerData: BaseContainerInterface, containerData2?: BaseContainerInterface, weight1?: object, weight2?: object, callBack?: any): void {\r\n        const paramClone = _.keepClone(containerData);\r\n        const paramClone2 = _.keepClone(containerData2);\r\n        const self: any = this;\r\n        try {\r\n            for (const key in this) {\r\n                if (this.hasOwnProperty(key)) {\r\n                    // if(key === 'hideType'){\r\n                    //     console.log(containerData.hideType);\r\n                    // }\r\n                    const value = this.getDataByWeight(key, paramClone, paramClone2, weight1, weight2);\r\n                    if (value === null || value === undefined) {\r\n                        this.setProperty(key, value);\r\n                        continue;\r\n                    } else if (/(^\\$)|cell|bodyData|Entity|treeContainer|tipContainer/.test(key)) {\r\n                        // debugger\r\n                        // do nothing; \r\n                    } else if (typeof value === 'object' && !Array.isArray(value)) {\r\n                        if (self[key] && typeof self[key].setContainerData === 'function') {\r\n                            self[key].setContainerData(value);\r\n                            continue;\r\n                        } else {\r\n                            _.objectSet(self[key], value, 'union', /\\$/);\r\n                            continue;\r\n                        }\r\n                    } else if (key === 'children') {\r\n                        this.setChildren(value);\r\n                        continue;\r\n                    }\r\n\r\n                    if (callBack && typeof callBack === 'function') {\r\n                        callBack(key, value);\r\n                    } else {\r\n                        this.setProperty(key, value);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('setContainerData 中出现出错');\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * setChirldren\r\n     */\r\n    public setChildren(children: any[]) {\r\n        this.children = new Array();\r\n        children.forEach((item: any) => {\r\n            const child = this.createContain(item);\r\n            this.addChild(child);\r\n        });\r\n    }\r\n    /**\r\n     * createContain\r\n     */\r\n    public createContain(data: any): any {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * addChild\r\n     * 备注：添加子节点\r\n     * @param child: BaseCell 要添加的子节点\r\n     * @param targetIndex?: number 添加的位置\r\n     */\r\n    public addChild(child: BaseContainer, targetIndex?: number): any {\r\n        targetIndex = (targetIndex === undefined || targetIndex === null) ? this.children.length : targetIndex;\r\n        this.children.splice(targetIndex, 0, child);\r\n        child.$parent = this;\r\n        return child.id;\r\n    }\r\n    /**\r\n     * deletChild\r\n     * 备注：删除子节点\r\n     * @param count: number 要删除的个数 默认为1\r\n     * @param targetIndex?: number 删除的位置\r\n     * @param needDeleteItChildren?: boolean 是否连同该被 要删除的节点A 和A的子节点都删除\r\n     */\r\n    public deletChild(targetIndex: number, count?: number, needDeleteItChildren?: boolean): void {\r\n        let hasDeleteContainer = [];\r\n        count = count == null ? 1 : count;\r\n        if (needDeleteItChildren) {\r\n            hasDeleteContainer = this.children.splice(targetIndex, count);\r\n        } else {\r\n            const childrenList: any[] = []; // 临时存被删除BaseTheadCell的孩子们\r\n            let childrenStartIndex = targetIndex + count;\r\n            for (let index = targetIndex; index < targetIndex + count; index++) {\r\n                this.children[index].children.forEach((child: BaseContainer, i: number) => {\r\n                    this.addChild(child, childrenStartIndex);\r\n                    childrenStartIndex++;\r\n                });\r\n            }\r\n            hasDeleteContainer = this.children.splice(targetIndex, count);\r\n        }\r\n        hasDeleteContainer.forEach((container: BaseContainer) => {\r\n            container.$inSystem = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * replaceChild\r\n     * 备注：替换子节点\r\n     * @param count: number 要删除的个数 默认为1\r\n     * @param targetIndex?: number 删除的位置\r\n     * @param needDeleteItChildren?: boolean 是否连同该被 要删除的节点A 和A的子节点都删除\r\n     */\r\n    public replaceChild(newChild: BaseContainer, targetIndex: number, needDeleteItChildren?: boolean): void {\r\n        if (!newChild.id) {\r\n            newChild.id = 'def_' + _.guid();\r\n        }\r\n        if (targetIndex > this.children.length - 1) {\r\n            this.addChild(newChild, targetIndex);\r\n        } else {\r\n            newChild.position = this.children[targetIndex].position;\r\n            if (needDeleteItChildren) {\r\n                this.children.splice(targetIndex, 1, newChild);\r\n            } else {\r\n                const childrenList: any[] = []; // 临时存被删除BaseTheadCell的孩子们\r\n                this.children[targetIndex].children.forEach((child: BaseContainer, i: number) => {\r\n                    childrenList.push(child);\r\n                });\r\n                this.children.splice(targetIndex, 1, newChild);\r\n                newChild.children = newChild.children.concat(childrenList);\r\n            }\r\n        }\r\n        newChild.$parent = this;\r\n    }\r\n    /**\r\n     * clone\r\n     */\r\n    public clone(excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean): any {\r\n        keepReg = keepReg || UtilsConfig.keepReg;\r\n        // return _.myObejctClone(this, excludeReg, keepReg, withFunction);\r\n        const object: any = Object.create({});\r\n        const Obj = this;\r\n        for (const key in Obj) {\r\n            if (Obj.hasOwnProperty(key) || (withFunction && typeof Obj[key] === 'function')) {\r\n                const tmpObject: any = Obj[key];\r\n                let val: any = null;\r\n                const needContinue = excludeReg ? (excludeReg.test(key) ? true : false) : false;\r\n                const needKeep = keepReg ? (keepReg.test(key) ? true : false) : false;\r\n                if (needContinue) {\r\n                    continue;\r\n                } else if (needKeep) {\r\n                    val = Obj[key];\r\n                } else if (Array.isArray(tmpObject)) {\r\n                    val = [];\r\n                    tmpObject.forEach((item: any) => {\r\n                        if (typeof item.clone === 'function') {\r\n                            val.push(item.clone(excludeReg, keepReg, withFunction));\r\n                        } else {\r\n                            val.push(_.keepClone(item, excludeReg, keepReg, withFunction));\r\n                        }\r\n                    });\r\n                } else if (typeof Obj[key] === 'object') {\r\n                    if (tmpObject && typeof tmpObject.clone === 'function') {\r\n                        val = tmpObject.clone(excludeReg, keepReg, withFunction);\r\n                    } else {\r\n                        val = (_.keepClone(tmpObject, excludeReg, keepReg, withFunction));\r\n                    }\r\n                } else {\r\n                    val = Obj[key];\r\n                }\r\n                object[key] = val;\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n    /**\r\n     * 通用设置配置\r\n     *\r\n     * @param {*} config\r\n     * @memberof BaseContainer\r\n     */\r\n    public setConfig(config: any): void {\r\n        const configCopy = _.clone(config);\r\n        try {\r\n            if (configCopy) {\r\n                _.objectSet(this, configCopy, 'union');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置属性\r\n     *\r\n     * @param {string} key\r\n     * @param {*} val\r\n     * @returns\r\n     * @memberof BaseContainer\r\n     */\r\n    public setProperty(key: string, val: any): void {\r\n        if (val === undefined) {\r\n            return;\r\n        }\r\n        (this as any)[key] = val;\r\n    }\r\n\r\n    public onClick(ev: any): void {\r\n        if (this.$rootTable) {\r\n            this.$rootTable.subjectSend({\r\n                ev_type: 'click',\r\n                event: ev,\r\n                data: {\r\n                    objectName: 'BaseContainer',\r\n                    object: this,\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标按下\r\n     *\r\n     * @param {*} ev\r\n     * @param {*} th\r\n     * @memberof BaseTable\r\n     */\r\n    public onMouseDown(ev: any): any {\r\n        ev.stopPropagation();\r\n        // 现代浏览器阻止默认事件\r\n        if (ev && ev.preventDefault) {\r\n            ev.preventDefault();\r\n        } else {\r\n            // 阻止IE\r\n            (window as any).event.returnValue = false;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * onBlur\r\n     */\r\n    public onBlur(ev: any): void {\r\n    }\r\n\r\n\r\n    /**\r\n     * 滚动事件 调整scrollTop scrollLeft\r\n     *\r\n     * @private\r\n     * @param {*} ev\r\n     * @memberof BaseTable\r\n     */\r\n    public onScroll(ev: any): void {\r\n        this.style.scrollTop = ev.srcElement.scrollTop;\r\n        this.style.scrollLeft = ev.srcElement.scrollLeft;\r\n    }\r\n\r\n    /**\r\n     * subjectSend\r\n     */\r\n    public subjectSend(msg: SubjectMsgInterface): any[] {\r\n        return this.$subject.sendMsg(msg);\r\n    }\r\n\r\n    /** 获得容器\r\n     * getContainer\r\n     */\r\n    public getContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainer | TbodyContainer | IndexContainer {\r\n        return this.$positionManager.getContainer(position, type);\r\n    }\r\n\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getTopIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainer | TbodyContainer | IndexContainer {\r\n        return this.$positionManager.getTopIndexContainer(position, type);\r\n    }\r\n\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getLeftIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainer | TbodyContainer | IndexContainer {\r\n        return this.$positionManager.getLeftIndexContainer(position, type);\r\n    }\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getRowObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): object {\r\n        return this.$positionManager.getRowObj(position, type);\r\n    }\r\n    /**\r\n     * getColObj\r\n     */\r\n    public getColObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): object {\r\n        return this.$positionManager.getColObj(position, type);\r\n    }\r\n\r\n    /**\r\n     * saveLastPositionMap\r\n     */\r\n    public saveLastPositionMap(position: PositionInterface): object {\r\n        return this.$positionManager.saveLastPositionMap(position);\r\n    }\r\n\r\n    /**\r\n     * parpare\r\n     */\r\n    protected getDataByWeight(key: string, data1?: any, data2?: any, weight1?: any, weight2?: any): any {\r\n        const dk1 = data1 ? (data1[key]) : undefined;\r\n        const dk2 = data2 ? data2[key] : undefined;\r\n        const wk1 = weight1 ? weight1[key] : undefined;\r\n        const wk2 = weight2 ? weight2[key] : undefined;\r\n        let resData: any;\r\n        if (dk1 !== undefined && dk2 !== undefined) {\r\n            if (wk1 && wk2) {\r\n                if (!isNaN(wk1) && !isNaN(wk2)) {\r\n                    resData = wk1 > wk2 ? dk1 : dk2;\r\n                } else if (!isNaN(wk1) && isNaN(wk2)) {\r\n                    resData = dk1;\r\n                } else if (isNaN(wk1) && !isNaN(wk2)) {\r\n                    resData = dk2;\r\n                } else if (typeof wk1 === 'object' && typeof wk2 === 'object') {\r\n                    resData = {};\r\n                    for (const sonKey in dk1) {\r\n                        if (dk1.hasOwnProperty(sonKey) && !resData.hasOwnProperty(sonKey)) {\r\n                            const sonValue = this.getDataByWeight(sonKey, dk1, dk2, wk1, wk2);\r\n                            resData[sonKey] = sonValue;\r\n                        }\r\n                    }\r\n                    for (const sonKey in dk2) {\r\n                        if (dk2.hasOwnProperty(sonKey) && !resData.hasOwnProperty(sonKey)) {\r\n                            const sonValue = this.getDataByWeight(sonKey, dk1, dk2, wk1, wk2);\r\n                            resData[sonKey] = sonValue;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (wk1 && !wk2) {\r\n                resData = dk1;\r\n            } else if (!wk1 && wk2) {\r\n                resData = dk2;\r\n            } else if (!wk1 && !wk2) {\r\n                resData = dk1;\r\n            }\r\n        } else if (dk1 === undefined && dk2 !== undefined) {\r\n            resData = dk2;\r\n        } else if (dk1 !== undefined && dk2 === undefined) {\r\n            resData = dk1;\r\n        } else if (dk1 === undefined && dk2 === undefined) {\r\n            //\r\n        }\r\n        return resData;\r\n    }\r\n}\r\n","\r\nimport { BaseCell } from '../cell/BaseCell';\r\nimport { CellContainerInterface } from '../../interface/viewModule/container/CellContainer';\r\nimport { BaseContainer } from './BaseContainer';\r\nimport * as _ from '../../utils';\r\nimport { SubjectMsgInterface } from '../../interface/SubjectMsgInterface';\r\nimport { BaseCellInterface } from '../../interface/viewModule/cell/BaseCellInterface';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\n// 只有对于容器来说才有相对位置\r\nexport abstract class CellContainer extends BaseContainer implements CellContainerInterface {\r\n    public cell: BaseCell;\r\n    public readonly: boolean;\r\n    public children: CellContainer[]; // 子容器\r\n    public isRootParent: boolean;\r\n    public $rootParent: any;\r\n    public side1: number; // 横表头 为width 纵表头为height\r\n    public side2: number; // 纵表头 为width 横表头为height\r\n    public span1: number; // 横表头 为colspan 纵表头为rowspan\r\n    public span2: number; // 横表头 为rowspan 纵表头为colspan\r\n    public hideType: 'visible' | 'hideChildrenHeight' | 'hideAll' | 'hideAll-tree' | 'hideSelf';\r\n    public hideTypeTemporary: 'visible' | 'hideChildrenHeight' | 'hideAll' | 'hideAll-tree' | 'hideSelf';\r\n    constructor(param: CellContainerInterface) {\r\n        super(param);\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n        this.cell = new BaseCell({ $parent: this });\r\n        this.$rootParent = paramClone.$rootParent;\r\n        this.paddingLeftNum = paramClone.paddingLeftNum;\r\n        this.config = _.clone(this.$dragTableConfig.CellContainerConfig);\r\n        _.objectSet(paramClone, this.$dragTableConfig.cellContainer, 'union');\r\n    }\r\n\r\n\r\n\r\n    public setContainerData(containerData: CellContainerInterface, containerData2?: CellContainerInterface, weight1?: object, weight2?: object, callBack?: any) {\r\n\r\n        const conditionHandle = (key: string, value: any) => {\r\n            // debugger\r\n            if (/^cell$/.test(key)) {\r\n                this.setCell(value);\r\n                return;\r\n            }\r\n            if (callBack && typeof callBack === 'function') {\r\n                callBack(key, value);\r\n            } else {\r\n                this.setProperty(key, value);\r\n            }\r\n        };\r\n        super.setContainerData(containerData, containerData2, weight1, weight2, conditionHandle);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * checkStatus\r\n     */\r\n    public checkStatus(key: string): any {\r\n        let result: any;\r\n        const rootParent: any = this.$rootParent;\r\n        if (this[key] !== undefined) {\r\n            result = this[key];\r\n        } else if (rootParent) {\r\n            if (rootParent[key] !== undefined) {\r\n                result = rootParent[key];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * 设置Cell\r\n     * @param {BaseCell} cell\r\n     * @memberof CellContainer\r\n     */\r\n    public setCell(cell: BaseCellInterface): void {\r\n        if (this.cell && typeof this.cell.setCellData === 'function') {\r\n            this.cell.setCellData(cell);\r\n        } else {\r\n            cell.$parent = this;\r\n            this.cell = new BaseCell(cell);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 点击事件\r\n     *\r\n     * @param {*} ev\r\n     * @memberof CellContainer\r\n     */\r\n    public onClick(ev: any): void {\r\n        this.rootParentSendMsg({\r\n            ev_type: 'click',\r\n            event: ev,\r\n            data: {\r\n                objectName: 'CellContainer',\r\n                object: this,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * onMouseDown\r\n     */\r\n    public onMouseDown(ev: any): any {\r\n        const msg: SubjectMsgInterface = {\r\n            ev_type: 'mouseDown',\r\n            event: ev,\r\n            data: {\r\n                objectName: 'CellContainer',\r\n                object: this,\r\n            },\r\n        };\r\n        if (ev.which === 3) {\r\n            msg.ev_type = 'rightClick';\r\n            // // 屏蔽右键\r\n            // document.oncontextmenu = () => {\r\n            //     return false;\r\n            // };\r\n            this.rootParentSendMsg(msg);\r\n        } else if (ev.which === 2) {\r\n            msg.ev_type = 'middleClick';\r\n            this.rootParentSendMsg(msg);\r\n        }\r\n\r\n        if (!this.$positionManager.canFocus && this.$positionManager.$editContainer !== this) {\r\n            super.onMouseDown(ev);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * setWidthOrHeight\r\n     */\r\n    public setWidthOrHeight(type: 'width' | 'height', side1: number): void {\r\n        // debugger\r\n        let indexContainer: any;\r\n        for (let i = 0; i < this.side1; i++) {\r\n            const position: PositionInterface = _.clone(this.position);\r\n            if (type === 'width') {\r\n                position.colStr = _.getA_Z(position.colNum + i + 1);\r\n                indexContainer = this.getTopIndexContainer(this.position, 'source');\r\n            } else if (type === 'height') {\r\n                position.rowStr = position.rowNum + i + 1;\r\n                indexContainer = this.getLeftIndexContainer(this.position, 'source');\r\n            }\r\n            if (isNaN(side1) || !indexContainer) {\r\n                return;\r\n            }\r\n            side1 = Number(side1);\r\n            indexContainer.style[type] = side1 + 'px';\r\n            indexContainer[type + 'SelfNum'] = indexContainer[type + 'Num'] = side1;\r\n        }\r\n        this.$positionManager.saveLastPositionMap(this.position);\r\n        this.rootParentSendMsg({\r\n            ev_type: 'beforeRender',\r\n            render: true,\r\n            event: null,\r\n            data: {\r\n                objectName: '',\r\n                object: null\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * delThisRow\r\n     */\r\n    public delThisRow(delType: 'row' | 'col'): void {\r\n        this.$rootTable.delOneRowCol(delType, this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 粘贴事件\r\n     *\r\n     * @param {*} e\r\n     * @param {*} container\r\n     * @memberof BaseTable\r\n     */\r\n    public onPaste(ev: any): string {\r\n        let pastedText: any;\r\n        if (ev.clipboardData && ev.clipboardData.getData) { // IE\r\n            pastedText = ev.clipboardData.getData('Text');\r\n        } else {\r\n            pastedText = ev.originalEvent.clipboardData.getData('Text'); // e.clipboardData.getData('text/plain');\r\n        }\r\n        if (this.cell) {\r\n            this.cell.value = pastedText;\r\n            const msg: SubjectMsgInterface = {\r\n                ev_type: 'paste',\r\n                render: true,\r\n                event: ev,\r\n                data: {\r\n                    objectName: 'CellContainer',\r\n                    object: this,\r\n                },\r\n            };\r\n            if (this.$rootParent) {\r\n                this.rootParentSendMsg(msg);\r\n            }\r\n        }\r\n        return pastedText;\r\n    }\r\n\r\n    /**\r\n     * subjectSend\r\n     */\r\n    public rootParentSendMsg(msg: SubjectMsgInterface): any[] {\r\n        let resultList = [];\r\n        if (this.$rootParent) {\r\n            resultList = this.$rootParent.subjectSend(msg);\r\n        } else if (this.$rootTable) {\r\n            resultList = this.$rootTable.subjectSend(msg);\r\n        }\r\n        return resultList;\r\n    }\r\n\r\n\r\n}\r\n\r\n","export class BaseStyle {\r\n    public static addBackgroundColor(dom: any, color: string) {\r\n        dom.style['background-color'] = color;\r\n    }\r\n    public static removeBackgroundColor(dom: any) {\r\n        dom.style.removeProperty('background-color');\r\n    }\r\n    public static addBorder(dom: any, borderBearing: string, width?: number, borderColor?: string) {\r\n        let style = 'solid ';\r\n        if (width) {\r\n            style += width + 'px ';\r\n        }\r\n        if (borderColor) {\r\n            style += borderColor + ' ';\r\n        }\r\n        dom.style['border-' + borderBearing] = style;\r\n    }\r\n    public static removeBorder(dom: any) {\r\n        dom.style.removeProperty('border-left');\r\n        dom.style.removeProperty('border-right');\r\n        dom.style.removeProperty('border-top');\r\n        dom.style.removeProperty('border-bottom');\r\n    }\r\n\r\n    public static checkBearing(ev: any, rule?: {\r\n        top?: number,\r\n        right?: number,\r\n        bottom?: number,\r\n        left?: number\r\n    }): 'top' | 'right' | 'bottom' | 'left' | 'inner' | 'other' {\r\n        let res: any = 'inner';\r\n        if (ev.currentTarget) {\r\n            const dragoverTarget = ev.currentTarget;\r\n            // const X1of4 = this.getOffsetLeftByBody(dragoverTarget) + dragoverTarget.offsetWidth * 0.25;\r\n            // const X3of4 = this.getOffsetLeftByBody(dragoverTarget) + dragoverTarget.offsetWidth * 0.75;\r\n            // const Y1of4 = this.getOffsetTopByBody(dragoverTarget) + dragoverTarget.offsetHeight * 0.25;\r\n            // const Y3of4 = this.getOffsetTopByBody(dragoverTarget) + dragoverTarget.offsetHeight * 0.75;\r\n            let xLeft = ev.target.offsetWidth * 0.25;\r\n            let xright = ev.target.offsetWidth * 0.75;\r\n            let yTop = ev.target.offsetHeight * 0.25;\r\n            let yBottom = ev.target.offsetHeight * 0.75;\r\n            // debugger\r\n            if (rule) {\r\n                xLeft = rule.left || xLeft;\r\n                xright = ev.target.offsetWidth - rule.right || xright;\r\n                yTop = rule.top || yTop;\r\n                yBottom = ev.target.offsetHeight - rule.bottom || yBottom;\r\n            }\r\n            if (ev.offsetY < yTop) {\r\n                res = 'top';\r\n            }\r\n            if (ev.offsetY > yBottom) {\r\n                res = 'bottom';\r\n            }\r\n            if (ev.offsetX < xLeft) {\r\n                res = 'left';\r\n            }\r\n            if (ev.offsetX > xright) {\r\n                res = 'right';\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n\r\n\r\n    public static getOffsetTopByBody(el: any) {\r\n        let offsetTop = 0;\r\n        while (el && el.tagName !== 'BODY') {\r\n            offsetTop += el.offsetTop;\r\n            el = el.offsetParent;\r\n        }\r\n        return offsetTop;\r\n    }\r\n\r\n    public static getOffsetLeftByBody(el: any) {\r\n        let offsetLeft = 0;\r\n        while (el && el.tagName !== 'BODY') {\r\n            offsetLeft += el.offsetLeft;\r\n            el = el.offsetParent;\r\n        }\r\n        return offsetLeft;\r\n    }\r\n\r\n}","import * as _ from '../../utils';\r\nimport { TheadContainer } from './TheadContainer';\r\nimport { BaseContainer } from './BaseContainer';\r\nimport { SelfContainerInterface } from '../../interface/viewModule/container/SelfContainer';\r\n\r\n// 只有对于容器来说才有相对位置\r\nexport class SelfContainer extends BaseContainer {\r\n    public show: boolean;\r\n    public type: any;\r\n    public rightNum: number;\r\n    public $parent: TheadContainer;\r\n    public svg: any;\r\n    \r\n    constructor(param: SelfContainerInterface) {\r\n        super(param);\r\n    }\r\n    /**\r\n     * initBeforeSetData\r\n     */\r\n    public initBeforeSetData(paramClone?: any) {\r\n        super.initBeforeSetData(paramClone);\r\n        this.$parent = paramClone.$parent;\r\n        this.config = _.clone(this.$dragTableConfig.SelfContainerConfig);\r\n        // _.objectSet(this.config, this.$dragTableConfig.SelfContainerConfig, 'union');\r\n    }\r\n    public onClick(ev: any): void {\r\n        ev.stopPropagation();\r\n        if (this.$rootTable) {\r\n            this.$rootTable.subjectSend({\r\n                ev_type: 'click',\r\n                event: ev,\r\n                data: {\r\n                    objectName: this.type + 'Container',\r\n                    object: this,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    public resize() {\r\n        // debugger\r\n        this.style.height = this.$parent.heightSelfNum + 'px';\r\n        this.style.right = this.rightNum + 'px';\r\n        this.widthNum = this.widthSelfNum + this.rightNum;\r\n        this.style.lineHeight = this.$parent.heightSelfNum + 'px';\r\n    }\r\n}\r\n\r\n","import * as _ from '../../utils';\r\nimport { TheadContainerInterface } from '../../interface/viewModule/container/TheadContainer';\r\nimport { TheadContainer } from './TheadContainer';\r\nimport { TreeContainerInterface } from '../../interface/viewModule/container/TreeContainer';\r\nimport { TreeContainerConfig } from '../../config/TreeContainerConfig';\r\nimport { ContainerFactory } from '../../utils/Factory';\r\nimport { SelfContainer } from './SelfContainer';\r\n\r\n// 只有对于容器来说才有相对位置\r\nexport class TreeContainer extends SelfContainer {\r\n    public $openStatus: 'close' | 'open' | 'loading';\r\n    public children: TheadContainer[]; // 子容器\r\n    public $treeParent: TreeContainer;\r\n    public config: TreeContainerConfig;\r\n    private allChildren: any[];\r\n    private openChildrenCount: number;\r\n    private nextStatus: 'close' | 'open';\r\n\r\n    constructor(param: TreeContainerInterface) {\r\n        super(param);\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any) {\r\n        super.initBeforeSetData(paramClone);\r\n        this.$parent = paramClone.$parent;\r\n        _.objectSet(this.config, this.$dragTableConfig.TreeContainerConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.treeContainer, 'union');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 点击事件\r\n     *\r\n     * @param {*} ev\r\n     * @memberof CellContainer\r\n     */\r\n    public onClick(ev: any): void {\r\n        ev.stopPropagation();\r\n        this.nextStatus = this.$openStatus === 'open' ? 'close' : 'open';\r\n        try {\r\n            const parnent = this.$parent;\r\n            if (parnent) {\r\n                parnent.rootParentSendMsg({\r\n                    ev_type: this.nextStatus,\r\n                    event: ev,\r\n                    data: {\r\n                        object: this,\r\n                        objectName: 'TreeContainer',\r\n                    },\r\n                });\r\n                if (this.$openStatus !== 'loading') {\r\n                    this.$openStatus = this.nextStatus;\r\n                    this.loop(this.$openStatus);\r\n                    parnent.rootParentSendMsg({\r\n                        ev_type: 'beforeRender',\r\n                        render: true,\r\n                        event: ev,\r\n                        data: {\r\n                            object: null,\r\n                            objectName: 'innerContontainer',\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * loop\r\n     */\r\n    public loop(type: 'close' | 'open') {\r\n        if (type === 'close') {\r\n            this.hideChildren();\r\n        } else if (type === 'open') {\r\n            this.checkAndChange();\r\n        }\r\n        this.children.forEach((child: TheadContainer) => {\r\n            const childInnerContainer: TreeContainer = child.treeContainer;\r\n            if (childInnerContainer) {\r\n                childInnerContainer.loop(type);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 设置container属性 部分属性特殊处理\r\n     *\r\n     * @param {ContainerInterface} containerData\r\n     * @memberof TheadContainer\r\n     */\r\n    public setContainerData(containerData: TreeContainerInterface, containerData2?: TreeContainerInterface, weight1?: object, weight2?: object, callBack?: any) {\r\n        super.setContainerData(containerData, containerData2, weight1, weight2, callBack);\r\n    }\r\n\r\n    /**\r\n     * 自动递归计算容器长宽，以及span、theadPosition等属性值\r\n     *\r\n     * @param {any[]} [$leafIndexList]\r\n     * @memberof TheadContainer\r\n     */\r\n    public resize(): void {\r\n        let allChildren = new Array();\r\n        let openChildrenCount = 0;\r\n        const parent = this.$parent;\r\n        // if (this.$parent.id == 'zdy') {\r\n        //     debugger\r\n        // }\r\n        if (this.children.length !== 0) {\r\n            this.show = true;\r\n            this.children.forEach((child: TheadContainer, i: number) => {\r\n                allChildren.push(child);\r\n                const childInnerContainer: TreeContainer = child.treeContainer;\r\n                if (childInnerContainer) {\r\n                    childInnerContainer.resize();\r\n                    allChildren = allChildren.concat(childInnerContainer.allChildren);\r\n                    openChildrenCount += childInnerContainer.$openStatus === 'open' ? childInnerContainer.children.length : 0;\r\n                    openChildrenCount += child.treeContainer.openChildrenCount;\r\n                    childInnerContainer.$treeParent = this;\r\n                }\r\n            });\r\n            this.widthNum = this.widthSelfNum + this.paddingLeftNum + 2;\r\n        } else {\r\n            this.widthNum = ((this.$treeParent || this.show) ? this.widthSelfNum : 0) + this.paddingLeftNum + 2;\r\n        }\r\n        this.style.paddingLeft = (this.paddingLeftNum) + 'px';\r\n        this.style.width = this.widthSelfNum + 'px';\r\n        this.heightSelfNum = this.$parent.heightSelfNum;\r\n        this.style.height = this.heightSelfNum + 'px';\r\n\r\n        if (this.$treeParent && parent) {\r\n            if (/top/.test(this.$parent.type)) {\r\n                // this.$positionCheck = ['bottom'];\r\n                this.widthNum = this.widthSelfNum;\r\n                this.style.paddingLeft = (0) + 'px';\r\n                parent.cell.style.textAlign = parent.config.cell.style.textAlign;\r\n            } else if (/left/.test(this.$parent.type)) {\r\n                // this.$positionCheck = ['right'];\r\n                parent.cell.style.textAlign = 'left';\r\n            }\r\n        }\r\n        this.openChildrenCount = openChildrenCount;\r\n        this.allChildren = allChildren;\r\n    }\r\n\r\n\r\n    /**\r\n     * getContainerByTheadPositon\r\n     */\r\n    public getContainerByTheadPosition(position: number[]): TreeContainer {\r\n        let res: any = this;\r\n        (position || []).forEach((index: number) => {\r\n            res = (res.children[index] as TheadContainer).treeContainer;\r\n        });\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * check\r\n     */\r\n    public init() {\r\n        const parnent = this.$parent;\r\n        this.addChildren();\r\n        this.openOrClose(this.$openStatus);\r\n        this.$positionManager.treeContainerMap.set(parnent.id, this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * name\r\n     */\r\n    public openOrClose(operation: string): void {\r\n        if (operation === 'open') {\r\n            this.showAndHide(this.children.length + this.openChildrenCount, 'show');\r\n        } else {\r\n            this.showAndHide(this.children.length + this.openChildrenCount, 'hide');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * name\r\n     */\r\n    public checkAndChange() {\r\n        this.children.forEach((th: TheadContainer) => {\r\n            \r\n            th.hideType = this.$openStatus === 'open' ? 'visible' : 'hideAll-tree';\r\n        });\r\n    }\r\n\r\n    /**\r\n     * check\r\n     */\r\n    public hideChildren() {\r\n        this.children.forEach((child: TheadContainer) => {\r\n            child.hideType = 'hideAll-tree';\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    public addChildrenAsy(p: Promise<TheadContainerInterface[]>): void {\r\n        this.$openStatus = 'loading';\r\n        p.then((children?: TheadContainerInterface[]) => {\r\n            this.$openStatus = this.nextStatus;\r\n            this.addChildren(children);\r\n            this.openOrClose(this.$openStatus);\r\n            const thisParent = this.$parent;\r\n            thisParent.rootParentSendMsg({\r\n                ev_type: 'beforeRender',\r\n                render: true,\r\n                event: null,\r\n                data: {\r\n                    object: this,\r\n                    objectName: 'null',\r\n                },\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 创建容器\r\n     *\r\n     * @private\r\n     * @param {ContainerInterface} data\r\n     * @returns\r\n     * @memberof BaseThead\r\n     */\r\n    public createContain(data?: TheadContainerInterface): TheadContainer {\r\n        // debugger\r\n        const dataClone = _.keepClone(data);\r\n        const parent = this.$parent;\r\n        const param = _.objectSet(dataClone, {\r\n            treeContainer: {\r\n                paddingLeftNum: this.paddingLeftNum + 15,\r\n            },\r\n            side1: 1,\r\n            side2: 1,\r\n            $groupId: this.$groupId,\r\n            type: parent.type,\r\n            $parent : this,\r\n            $rootTable: parent.$rootTable,\r\n            $rootParent: parent.$rootParent\r\n        }, 'union', /\\$/);\r\n        const container: TheadContainer = ContainerFactory.create('thead', param);\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * addAllChildren\r\n     */\r\n    private addChildren(children?: TheadContainerInterface[]): void {\r\n        this.setContainerData({\r\n            children\r\n        });\r\n        // debugger\r\n        const thisParent = this.$parent;\r\n        if (thisParent && thisParent.$parent) {\r\n            const theadParent = thisParent.$parent;\r\n            let insertIndex = theadParent.children.indexOf(thisParent) + 1;\r\n            this.cleanChildrenInSystem();\r\n            this.children.forEach((container: TheadContainer, i: number) => {\r\n                const addContainer: TheadContainer = thisParent.createContain(container);\r\n                // addContainer.hide = true;\r\n                addContainer.treeContainer.resize();\r\n                const delCount = addContainer.treeContainer.allChildren.length;\r\n                theadParent.addChild(addContainer, insertIndex + i);\r\n                insertIndex += delCount;\r\n                this.children[i] = addContainer;\r\n                addContainer.addByTree = true;\r\n            });\r\n        }\r\n        this.resize();\r\n    }\r\n\r\n\r\n    private cleanChildrenInSystem(): void {\r\n        this.children.forEach((container: TheadContainer) => {\r\n            if (container.$inSystem) {\r\n                this.$rootTable.theadDelete({\r\n                    type: container.type,\r\n                    targetContainerPosition: container.theadPosition,\r\n                    withChildren: true,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * showAndHide\r\n     */\r\n    private showAndHide(count: number, type: 'show' | 'hide'): void {\r\n        this.allChildren.forEach((th: TheadContainer, i: number) => {\r\n            // debugger\r\n            const hideType = type === 'hide' ? 'hideAll-tree' : 'visible';\r\n            if (count > 0 && hideType !== th.hideType) {\r\n                th.hideType = hideType;\r\n                count--;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TreeContainer } from \"../viewModule/container/TreeContainer\";\r\nimport * as _ from './index';\r\nimport { TheadContainer } from '../viewModule/container/TheadContainer';\r\nimport { SelfContainer } from '../viewModule/container/SelfContainer';\r\nexport class ContainerFactory {\r\n    // 工厂方法\r\n    public static create(type: string, param: any): any {\r\n        const paramClone = _.keepClone(param);\r\n        let createContainer = null;\r\n        if (/inner/.test(type)) {\r\n            createContainer = new TreeContainer(paramClone);\r\n        } else if (/thead|Thead/.test(type)) {\r\n            createContainer = new TheadContainer(paramClone);\r\n        } else if (/selfContainer/.test(type)) {\r\n            createContainer = new SelfContainer(paramClone);\r\n        } else if (/treeContainer/.test(type)) {\r\n            createContainer = new TreeContainer(paramClone);\r\n        }\r\n\r\n        return createContainer;\r\n    }\r\n}\r\n","import { CellContainer } from './CellContainer';\r\nimport * as _ from '../../utils';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\nimport { TheadContainerInterface } from '../../interface/viewModule/container/TheadContainer';\r\nimport { BaseThead } from '../thead/BaseThead';\r\nimport { BaseStyle } from '../style/Style';\r\nimport { TbodyContainerInterface } from '../../interface/viewModule/container/TbodyContainer';\r\nimport { TreeContainer } from './TreeContainer';\r\nimport { ContainerFactory } from '../../utils/Factory';\r\nimport { DragStartDataInterface } from '../../interface/DragStartData';\r\nimport { DragTransferDataInterface } from '../../interface/DragTransferData';\r\nimport { SelfContainer } from './SelfContainer';\r\n\r\n// 只有对于容器来说才有相对位置\r\nexport class TheadContainer extends CellContainer {\r\n    // overwrite\r\n    public type: 'top' | 'left' | 'top-index' | 'left-index';\r\n    public $rootParent: BaseThead;\r\n    public children: TheadContainer[]; // 子容器\r\n\r\n    public canSum: boolean;// 是否可以合计\r\n    public addByTree: boolean;\r\n    public treeContainer: TreeContainer; // 树形展开容器\r\n    public selfContainers: SelfContainer[]; // 提示容器\r\n    public $resizeChildren: TheadContainer[]; // 子容器\r\n    public canDragResize: boolean; // 是否可以拖拽重塑\r\n    public draggable: boolean;// 是否可以拖动\r\n    public theadPosition: any[]; // 相对于根节点的职位\r\n    public tbodyConfig: {\r\n        container?: TbodyContainerInterface\r\n        weight?: any\r\n    };\r\n    public $positionCheck: string[]; // 位置检查\r\n    private side1Name: 'height' | 'width';\r\n    private side2Name: 'height' | 'width';\r\n    private $dragType: 'width' | 'height' | 'none' = 'none'; // 拖拽重塑类型\r\n    constructor(param: TheadContainerInterface) {\r\n        super(param);\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any) {\r\n        super.initBeforeSetData(paramClone);\r\n        const attachParam = {\r\n            $parent: this,\r\n            $rootParent: this.$rootParent,\r\n            $rootTable: this.$rootTable,\r\n            $groupId: this.$groupId\r\n        };\r\n        this.treeContainer = ContainerFactory.create('treeContainer', attachParam);\r\n        this.config = _.clone(this.$dragTableConfig.TheadContainerConfig);\r\n        // _.objectSet(this.config, this.$dragTableConfig.TheadContainerConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.theadContainer, 'union');\r\n        delete this.config.style.width;\r\n        delete this.config.style.height;\r\n    }\r\n\r\n    /**\r\n     * selfContainers\r\n     */\r\n    public setSelfContainers(selfContainers: SelfContainer[]) {\r\n        this.selfContainers = new Array();\r\n        selfContainers.forEach((value: any) => {\r\n            // debugger\r\n            const attachParam = {\r\n                $parent: this,\r\n                $rootParent: this.$rootParent,\r\n                $rootTable: this.$rootTable,\r\n                $groupId: this.$groupId\r\n            };\r\n            _.objectSet(value, attachParam, 'union', /\\$/);\r\n            const selfContainer = ContainerFactory.create('selfContainer', value);\r\n            this.selfContainers.push(selfContainer);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置container属性 部分属性特殊处理\r\n     *\r\n     * @param {ContainerInterface} containerData\r\n     * @memberof TheadContainer\r\n     */\r\n    public setContainerData(containerData: TheadContainerInterface, containerData2?: TheadContainerInterface, weight1?: object, weight2?: object, callBack?: any): void {\r\n        const conditionHandle = (key: string, value: any) => {\r\n            // debugger\r\n            if (key === 'tbodyConfig') {\r\n                this.setProperty(key, value);\r\n            } else if (key === 'treeContainer') {\r\n                _.objectSet(value, this.$dragTableConfig.treeContainer);\r\n                if (this.treeContainer && typeof this.treeContainer.setContainerData === 'function') {\r\n                    this.treeContainer.setContainerData(value);\r\n                } else {\r\n                    this.treeContainer = ContainerFactory.create('treeContainer', value);\r\n                }\r\n                return;\r\n            } else if (key === 'selfContainers') {\r\n                // debugger\r\n                this.setSelfContainers(value);\r\n                return;\r\n            }\r\n            this.setProperty(key, value);\r\n\r\n        };\r\n        super.setContainerData(containerData, containerData2, weight1, weight2, conditionHandle);\r\n        if (/^top/.test(this.type)) {\r\n            this.side1Name = 'width';\r\n            this.side2Name = 'height';\r\n        } else if (/^left/.test(this.type)) {\r\n            this.side1Name = 'height';\r\n            this.side2Name = 'width';\r\n        }\r\n    }\r\n\r\n\r\n    public addChild(child: TheadContainer, targetIndex?: number): any {\r\n        super.addChild(child, targetIndex);\r\n        if (child.treeContainer) {\r\n            child.treeContainer.init();\r\n        }\r\n        return child.id;\r\n    }\r\n    /**\r\n     * 自动递归计算容器长宽，以及span、theadPosition等属性值\r\n     *\r\n     * @param {any[]} [$leafIndexList]\r\n     * @memberof TheadContainer\r\n     */\r\n    public resize(): any {\r\n\r\n        if (!/visible|tree/.test(this.hideType)) {\r\n            this.$positionManager.hideContainerMap.set(this.id, this);\r\n        }\r\n        // debugger\r\n        const hideTypeTemporary = this.hideTypeTemporary || this.hideType;\r\n\r\n        this.$inSystem = true;\r\n        this.resetByIndexContainer();\r\n        this.$resizeChildren = [];\r\n\r\n        if (hideTypeTemporary === 'hideSelf') {\r\n            // debugger\r\n            this.span1 = 0;\r\n            this.span2 = 0;\r\n            this.side1 = 0;\r\n            this.side2 = 0;\r\n            this[this.side2Name + 'Num'] = 0;\r\n            this[this.side1Name + 'Num'] = 0;\r\n            this[this.side2Name + 'SelfNum'] = 0;\r\n            this[this.side1Name + 'SelfNum'] = 0;\r\n            // return;\r\n        } else if (/hideAll/.test(hideTypeTemporary)) {\r\n            this.span1 = 0;\r\n            this.span2 = 0;\r\n            this.side1 = 0;\r\n            this.side2 = 0;\r\n            this[this.side2Name + 'Num'] = 0;\r\n            this[this.side1Name + 'Num'] = 0;\r\n            // this[this.side2Name + 'SelfNum'] = 0;\r\n            // this[this.side1Name + 'SelfNum'] = 0;\r\n            return [];\r\n        } else if (this.hideTypeTemporary === 'hideChildrenHeight') {\r\n            this.span1 = 1;\r\n            this.span2 = 0;\r\n            this.side1 = 1;\r\n            this.side2 = 0;\r\n            this[this.side2Name + 'Num'] = 0;\r\n            this[this.side2Name + 'SelfNum'] = 0;\r\n        }\r\n\r\n        if (this.isRootParent) {\r\n            this.span1 = 0;\r\n            this.span2 = 0;\r\n            this.side1 = 0;\r\n            this.side2 = 0;\r\n            this[this.side2Name + 'SelfNum'] = 0;\r\n        }\r\n\r\n\r\n        let maxGridSide2 = 0; // 孩子的最大高度\r\n        let maxStyleSide2 = 0;// 孩子的最大高度px   \r\n        let sumGridSide1 = 0; // 孩子合计宽度\r\n        let sumStyleSide1 = 0;// 孩子合计宽度px\r\n\r\n        let resizeChildren = [];\r\n        if (this.children.length !== 0) {\r\n\r\n            this.children.forEach((child: TheadContainer, i) => {\r\n                const childPosition: any[] = this.theadPosition.concat(i);\r\n                child.theadPosition = childPosition;\r\n                if (hideTypeTemporary === 'hideChildrenHeight') {\r\n                    child.hideTypeTemporary = 'hideChildrenHeight';\r\n                }\r\n                const res = child.resize();\r\n                child.hideTypeTemporary = null;\r\n                resizeChildren = resizeChildren.concat(res);\r\n                sumGridSide1 += child.side1;\r\n                maxGridSide2 = child.side2 > maxGridSide2 ? child.side2 : maxGridSide2;\r\n\r\n                sumStyleSide1 += child[this.side1Name + 'Num'];\r\n                maxStyleSide2 = child[this.side2Name + 'Num'] > maxStyleSide2 ? child[this.side2Name + 'Num'] : maxStyleSide2;\r\n            });\r\n            // 宽度至少等于自己之前的宽度\r\n            this.side1 = sumGridSide1 || this.side1;\r\n            this[this.side1Name + 'Num'] = this[this.side1Name + 'SelfNum'] = this[this.side1Name + 'ChildNum'] = sumStyleSide1 || this[this.side1Name + 'SelfNum'];\r\n\r\n            this.span1 = sumGridSide1;\r\n            this.style[this.side1Name] = sumStyleSide1 + 'px';\r\n            {\r\n                this[this.side2Name + 'ChildNum'] = maxStyleSide2;\r\n            }\r\n            {\r\n                this.side2 = maxGridSide2 + this.side2; // 孩子最大高度加上自己高度\r\n                this[this.side2Name + 'Num'] = maxStyleSide2 + this[this.side2Name + 'SelfNum'];\r\n            }\r\n        } else {\r\n        }\r\n\r\n        this.style[this.side1Name] = this[this.side1Name + 'SelfNum'] + 'px';\r\n        this.style[this.side2Name] = (this[this.side2Name + 'SelfNum']) + 'px';\r\n\r\n        this.$resizeChildren = resizeChildren;\r\n        this.makeChildrenSameSide2(maxGridSide2, maxStyleSide2);\r\n\r\n        if (this.treeContainer) {\r\n            this.innerContainerRender();\r\n        }\r\n        this.selfContainerRender();\r\n        if (this.cell) {\r\n            this.cell.render();\r\n            this.cell.style.paddingLeft = this.paddingLeftNum + 'px';\r\n            this.cell.style.paddingRight = this.paddingRightNum + 'px';\r\n        }\r\n\r\n        if (hideTypeTemporary === 'hideSelf') {\r\n            return resizeChildren;\r\n        }\r\n        let otherRes = [this];\r\n        if (resizeChildren.length === 0 && this.hideType !== 'hideChildrenHeight') {\r\n            if (hideTypeTemporary === 'hideChildrenHeight') {\r\n                otherRes = [];\r\n            }\r\n            if (this.$rootParent && !this.isRootParent && sumGridSide1 === 0) {\r\n                this.$rootParent.$leafIndexList.push(this);\r\n            }\r\n        }\r\n        return otherRes;\r\n\r\n\r\n    }\r\n    /**\r\n     * changePro\r\n     */\r\n    public changeEveryChildProperty(containerData: TheadContainerInterface) {\r\n        this.setContainerData(containerData);\r\n        this.children.forEach((th: TheadContainer) => {\r\n            th.changeEveryChildProperty(containerData);\r\n        });\r\n    }\r\n    /**\r\n     *  innerContainerRender\r\n     */\r\n    public innerContainerRender() {\r\n        this.treeContainer.$parent = this;\r\n        this.treeContainer.resize();\r\n        this.paddingLeftNum = this.treeContainer.widthNum;\r\n    }\r\n\r\n    /**\r\n     *  selfContainerRender\r\n     */\r\n    public selfContainerRender() {\r\n        this.paddingRightNum = 0;\r\n        this.selfContainers.forEach((sc: SelfContainer) => {\r\n            sc.resize();\r\n            if (sc.show) {\r\n                this.paddingRightNum = sc.widthNum > this.paddingRightNum ? sc.widthNum : this.paddingRightNum;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * getTopList\r\n     * 备注：顶部表头转换为view数组函数\r\n     * @param list?: any[]\r\n     */\r\n    public getTopList(list: any[], p: PositionInterface): void {\r\n        try {\r\n            this.position = _.clone(p);\r\n            this.position.colStr = _.getA_Z(p.colNum);\r\n            this.position.rowStr = p.rowNum + 1;\r\n            const container = this.clone(undefined, /\\$|userData|treeContainer/, true); // 之前为什么要拷贝？因为要区分该源container与页面上显示的Container\r\n            this.$positionManager.setPositionMap(this.position, this, 'source');\r\n            this.$positionManager.setPositionMap(this.position, container, 'clone');\r\n            list[0].push(container);\r\n            const cloneP: PositionInterface = _.clone(p);\r\n            if (this.$resizeChildren.length !== 0) {\r\n                this.$resizeChildren.forEach((child: TheadContainer) => {\r\n                    const tmpP = _.clone(p);\r\n                    tmpP.rowNum = p.rowNum + this.span2;\r\n                    tmpP.colNum = cloneP.colNum;\r\n                    child.getTopList(_.drop(list), tmpP);\r\n                    cloneP.colNum += child.side1;\r\n                });\r\n            }\r\n        } catch (error) {\r\n            // do nothing\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * loop\r\n     */\r\n    public getLeftList(index: number, p: PositionInterface) {\r\n        // debugger\r\n        const list = this.$rootParent.$tableHeadLeft;\r\n        this.position = _.clone(p);\r\n        this.position.colStr = _.getA_Z(p.colNum);\r\n        this.position.rowStr = p.rowNum + 1;\r\n        const container = this.clone(undefined, /\\$|userData|treeContainer/, true);\r\n        this.$positionManager.setPositionMap(this.position, this, 'source');\r\n        this.$positionManager.setPositionMap(this.position, container, 'clone');\r\n        list[index].push(container);\r\n        const cloneP: PositionInterface = _.clone(p);\r\n        cloneP.colNum = cloneP.colNum + this.span2;\r\n        this.$resizeChildren.forEach((child) => {\r\n            const tmpP = _.clone(cloneP);\r\n            child.getLeftList(index, tmpP);\r\n            cloneP.rowNum = cloneP.rowNum + child.side1;\r\n            index += child.side1;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建容器\r\n     *\r\n     * @private\r\n     * @param {ContainerInterface} data\r\n     * @returns\r\n     * @memberof BaseThead\r\n     */\r\n    public createContain(data?: TheadContainerInterface): TheadContainer {\r\n        // if(data.id === 'row1'){\r\n        //     debugger\r\n        // }\r\n        const dataClone = _.clone(data, /\\$/);\r\n        _.objectSet(dataClone, {\r\n            type: this.type,\r\n            side1: 1,\r\n            side2: 1,\r\n            $rootTable: this.$rootTable,\r\n            $rootParent: this.$rootParent,\r\n            $groupId: this.$groupId,\r\n            // config: this.$rootParent.config\r\n        }, 'union', /\\$/);\r\n        const container = new TheadContainer(dataClone);\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * onMouseMove\r\n     */\r\n    public onMouseMove(ev: any): void {\r\n        if (this.$rootTable.canDragResize && this.$dragType === 'none') {\r\n            let dom = ev.currentTarget;\r\n            BaseStyle.removeBorder(dom);\r\n            const bear = BaseStyle.checkBearing(ev, { bottom: 10, right: 10 });\r\n            if (bear === 'right' && this.type !== 'left-index' && this.side1 === 1) {\r\n                dom.style.cursor = 'e-resize';\r\n                BaseStyle.addBorder(dom, bear);\r\n                this.canDragResize = true;\r\n                this.draggable = false;\r\n            } else if (bear === 'bottom' && this.type !== 'top-index' && this.side2 === 1) {\r\n                dom.style.cursor = 's-resize';\r\n                BaseStyle.addBorder(dom, bear);\r\n                this.canDragResize = true;\r\n                this.draggable = false;\r\n            } else {\r\n                dom.style.cursor = 'auto';\r\n                this.canDragResize = false;\r\n                this.draggable = true;\r\n            }\r\n            dom = null;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 当鼠标划出单元格 取消边框和鼠标样子\r\n     *\r\n     * @param {*} ev\r\n     * @param {*} th\r\n     * @memberof BaseTable\r\n     */\r\n    public onMouseOut(ev: any): void {\r\n        ev.currentTarget.style.cursor = 'auto';\r\n        BaseStyle.removeBorder(ev.currentTarget);\r\n        this.canDragResize = false;\r\n        this.draggable = true;\r\n    }\r\n\r\n    /**\r\n     * 当鼠标按下时 开始拖拽控制大小\r\n     *\r\n     * @param {*} ev\r\n     * @param {*} th\r\n     * @memberof BaseTable\r\n     */\r\n    public onMouseDown(ev: any): void {\r\n        let currentTargetDom = ev.currentTarget;\r\n        if (ev.which === 1 && this.$rootTable.canDragResize && this.canDragResize) {\r\n            this.$dragType = currentTargetDom.style.cursor === 'e-resize' ? 'width' : 'height';\r\n            this.draggable = false;\r\n            this.$rootTable.$selectBoxEntity.clear();\r\n            const targetDom: any = {};\r\n            targetDom.initMouseLeftX = ev.pageX; // 鼠标起始X位置\r\n            targetDom.initMouseTopY = ev.pageY; // 鼠标起始Y位置\r\n            targetDom.initWidth = ev.target.clientWidth; // dom原来的宽度\r\n            targetDom.initHeight = ev.target.clientHeight; // dom原来的高度\r\n            targetDom.initLeft = ev.pageX - targetDom.initWidth;\r\n            targetDom.initTop = ev.pageY - targetDom.initHeight;\r\n            targetDom.x = targetDom.initLeft;\r\n            targetDom.y = targetDom.initTop;\r\n            let delSide1 = 0;\r\n            let oneColRowObj: any;\r\n            const sideName = this.$dragType === 'width' ? 'width' : 'height';\r\n            // console.log(sideName);\r\n\r\n            const mousemove = (e: any) => {\r\n                // debugger\r\n                const x = (e.pageX - targetDom.initMouseLeftX);\r\n                if (x * -1 > this.style.minWidth) {\r\n                    return;\r\n                }\r\n\r\n                const y = (e.pageY - targetDom.initMouseTopY);\r\n                if (y * -1 > targetDom.initHeight) {\r\n                    return;\r\n                }\r\n\r\n                if (this.$dragType === 'width') {\r\n                    delSide1 = x;\r\n                    oneColRowObj = this.getColObj(this.position, 'clone');\r\n                } else if (this.$dragType === 'height') {\r\n                    // debugger\r\n                    delSide1 = y;\r\n                    oneColRowObj = this.getRowObj(this.position, 'clone');\r\n                }\r\n\r\n\r\n                for (const key in oneColRowObj) {\r\n                    if (oneColRowObj.hasOwnProperty(key)) {\r\n                        const container: CellContainer = oneColRowObj[key];\r\n                        if (container) {\r\n                            // debugger\r\n                            const oldSide = container[sideName + 'SelfNum'];\r\n                            container.style[sideName] = (oldSide + delSide1) + 'px';\r\n                            container.cell.style[sideName] = (oldSide + delSide1) + 'px';\r\n                            if (sideName === 'height') {\r\n                                container.cell.style.lineHeight = oldSide + delSide1 + 'px';\r\n                                const treeContainer = (container as any).treeContainer;\r\n                                if (treeContainer) {\r\n                                    treeContainer.style.height = container.cell.style.lineHeight;\r\n                                }\r\n                                ((container as TheadContainer).selfContainers || []).forEach((sc: SelfContainer) => {\r\n                                    sc.style.height = container.cell.style.lineHeight;\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            };\r\n            const mouseup = (e: any) => {\r\n                // debugger;\r\n                document.removeEventListener('mouseup', mouseup);\r\n                document.removeEventListener('mousemove', mousemove);\r\n                const side1 = this[this.$dragType + 'SelfNum'] + delSide1;\r\n                this.setWidthOrHeight(this.$dragType as 'width' | 'height', side1);\r\n                this.draggable = true;\r\n                this.canDragResize = false;\r\n                this.$dragType = 'none';\r\n                currentTargetDom.style.cursor = 'auto';\r\n                currentTargetDom = null;\r\n            };\r\n            document.addEventListener('mousemove', mousemove);\r\n            document.addEventListener('mouseup', mouseup);\r\n        }\r\n        super.onMouseDown(ev);\r\n    }\r\n\r\n    /**\r\n     * 通用dragStart\r\n     *\r\n     * @param {*} ev\r\n     * @param {CellContainer} target\r\n     * @memberof BaseThead\r\n     */\r\n    public dragStart?(ev: any): void {\r\n        const dragStartData: DragStartDataInterface = {\r\n            operationType: 'move',\r\n            containerData: this,\r\n        };\r\n        const rootParent = this.$rootParent;\r\n        const draggable = this.checkStatus('draggable');\r\n        if (rootParent && draggable) {\r\n            rootParent.dragStartData = dragStartData;\r\n            ev.dataTransfer.setData('dragStartData', JSON.stringify(_.clone(dragStartData, /\\$/)));\r\n            this.rootParentSendMsg(\r\n                {\r\n                    ev_type: 'dragStart',\r\n                    event: ev,\r\n                    data: {\r\n                        object: dragStartData,\r\n                        objectName: 'dragStartData',\r\n                    },\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通用dragover\r\n     *\r\n     * @param {*} ev\r\n     * @param {target} th \r\n     * @memberof BaseThead\r\n     */\r\n    public dragOver?(ev: any): void {\r\n        const resultList = this.rootParentSendMsg(\r\n            {\r\n                ev_type: 'dragOver',\r\n                event: ev,\r\n                data: {\r\n                    object: this,\r\n                    objectName: 'TheadContainer',\r\n                },\r\n            });\r\n        if (/cancel/.test(resultList.join('-'))) {\r\n            return;\r\n        }\r\n        const draggable = this.checkStatus('draggable');\r\n        const rootParent = this.$rootParent;\r\n        if (rootParent && draggable && (!rootParent.dragStartData || rootParent.dragStartData.containerData !== this)) {\r\n            const targetDom = ev.currentTarget;\r\n            this.resetDragOverStyle(targetDom);\r\n            const bearing = BaseStyle.checkBearing(ev);\r\n            if (this.$positionCheck.indexOf(bearing) !== -1) {\r\n                if (bearing === 'inner') {\r\n                    BaseStyle.addBackgroundColor(targetDom, 'red');\r\n                }\r\n                BaseStyle.addBorder(targetDom, bearing, 3, '#000');\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 横表专用drop\r\n     *\r\n     * @param {*} ev\r\n     * @param {CellContainer} item\r\n     * @memberof BaseThead\r\n     */\r\n    public drop(ev: any): void {\r\n        // debugger\r\n        const rootParent = this.$rootParent;\r\n        try {\r\n            const stringData = ev.dataTransfer.getData('dragStartData');\r\n            const dragStartData: DragStartDataInterface = rootParent.dragStartData ? rootParent.dragStartData : JSON.parse(stringData || '{}');\r\n            let dragTsData: DragTransferDataInterface;\r\n            let targetContainer = this;\r\n            if (this.$positionCheck && this.$positionCheck.length !== 0) {\r\n                const bear = BaseStyle.checkBearing(ev);\r\n                targetContainer = this.getContainerByTheadPosition(this.theadPosition);\r\n                dragTsData = {\r\n                    target: {\r\n                        containerData: targetContainer\r\n                    },\r\n                    targetBearing: bear,\r\n                    source: {\r\n                        containerData: dragStartData.containerData,\r\n                        withChildren:dragStartData.withChildren,\r\n                    },\r\n                    operationType: dragStartData.operationType\r\n                };\r\n            } else {\r\n                dragTsData = {\r\n                    target: {\r\n                        containerData: targetContainer\r\n                    },\r\n                    targetBearing: 'other',\r\n                    source: {\r\n                        containerData: dragStartData.containerData,\r\n                    },\r\n                    operationType: dragStartData.operationType\r\n                };\r\n            }\r\n            let targetDom = ev.currentTarget;\r\n            this.resetDragOverStyle(targetDom);\r\n            this.rootParentSendMsg(\r\n                {\r\n                    ev_type: 'drop',\r\n                    event: ev,\r\n                    data: {\r\n                        object: dragTsData,\r\n                        objectName: 'DragTsData',\r\n                    },\r\n                });\r\n            rootParent.dragStartData = null;\r\n            targetDom = null;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * dragEnd\r\n     */\r\n    public dragEnd(ev: any): void {\r\n        // debugger\r\n        const rootParent = this.$rootParent;\r\n        if (rootParent) {\r\n            rootParent.dragStartData = null;\r\n            this.rootParentSendMsg(\r\n                {\r\n                    ev_type: 'dragEnd',\r\n                    event: ev,\r\n                    data: {\r\n                        object: this,\r\n                        objectName: 'TheadContainer',\r\n                    },\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    public dragLeave(ev: any) {\r\n        const resultList = this.rootParentSendMsg(\r\n            {\r\n                ev_type: 'dragLeave',\r\n                event: ev,\r\n                data: {\r\n                    object: this,\r\n                    objectName: 'TheadContainer',\r\n                },\r\n            });\r\n        if (/cancel/.test(resultList.join('-'))) {\r\n            return;\r\n        }\r\n        const targetDom = ev.currentTarget;\r\n        BaseStyle.addBackgroundColor(targetDom, this.style.background);\r\n        this.resetDragOverStyle(targetDom);\r\n    }\r\n\r\n    public dragEnter(ev: any) {\r\n        const resultList = this.rootParentSendMsg(\r\n            {\r\n                ev_type: 'dragEnter',\r\n                event: ev,\r\n                data: {\r\n                    object: this,\r\n                    objectName: 'TheadContainer',\r\n                },\r\n            });\r\n        if (/cancel/.test(resultList.join('-'))) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * getContainerByTheadPosition\r\n     * 备注：获得子容器\r\n     * @param position: Position 相对于根容器的位置\r\n     *\r\n     */\r\n    public getContainerByTheadPosition(position: number[]) {\r\n        const rootParent = this.$rootParent;\r\n        if (rootParent) {\r\n            let res: any = rootParent;\r\n            (position || []).forEach((index: number) => {\r\n                res = res.children[index];\r\n            });\r\n            return res;\r\n        }\r\n    }\r\n\r\n    public clone(excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean): any {\r\n        const obj = super.clone(excludeReg, keepReg, withFunction);\r\n        const children = [];\r\n        obj.children.forEach((th: TheadContainerInterface) => {\r\n            if (!th.addByTree) {\r\n                children.push(th);\r\n            }\r\n        });\r\n        obj.children = children;\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * resetByIndexContainer\r\n     */\r\n    protected resetByIndexContainer(): void {\r\n        if (this.id === 'top-left') {\r\n            return;\r\n        }\r\n        const topIndexContainer = this.$positionManager.getTopIndexContainer(this.position, 'last');\r\n        if (topIndexContainer) {\r\n            this.widthNum = this.widthSelfNum = topIndexContainer.widthNum;\r\n        } else {\r\n            this.widthSelfNum = this.config.widthSelfNum;\r\n            this.widthNum = this.widthSelfNum;\r\n        }\r\n        const leftIndexContainer = this.$positionManager.getLeftIndexContainer(this.position, 'last');\r\n        if (leftIndexContainer) {\r\n            this.heightNum = this.heightSelfNum = leftIndexContainer.heightNum;\r\n        } else {\r\n            this.heightSelfNum = this.config.heightSelfNum;\r\n            this.heightNum = this.heightSelfNum;\r\n        }\r\n\r\n        this.span1 = this.config.span1;\r\n        this.span2 = this.config.span2;\r\n        this.side1 = this.config.side1;\r\n        this.side2 = this.config.side2;\r\n    }\r\n    /**\r\n     * increaseTheLastChildHeight\r\n     * 备注：增加叶子节点BaseTheadCell的高度\r\n     * @param diff: number 需要增加的高度\r\n     */\r\n    private increaseTheLeafChildHeight(diffGrid: number, diffStyle: number): void {\r\n\r\n        if (this.$resizeChildren.length !== 0) {\r\n            this.$resizeChildren.forEach((child: TheadContainer) => {\r\n                child.increaseTheLeafChildHeight(diffGrid, diffStyle);\r\n            });\r\n            this.side2 += diffGrid;\r\n        } else if (this.side2 !== 0) {\r\n            const selfStyleSide2 = Number(this.style[this.side2Name].replace('px', ''));\r\n            this.style[this.side2Name] = selfStyleSide2 + diffStyle + 'px';\r\n            this[this.side2Name + 'SelfNum'] = selfStyleSide2 + diffStyle;\r\n            this[this.side2Name + 'Num'] = selfStyleSide2 + diffStyle;\r\n            if (this.treeContainer) {\r\n                this.innerContainerRender();\r\n            }\r\n            this.selfContainerRender();\r\n            this.span2 += diffGrid;\r\n            this.cell.render();\r\n            this.side2 += diffGrid;\r\n\r\n        }\r\n    }\r\n    /**\r\n     * makeChildrenSameHeight\r\n     * 备注：使所有自己的孩子BaseTheadCell 高度一致\r\n     * @param maxHeight: number 孩子中最大高度\r\n     */\r\n    private makeChildrenSameSide2(maxGridSide2: number, maxStyleSide2: number): void {\r\n        this.$resizeChildren.forEach((child: TheadContainer) => {\r\n            const diffGrid = maxGridSide2 - child.side2;\r\n            const diffStyle = maxStyleSide2 - child[child.side2Name + 'Num'];\r\n            if (diffGrid > 0 || diffStyle > 0) {\r\n                child.increaseTheLeafChildHeight(diffGrid, diffStyle);\r\n            }\r\n        });\r\n    }\r\n\r\n    private resetDragOverStyle?(targetDom: any) {\r\n        BaseStyle.removeBorder(targetDom);\r\n        BaseStyle.removeBackgroundColor(targetDom);\r\n        BaseStyle.addBackgroundColor(targetDom, this.style.background);\r\n    }\r\n\r\n}\r\n\r\n","import * as _ from '../../utils/index';\r\nimport { TheadContainer } from '../container/TheadContainer';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\nimport { BaseTheadInterface } from '../../interface/viewModule/thead/BaseThead';\r\nimport { BaseTheadConfig } from '../../config/BaseTheadConfig';\r\nexport class BaseThead extends TheadContainer {\r\n    public config: BaseTheadConfig;\r\n    public $leafIndexList?: any[]; // 叶子节点顺序列表\r\n    public $leafIndexList2?: any[]; // 叶子节点顺序列表\r\n    public dragStartData?: any;\r\n    public $tableHeadTop?: TheadContainer[][] = new Array(); // 用于显示的上侧表头 直接用于左表头的渲染\r\n    public $tableHeadLeft?: TheadContainer[][] = new Array(); // 用于显示的左侧表头 直接用于左表头的渲染\r\n    constructor(param: BaseTheadInterface) {\r\n        super(param);\r\n    }\r\n\r\n    /**\r\n     * initBeforeSetData\r\n     */\r\n    public initBeforeSetData(paramClone?: any) {\r\n        super.initBeforeSetData(paramClone);\r\n        this.cell = null;\r\n        this.dragStartData = null;\r\n        this.$rootParent = this;\r\n        _.objectSet(this.config, this.$dragTableConfig.BaseTheadConfig, 'union');\r\n        if (this.type === 'top') {\r\n            _.objectSet(paramClone, this.$dragTableConfig.topThead, 'union');\r\n        } else if (this.type === 'left') {\r\n            _.objectSet(paramClone, this.$dragTableConfig.leftThead, 'union');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * resize\r\n     */\r\n    public resize(): void {\r\n        this.$leafIndexList = [];\r\n        this.$leafIndexList2 = [];\r\n        super.resize();\r\n        let maxLayerContainer: TheadContainer;\r\n        this.$leafIndexList.forEach((th: TheadContainer) => {\r\n            if (maxLayerContainer) {\r\n                maxLayerContainer = (th.theadPosition.length > maxLayerContainer.theadPosition.length && th.span2 !== 0) ? th : maxLayerContainer;\r\n            } else {\r\n                maxLayerContainer = th;\r\n            }\r\n        });\r\n        let canDo: boolean = true;\r\n        if (maxLayerContainer) {\r\n            do {\r\n                if (maxLayerContainer.span2 == 1) {\r\n                    this.$leafIndexList2.splice(0, 0, maxLayerContainer);\r\n                }\r\n                if (maxLayerContainer.$parent) {\r\n                    maxLayerContainer = maxLayerContainer.$parent;\r\n                } else {\r\n                    canDo = false;\r\n                }\r\n            } while (canDo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 备注：容器转换横表\r\n     * @param position: Position 相对于根容器的位置\r\n     *\r\n     */\r\n    public convert2TheadTopList?(basePosition: PositionInterface): TheadContainer[][] {\r\n        this.$tableHeadTop = [];\r\n        for (let i = 0; i < this.side2; i++) {\r\n            this.$tableHeadTop .push([]);\r\n        }\r\n        const p: PositionInterface = _.clone(basePosition);\r\n        this.$resizeChildren.forEach((child: TheadContainer) => {\r\n            child.getTopList(this.$tableHeadTop , p);\r\n            p.rowNum = p.rowNum;\r\n            p.colNum = p.colNum + child.side1;\r\n        });\r\n        return this.$tableHeadTop;\r\n    }\r\n    // 转换成纵表\r\n    public convert2TheadLeftList?(basePosition: PositionInterface): TheadContainer[][] {\r\n        // this.resize();\r\n        let index = 0;\r\n        this.$tableHeadLeft = [];\r\n        for (let i = 0; i < this.side1; i++) {\r\n            this.$tableHeadLeft.push([]);\r\n        }\r\n        const p: PositionInterface = _.clone(basePosition);\r\n        if (this.side1 > 0) {\r\n            this.$resizeChildren.forEach((child, i) => {\r\n                child.getLeftList(index, p);\r\n                p.rowNum = p.rowNum + child.side1;\r\n                p.colNum = p.colNum;\r\n                index += child.side1;\r\n            });\r\n        }\r\n        return this.$tableHeadLeft;\r\n    }\r\n\r\n}\r\n","\r\nimport { BaseCell } from '../cell/BaseCell';\r\nimport { CellContainerInterface } from '../../interface/viewModule/container/CellContainer';\r\nimport * as _ from '../../utils';\r\nimport { CellContainer } from './CellContainer';\r\n// 只有对于容器来说才有相对位置\r\n\r\nexport class TbodyContainer extends CellContainer {\r\n    public renderByThead: boolean;\r\n\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n        this.config = _.clone(this.$dragTableConfig.TbodyContainerConfig);\r\n        // _.objectSet(this.config, this.$dragTableConfig.TbodyContainerConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.tbodyContainer, 'union');\r\n        this.renderByThead = true;\r\n    }\r\n\r\n    /**\r\n     * 设置tbody属性 部分特殊处理\r\n     *\r\n     * @param {ContainerInterface} containerData\r\n     * @memberof TbodyContainer\r\n     */\r\n    public setContainerData(containerData: CellContainerInterface, containerData2?: CellContainerInterface, weight1?: object, weight2?: object, callBack?: any) {\r\n        super.setContainerData(containerData, containerData2, weight1, weight2, callBack);\r\n    }\r\n\r\n}\r\n\r\n","import { TbodyContainer } from '../container/TbodyContainer';\r\nimport { TheadContainer } from '../container/TheadContainer';\r\nimport * as _ from '../../utils';\r\nimport { CellContainerInterface } from '../../interface/viewModule/container/CellContainer';\r\nimport { BaseTbodyInterface } from '../../interface/viewModule/tbody/BaseTbody';\r\nimport { TbodyContainerInterface } from '../../interface/viewModule/container/TbodyContainer';\r\nimport { IndexContainerInterface } from '../../interface/viewModule/container/IndexContainer';\r\nimport { IndexContainer } from '../container/IndexContainer';\r\nexport class BaseTbody extends TbodyContainer {\r\n    public topIndexList: IndexContainerInterface[];\r\n    public leftIndexList: IndexContainerInterface[];\r\n    public bodyData: any;\r\n    public separator: string = '_';\r\n    constructor(param: BaseTbodyInterface) {\r\n        super(param);\r\n        this.$rootParent = this;\r\n        this.cell = null;\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n        _.objectSet(this.config, this.$dragTableConfig.BaseTbodyConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.baseTbody, 'union');\r\n    }\r\n    /**\r\n     * 添加一行数据\r\n     *\r\n     * @param {any[]} rowData\r\n     * @returns\r\n     * @memberof BaseTbody\r\n     */\r\n    public setRowData(leftId?: any, rowData?: object | TbodyContainer[]): string {\r\n        try {\r\n            // console.log(this.topIndexList);\r\n            leftId = leftId ? leftId : 'tbody_' + _.guid();\r\n            const item = rowData || {};\r\n            if (Array.isArray(item)) {\r\n                item.forEach((value: any, j: number) => {\r\n                    if (!this.topIndexList[j]) {\r\n                        return;\r\n                    } else {\r\n                        const topId = this.topIndexList[j].renderId;\r\n                        this.setData(leftId + this.separator + topId, value);\r\n                    }\r\n                });\r\n            } else if (typeof item === 'object') {\r\n                for (const topId in item) {\r\n                    if (item.hasOwnProperty(topId)) {\r\n                        const value = item[topId];\r\n                        this.setData(leftId + this.separator + topId, value);\r\n                    }\r\n                }\r\n            }\r\n            return leftId;\r\n        } catch (error) {\r\n            console.error('setRowData数据有误');\r\n            console.error(error);\r\n            return null;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * addCol\r\n     */\r\n    public setColData(topId?: any, colData?: object | TbodyContainer[]): string {\r\n        try {\r\n            topId = topId ? topId : 'tbody_' + _.guid();\r\n            const item = colData || {};\r\n            if (Array.isArray(item)) {\r\n                item.forEach((value: any, j: number) => {\r\n                    if (!this.leftIndexList[j]) {\r\n                        return;\r\n                    }\r\n                    const leftId = this.leftIndexList[j].renderId;\r\n                    this.setData(leftId + this.separator + topId, value);\r\n                });\r\n            } else if (typeof item === 'object') {\r\n                // debugger\r\n                for (const leftId in item) {\r\n                    if (item.hasOwnProperty(leftId)) {\r\n                        const value = item[leftId];\r\n                        this.setData(leftId + this.separator + topId, value);\r\n                    }\r\n                }\r\n            }\r\n            return topId;\r\n        } catch (error) {\r\n            console.error('setColData');\r\n            console.error(error);\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * setTBodyData\r\n     */\r\n    public setTbodyData(data: object | Array<TbodyContainerInterface[] | object>): void {\r\n        this.$rootTable.render();\r\n        try {\r\n            if (Array.isArray(data)) {\r\n                data.forEach((rowData: object | any[], i: number) => {\r\n                    if (!this.leftIndexList[i]) {\r\n                        this.$rootTable.addOneRow({\r\n                            data: rowData,\r\n                            render: false\r\n                        });\r\n                    } else {\r\n                        const leftId = this.leftIndexList[i].renderId;\r\n                        this.setRowData(leftId, rowData);\r\n                    }\r\n                });\r\n            } else if (typeof data === 'object') {\r\n                for (const key in data) {\r\n                    if (data.hasOwnProperty(key)) {\r\n                        const value = data[key];\r\n                        this.setData(key, value);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error('输入数据格式有误');\r\n        }\r\n        this.subjectSend(\r\n            {\r\n                ev_type: 'beforeRender',\r\n                render: true,\r\n                event: null,\r\n                data: {\r\n                    objectName: 'setTbodyData',\r\n                    object: null\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * setContainer\r\n     */\r\n    public setData(keyString: string, containerData: TbodyContainerInterface | string | number): TbodyContainer {\r\n        let container: TbodyContainer;\r\n        try {\r\n            if (this.bodyData.hasOwnProperty(keyString)) {\r\n                container = this.bodyData[keyString];\r\n            } else {\r\n                container = this.createContain();\r\n            }\r\n            if (['string', 'number'].indexOf(typeof containerData) !== -1) {\r\n                container.cell.value = containerData;\r\n            } else if (typeof containerData === 'object') {\r\n                container.setContainerData(containerData);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * 设置tbody属性 部分特殊处理\r\n     *\r\n     * @param {CellContainerInterface} containerData\r\n     * @memberof TbodyContainer\r\n     */\r\n    public setContainerData(containerData: CellContainerInterface, containerData2?: CellContainerInterface, weight1?: object, weight2?: object, callBack?: any) {\r\n\r\n        const conditionHandle = (key: string, value: any) => {\r\n            // debugger\r\n            if (key === 'bodyData') {\r\n                this.setTbodyData(value);\r\n                return;\r\n            }\r\n            this.setProperty(key, value);\r\n\r\n        };\r\n        super.setContainerData(containerData, containerData2, weight1, weight2, conditionHandle);\r\n        // debugger\r\n        for (const key in containerData) {\r\n            if (containerData.hasOwnProperty(key)) {\r\n                const value: any = (containerData as any)[key];\r\n                if (key === 'bodyData') {\r\n                    for (const leftThId in value) {\r\n                        if (value.hasOwnProperty(leftThId)) {\r\n                            const rowData = value[leftThId];\r\n                            this.setRowData(leftThId, rowData);\r\n                        }\r\n                    }\r\n                } else if (typeof value === 'object' && !Array.isArray(value) && key.indexOf('$') === -1) {\r\n                    _.objectSet(this[key], value, 'union');\r\n                } else {\r\n                    this.setProperty(key, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * resize\r\n     */\r\n    public resize() {\r\n        this.side1 = this.topIndexList.length;\r\n        this.side2 = this.leftIndexList.length;\r\n    }\r\n    /**\r\n     * 创建容器\r\n     *\r\n     * @private\r\n     * @param {CellContainerInterface} data\r\n     * @returns\r\n     * @memberof BaseThead\r\n     */\r\n    public createContain(data?: CellContainerInterface) {\r\n        const $groupId = this.$groupId;\r\n        const container = new TbodyContainer({\r\n            type: 'tbody',\r\n            side1: 1,\r\n            side2: 1,\r\n            $groupId,\r\n            $rootTable: this.$rootTable,\r\n            $rootParent: this,\r\n            config: this.$rootParent.config\r\n        });\r\n        if (data) {\r\n            container.setContainerData(data);\r\n        }\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * render\r\n     */\r\n    public render(): void {\r\n        const leftIndexList = this.leftIndexList;\r\n        const topIndexList = this.topIndexList;\r\n        this.resize();\r\n        leftIndexList.forEach((leftIndexTh: IndexContainerInterface) => {\r\n            topIndexList.forEach((topIndexTh: IndexContainerInterface) => {\r\n                const keyString = leftIndexTh.renderId + this.separator + topIndexTh.renderId;\r\n                let container: TbodyContainer = this.createContain();\r\n                if (this.bodyData.hasOwnProperty(keyString)) {\r\n                    container = this.bodyData[keyString];\r\n                } else {\r\n                    this.bodyData[keyString] = container;\r\n                }\r\n                container.position = {\r\n                    table: this.$rootTable.position.table,\r\n                    colNum: topIndexTh.theadPosition[0],\r\n                    rowNum: leftIndexTh.theadPosition[0],\r\n                    colStr: _.getA_Z(topIndexTh.theadPosition[0]),\r\n                    rowStr: leftIndexTh.theadPosition[0] + 1,\r\n                };\r\n                container.id = keyString;\r\n                this.$positionManager.setPositionMap(container.position, container, 'source');\r\n                const leftThead = leftIndexTh.$theadContainer;\r\n                const topThead = topIndexTh.$theadContainer;\r\n                let leftThTbdoyConfig = leftIndexTh.tbodyConfig.container || {};\r\n                let topThTbdoyConfig = topIndexTh.tbodyConfig.container || {};\r\n                // debugger\r\n                let sumContainer: TheadContainer;\r\n                if (/sum/.test(leftIndexTh.renderId)) {\r\n                    topThTbdoyConfig = {};\r\n                    sumContainer = leftThead as TheadContainer;\r\n                } else if (/sum/.test(topIndexTh.renderId)) {\r\n                    leftThTbdoyConfig = {};\r\n                    sumContainer = topThead as TheadContainer;\r\n                }\r\n                if ((/sum/.test(topIndexTh.renderId) || /sum/.test(leftIndexTh.renderId)) && ((leftIndexTh.canSum || topThead === undefined) && (topIndexTh.canSum || leftThead === undefined))) {\r\n                    // const sumContainer = leftIndexTh.id.indexOf('sum') !== -1 ? leftIndexTh.$theadContainer : topIndexTh.$theadContainer;\r\n                    const parentContainer: TheadContainer = sumContainer.$rootParent.getContainerByTheadPosition(_.dropRight(sumContainer.theadPosition));\r\n                    const containerList = new Array();\r\n                    let count = 0;\r\n                    for (let i = 0; i < _.last(sumContainer.theadPosition); i++) {\r\n                        count += parentContainer.children[i].side1;\r\n                    }\r\n                    for (let i = 0; i < count; i++) {\r\n                        if (sumContainer.type === 'top' && i) {\r\n                            const stringPosition = _.getA_Z(sumContainer.position.colNum - (i) - 1) + container.position.rowStr;\r\n                            containerList.push(stringPosition);\r\n                        } else {\r\n                            const stringPosition = container.position.colStr + (sumContainer.position.rowNum - i);\r\n                            containerList.push(stringPosition);\r\n                        }\r\n\r\n                    }\r\n                    if (container.renderByThead) {\r\n                        // container.cell.setProperty('value', ('=' + containerList.join('+')));\r\n                        container.cell.value = ('=' + containerList.join('+'));\r\n                    }\r\n\r\n                }\r\n\r\n                // if (container.id === 'none-zj') {\r\n                //     debugger\r\n                // }\r\n                const renderByThead = this.getDataByWeight('renderByThead', leftThTbdoyConfig, topThTbdoyConfig, leftIndexTh.tbodyConfig.weight, topIndexTh.tbodyConfig.weight);\r\n                container.renderByThead = renderByThead === undefined ? container.renderByThead : renderByThead;\r\n                if (container.renderByThead == true) {\r\n                    container.setContainerData(leftThTbdoyConfig, topThTbdoyConfig, leftIndexTh.tbodyConfig.weight, topIndexTh.tbodyConfig.weight);\r\n                }\r\n                container.style.width = topIndexTh.style.width;\r\n                container.style.height = leftIndexTh.style.height;\r\n                container.widthSelfNum = topIndexTh.widthNum;\r\n                container.heightSelfNum = topIndexTh.heightNum;\r\n                container.cell.render();\r\n            });\r\n            // this.bodyData[leftIndexTh.renderId] = tmpTr;\r\n        });\r\n    }\r\n\r\n    public convert(): TbodyContainerInterface[][] {\r\n        const bodyData = new Array();\r\n        this.leftIndexList.forEach((leftIndexTh: IndexContainerInterface) => {\r\n            const trData = new Array();\r\n            this.topIndexList.forEach((topIndexTh: IndexContainerInterface) => {\r\n                const keyString = leftIndexTh.renderId + this.separator + topIndexTh.renderId;\r\n                if (this.bodyData.hasOwnProperty(keyString)) {\r\n                    const td = this.bodyData[keyString];\r\n                    trData.push(td);\r\n                    this.$positionManager.setPositionMap(td.position, td, 'clone');\r\n                }\r\n            });\r\n            bodyData.push(trData);\r\n        });\r\n        return bodyData;\r\n    }\r\n    /**\r\n     * 普通 list套object的输出\r\n     *\r\n     * @returns\r\n     * @memberof BaseTbody\r\n     */\r\n    public output(valueType: 'content' | 'container'): any {\r\n        const objectData = {};\r\n        const arrayObjectData = [];\r\n        const arrayArrayData = [];\r\n        this.leftIndexList.forEach((leftIndexTh: IndexContainerInterface) => {\r\n            const trObject: any = {};\r\n            const trArray: any[] = [];\r\n            this.topIndexList.forEach((topIndexTh: IndexContainerInterface) => {\r\n                const keyString = leftIndexTh.renderId + this.separator + topIndexTh.renderId;\r\n                if (this.bodyData.hasOwnProperty(keyString)) {\r\n                    const container = this.bodyData[keyString];\r\n                    if (valueType === 'content') {\r\n                        objectData[keyString] = container.cell.content;\r\n                        trObject[topIndexTh.renderId] = container.cell.content;\r\n                        trArray.push(container.cell.content);\r\n                    } else if (valueType === 'container') {\r\n                        objectData[keyString] = container;\r\n                        trObject[topIndexTh.renderId] = container;\r\n                        trArray.push(container);\r\n                    }\r\n                }\r\n            });\r\n            arrayObjectData.push(trObject);\r\n            arrayArrayData.push(trArray);\r\n        });\r\n        return {\r\n            objectData,\r\n            arrayObjectData,\r\n            arrayArrayData\r\n        };\r\n    }\r\n    /**\r\n     * 用于序列化中的导出\r\n     *\r\n     * @returns\r\n     * @memberof BaseTbody\r\n     */\r\n    public outputByObject(): object {\r\n        const res: any = {};\r\n        this.leftIndexList.forEach((leftIndexTh: IndexContainerInterface) => {\r\n            if (this.bodyData.hasOwnProperty(leftIndexTh.renderId)) {\r\n                const tmpTr = this.bodyData[leftIndexTh.renderId];\r\n                const trData: any = {};\r\n                this.topIndexList.forEach((topIndexTh: IndexContainerInterface) => {\r\n                    if (tmpTr.hasOwnProperty(topIndexTh.renderId)) {\r\n                        trData[topIndexTh.renderId] = (tmpTr[topIndexTh.renderId] as TbodyContainer).clone();\r\n                    }\r\n                });\r\n                res[leftIndexTh.renderId] = (trData);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n    /**\r\n     * cleanTbody\r\n     */\r\n    public cleanTimeOutTbody() {\r\n        const newData = {};\r\n        this.leftIndexList.forEach((leftIndexTh: IndexContainerInterface) => {\r\n            this.topIndexList.forEach((topIndexTh: IndexContainerInterface) => {\r\n                const keyString = leftIndexTh.renderId + this.separator + topIndexTh.renderId;\r\n                if (this.bodyData.hasOwnProperty(keyString)) {\r\n                    newData[keyString] = this.bodyData[keyString];\r\n                }\r\n            });\r\n        });\r\n        this.bodyData = newData;\r\n    }\r\n    public clone(excludeReg?: RegExp, keepReg?: RegExp, withFunction?: boolean) {\r\n        this.cleanTimeOutTbody();\r\n        return super.clone(excludeReg, keepReg, withFunction);\r\n    }\r\n}\r\n","import { TheadContainer } from './TheadContainer';\r\nimport { IndexContainerInterface } from '../../interface/viewModule/container/IndexContainer';\r\nimport { IndexThead } from '../thead/IndexThead';\r\nimport * as _ from '../../utils/index';\r\nexport class IndexContainer extends TheadContainer implements IndexContainerInterface {\r\n\r\n    public $rootParent: IndexThead;\r\n    public children: IndexContainer[];\r\n\r\n    public renderId: string;\r\n    public $theadContainer?: TheadContainer;\r\n    constructor(param: IndexContainerInterface) {\r\n        super(param);\r\n        this.treeContainer = null;\r\n    }\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n        this.config = _.clone(this.$dragTableConfig.IndexContainerConfig);\r\n        if (/top-index/.test(this.type)) {\r\n            _.objectSet(paramClone, this.$dragTableConfig.topIndexContainer, 'union');\r\n        } else if (/left-index/.test(this.type)) {\r\n            _.objectSet(paramClone, this.$dragTableConfig.leftIndexContainer, 'union');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * setSystemData\r\n     */\r\n    public update(th: TheadContainer): void {\r\n        if (!th) {\r\n            return;\r\n        }\r\n        this.tbodyConfig = th.tbodyConfig;\r\n        this.canSum = th.canSum;\r\n        this.renderId = th.id;\r\n        this.$theadContainer = th;\r\n        if (/left/.test(this.type)) {\r\n            this.style.height = th.style.height;\r\n            this.heightNum = this.heightSelfNum = th.heightSelfNum;\r\n            if (/top/.test(th.type)) {\r\n                this.style.zIndex = 100;\r\n            }\r\n        } else if (/top/.test(this.type)) {\r\n            // debugger;\r\n            this.style.width = th.style.width;\r\n            this.widthNum = this.widthSelfNum = th.widthSelfNum;\r\n            if (/left/.test(th.type)) {\r\n                this.style.zIndex = 100;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * resetByIndexContainer\r\n     */\r\n    protected resetByIndexContainer(): void {\r\n        if (this.id === 'top-left') {\r\n            return;\r\n        }\r\n        this.widthNum = this.widthSelfNum;\r\n        this.heightNum = this.heightSelfNum;\r\n        this.span1 = this.config.span1;\r\n        this.span2 = this.config.span2;\r\n        this.side1 = this.config.side1;\r\n        this.side2 = this.config.side2;\r\n    }\r\n}\r\n\r\n","import { BaseCell } from '../cell/BaseCell';\r\nimport * as _ from '../../utils/index';\r\nimport { IndexContainer } from '../container/IndexContainer';\r\nimport { IndexContainerInterface } from '../../interface/viewModule/container/IndexContainer';\r\n\r\nexport class IndexThead extends IndexContainer {\r\n    public $leafIndexList: IndexContainer[];\r\n    public $leafIndexList2: IndexContainer[];\r\n    constructor(param: IndexContainerInterface) {\r\n        super(param);\r\n    }\r\n    /**\r\n     * initBeforeSetData\r\n     */\r\n    public initBeforeSetData(paramClone?: any) {\r\n        super.initBeforeSetData(paramClone);\r\n        this.cell = null;\r\n        this.$rootParent = this;\r\n        _.objectSet(this.config, this.$dragTableConfig.IndexTheadConfig, 'union');\r\n        if (/top-index/.test(this.type)) {\r\n            _.objectSet(paramClone, this.$dragTableConfig.topIndexThead, 'union');\r\n        } else if (/left-index/.test(this.type)) {\r\n            _.objectSet(paramClone, this.$dragTableConfig.leftIndexThead, 'union');\r\n            this.config.style.width = '80px';\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * resize\r\n     */\r\n    public resize(): void {\r\n        this.$leafIndexList = [];\r\n        this.$leafIndexList2 = [];\r\n        super.resize();\r\n    }\r\n\r\n    /**\r\n     * replaceChild\r\n     */\r\n    public replaceChild(newChild: IndexContainer, targetIndex: number, needDeleteItChildren?: boolean): void {\r\n        super.replaceChild(newChild, targetIndex, needDeleteItChildren);\r\n        this.$positionManager.setPositionMap(newChild.position, newChild, 'last');\r\n    }\r\n\r\n    /**\r\n     * render\r\n     */\r\n    public render(): void {\r\n        this.resize();\r\n        this.children.forEach((th: IndexContainer, i: number) => {\r\n            th.position.table = this.$rootTable.position.table;\r\n            if (th.cell) {\r\n                if (th.type.indexOf('top') !== -1) {\r\n                    th.position.colNum = i;\r\n                    th.position.colStr = _.getA_Z(i);\r\n                    th.position.rowStr = 0;\r\n                    th.cell.value = _.getA_Z(i);\r\n                } else if (th.type.indexOf('left') !== -1) {\r\n                    // debugger\r\n                    th.position.colStr = '@';\r\n                    th.position.rowNum = i;\r\n                    th.position.rowStr = i + 1;\r\n                    th.cell.value = i + 1;\r\n                }\r\n                // debugger\r\n                th.id = th.cell.value;\r\n                if (this.$rootTable.debugLevel === 1) {\r\n                    th.cell.value = th.renderId;\r\n                } else if (this.$rootTable.debugLevel === 0) {\r\n\r\n                }\r\n                this.$positionManager.setPositionMap(th.position, th, 'source');\r\n                th.cell.render();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建容器\r\n     *\r\n     * @private\r\n     * @param {DragStartData} data\r\n     * @returns\r\n     * @memberof BaseThead\r\n     */\r\n    public createContain(data?: IndexContainerInterface): IndexContainer {\r\n        // 此处是 IndexContainer 区别与TheadContaner;\r\n        const $groupId = this.$groupId;\r\n        const container = new IndexContainer(\r\n            {\r\n                type: this.type,\r\n                side1: 1, side2: 1,\r\n                $rootParent: this.$rootParent,\r\n                $rootTable: this.$rootTable,\r\n                $groupId\r\n            }\r\n        );\r\n        // container.setConfig(this.$rootParent.config);\r\n        if (data) {\r\n            container.setContainerData(data);\r\n        }\r\n        if (!container.cell) {\r\n            const cell = new BaseCell({ $parent: container });\r\n            container.setCell(cell);\r\n        }\r\n        return container;\r\n    }\r\n\r\n    public fastAddChild() {\r\n        const container = this.createContain();\r\n        this.addChild(container);\r\n    }\r\n\r\n    /**\r\n     * convert\r\n     */\r\n    public convert(): IndexContainerInterface[] {\r\n        const res = new Array();\r\n        this.children.forEach((th: IndexContainer) => {\r\n            const copyTh = th.clone(undefined, undefined, true);\r\n            this.$positionManager.setPositionMap(copyTh.position, copyTh, 'clone');\r\n            res.push(copyTh);\r\n        });\r\n        return res;\r\n    }\r\n\r\n\r\n}","import * as _ from '../../utils/index';\r\nimport { BaseContainer } from './BaseContainer';\r\nimport { TableContainerInterface } from '../../interface/viewModule/container/TableContainer';\r\nimport { SelectBox } from '../selectBox/SelectBox';\r\nimport { CellContainer } from './CellContainer';\r\nimport { BaseTableConfig } from '../../config/BaseTableConfig';\r\nimport { TheadContainer } from './TheadContainer';\r\nimport { BaseThead } from '../thead/BaseThead';\r\nimport { IndexThead } from '../thead/IndexThead';\r\nimport { BaseTbody } from '../tbody/BaseTbody';\r\nimport { IndexContainerInterface } from '../../interface/viewModule/container/IndexContainer';\r\nimport { TbodyContainerInterface } from '../../interface/viewModule/container/TbodyContainer';\r\nexport class TableContainer extends BaseContainer {\r\n    public tableName: string = ''; // 表格名称\r\n    public $selectBoxEntity: SelectBox<CellContainer>; // 单元格样式处理单元\r\n    public $colNumber?: IndexContainerInterface[] = new Array(); //  列标识：最上面'A', 'B', 'C', 'D'.....\r\n    public $rowNumber?: IndexContainerInterface[] = new Array(); // 行标识: 最左边面1, 2, 3, 4, 5.....\r\n    public $tableHeadTop?: TheadContainer[][] = new Array(); // 用于显示的上侧表头 直接用于上表头的渲染\r\n    public $tableHeadLeft?: TheadContainer[][] = new Array(); // 用于显示的左侧表头 直接用于左表头的渲染\r\n    public $tableBody?: TbodyContainerInterface[][] = new Array(); // 用于显示的表内容\r\n    public $keyDownSet?: Set<string> = new Set(); // 键盘按键按下状态的Set\r\n    public config: BaseTableConfig;\r\n    public tableHeadTopLeft?: TheadContainer;\r\n    public theadTopEntity?: BaseThead; // 上侧表头实体\r\n    public theadLeftEntity?: BaseThead; // 左侧表头实体\r\n    public theadTopIndexEntity?: IndexThead; // 上侧列标识实体\r\n    public theadLeftIndexEntity?: IndexThead; // 左侧行标识实体\r\n    public tbodyEntity?: BaseTbody; // 表内容实体\r\n\r\n    public isTopLeftShow?: boolean; // 左上角单元格是否显示表名\r\n    public topLeftValue: string;\r\n    public isShowColIndex?: boolean;  // 是否显示 列标识：A、B、D、C\r\n    public isShowRowIndex?: boolean; // 是否显示 行标识：1、2、3、4\r\n    public isOverflowX?: boolean; // 超出宽X度是否出现滚动条\r\n    public isOverflowY?: boolean; // 超出高Y度是否出现滚动条\r\n\r\n    public debugLevel?: number; // 1为调试模式 0是正常模式\r\n    public canDragResize?: boolean; // 是否可以拖动 控制行列宽度\r\n    public hasTopFixedTable?: boolean; // 是否有上侧固定表头\r\n    public hasLeftFixedTable?: boolean; // 是否有左侧固定表头\r\n\r\n    public maxWidth?: string; // 如果加滚动条 表格默认宽度\r\n    public maxHeight?: string; // 如果加滚动条 表格默认高度\r\n    public scrollBarWidth?: string;\r\n    public scrollBarHeight?: string;\r\n\r\n\r\n    constructor(param: TableContainerInterface) {\r\n        super(param);\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n    }\r\n\r\n\r\n    /**\r\n     * 按键抬起\r\n     *\r\n     * @param {*} ev\r\n     * @memberof BaseTable\r\n     */\r\n    public onKeyUp(ev: any): void {\r\n        this.$keyDownSet.delete(ev.key);\r\n    }\r\n\r\n    /**\r\n     * 按键按下\r\n     *\r\n     * @param {*} ev\r\n     * @memberof BaseTable\r\n     */\r\n    public onKeyDown(ev: any): void {\r\n        this.$keyDownSet.add(ev.key);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * onClick\r\n     */\r\n    public onClick(ev: any): void {\r\n        this.subjectSend({\r\n            ev_type: 'click',\r\n            event: ev,\r\n            data: {\r\n                objectName: 'TableContainer',\r\n                object: this,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得表头实体\r\n     *\r\n     * @protected\r\n     * @param {string} type\r\n     * @returns\r\n     *\r\n     */\r\n    public getEntity(type: 'left' | 'top' | 'left-index' | 'top-index' | 'tbody' | string): any {\r\n        switch (type) {\r\n            case 'top': return this.theadTopEntity;\r\n            case 'left': return this.theadLeftEntity;\r\n            case 'top-index': return this.theadTopIndexEntity;\r\n            case 'left-index': return this.theadLeftIndexEntity;\r\n            case 'tbody': return this.tbodyEntity; // 双击编辑表格时 为了统一失去焦点后的函数\r\n            default: console.log('getEntity-default'); return this.theadTopEntity;\r\n        }\r\n    }\r\n}\r\n","import { CellContainer } from '../container/CellContainer';\r\nimport { TableContainer } from '../container/TableContainer';\r\nimport { IndexContainer } from '../container/IndexContainer';\r\nimport { TheadContainer } from '../container/TheadContainer';\r\nexport class SelectBox<T> {\r\n\r\n    public static instances: any = {};\r\n    /**\r\n     * getInstance\r\n     */\r\n    public static getInstance(type: string, baseTable: TableContainer) {\r\n        let instance = this.instances[type];\r\n        if (!instance) {\r\n            this.instances[type] = instance = new SelectBox(type, baseTable);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public type: string;\r\n    public selectMap: Map<string, any> = new Map();\r\n    public selectList: any[] = new Array();\r\n    public $TableContainer: TableContainer;\r\n    public currentCotanier: CellContainer | null;\r\n    public size: number = 0;\r\n    public stlye: any = {\r\n        position: 'absolute',\r\n        zIndex: 98,\r\n    };\r\n    constructor(type: string, $TableContainer: TableContainer) {\r\n        this.type = type;\r\n        this.$TableContainer = $TableContainer;\r\n    }\r\n\r\n\r\n    /**\r\n     * createSelectCell\r\n     */\r\n    public createSelectContainer(dom: any, cellContainer: CellContainer): any {\r\n        // debugger;\r\n        // const container: any = cellContainer.clone([], ['$', 'userData'], true);\r\n        const rootTable = cellContainer.$rootTable;\r\n        const container: any = cellContainer.clone();\r\n        container.selectBoxType = 'main';\r\n        let zIndex = 98;\r\n        switch (cellContainer.type) {\r\n\r\n\r\n            case 'top':\r\n            case 'top-index':\r\n                zIndex = 100;\r\n                container.selectBoxType = rootTable.hasTopFixedTable ? 'top' : 'main';\r\n                if (rootTable.hasTopFixedTable && rootTable.hasLeftFixedTable) {\r\n                    const theadContainer: TheadContainer = (cellContainer as IndexContainer).$theadContainer;\r\n                    if (theadContainer && !new RegExp(theadContainer.type).test(cellContainer.type)) {\r\n                        container.selectBoxType = 'top-left';\r\n                        zIndex = 101;\r\n                    }\r\n                }\r\n                break;\r\n            case 'left':\r\n            case 'left-index':\r\n                zIndex = 100;\r\n                container.selectBoxType = rootTable.hasLeftFixedTable ? 'left' : 'main';\r\n                if (rootTable.hasTopFixedTable && rootTable.hasLeftFixedTable) {\r\n                    const theadContainer: TheadContainer = (cellContainer as IndexContainer).$theadContainer;\r\n                    if (theadContainer && !new RegExp(theadContainer.type).test(cellContainer.type)) {\r\n                        container.selectBoxType = 'top-left';\r\n                        zIndex = 101;\r\n                    }\r\n                }\r\n                break;\r\n            case 'tbody':\r\n                zIndex = 96;\r\n                container.selectBoxType = 'main';\r\n                break;\r\n        }\r\n\r\n        const width = dom.offsetWidth - 2;\r\n        const height = dom.clientHeight - 2;\r\n        container.topStyle = {\r\n            position: 'absolute',\r\n            left: 0 + 'px',\r\n            top: 0 + 'px',\r\n            width: width + 'px',\r\n            borderBottom: '2px solid blue',\r\n            boxSizing: 'border-box',\r\n            zIndex,\r\n        };\r\n        container.bottomStyle = {\r\n            position: 'absolute',\r\n            left: 0 + 'px',\r\n            top: height + 'px',\r\n            width: width + 'px',\r\n            boxSizing: 'border-box',\r\n            borderTop: '2px solid blue',\r\n            zIndex,\r\n        };\r\n        container.leftStyle = {\r\n            position: 'absolute',\r\n            left: 0 + 'px',\r\n            top: 0 + 'px',\r\n            height: height + 'px',\r\n            borderLeft: '2px solid blue',\r\n            boxSizing: 'border-box',\r\n            zIndex,\r\n        };\r\n        container.rightStyle = {\r\n            position: 'absolute',\r\n            left: (width - 1) + 'px',\r\n            top: 0 + 'px',\r\n            height: height + 'px',\r\n            borderLeft: '2px solid blue',\r\n            boxSizing: 'border-box',\r\n            zIndex,\r\n        };\r\n        const style: any = container.style = {};\r\n        style.left = dom.offsetLeft;\r\n        style.top = dom.offsetTop;\r\n        style.position = 'relative';\r\n        style.zIndex = zIndex;\r\n        return container;\r\n    }\r\n    /**\r\n     * add\r\n     */\r\n    public add(container: CellContainer): any {\r\n        this.currentCotanier = container;\r\n        const res = this.selectMap.set(container.id, container);\r\n        this.render();\r\n        return res;\r\n    }\r\n    /**\r\n     * has\r\n     */\r\n    public has(container: CellContainer): boolean {\r\n        let hasSet = false;\r\n        this.selectList.forEach((sc: CellContainer) => {\r\n            if (JSON.stringify(sc.id) === JSON.stringify(container.id)) {\r\n                hasSet = true;\r\n            }\r\n        });\r\n        return hasSet;\r\n    }\r\n\r\n    /**\r\n     * delete\r\n     */\r\n    public delete(container: CellContainer): boolean {\r\n        const res = this.selectMap.delete(container.id);\r\n        this.render();\r\n        return res;\r\n    }\r\n\r\n    public clear(): any {\r\n        this.currentCotanier = null;\r\n        const res = this.selectMap.clear();\r\n        this.render();\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * forEach\r\n     */\r\n    public forEach(callbackfn: any, thisArg?: any): void {\r\n        this.selectMap.forEach(callbackfn, thisArg);\r\n    }\r\n\r\n    /**\r\n     * render\r\n     */\r\n    public render(): void {\r\n        // debugger\r\n        this.selectList = [];\r\n        this.selectMap.forEach((val, key) => {\r\n            this.selectList.push(val);\r\n        });\r\n        this.size = this.selectMap.size;\r\n        // console.log( this.size );\r\n    }\r\n\r\n    /**\r\n     * convert\r\n     */\r\n    public convert(): any[] {\r\n        return this.selectList;\r\n    }\r\n}\r\n","import { BaseThead } from '../thead/BaseThead';\r\nimport { TheadContainer } from '../container/TheadContainer';\r\nimport { BaseTbody } from '../tbody/BaseTbody';\r\nimport * as _ from '../../utils/index';\r\nimport { IndexContainer } from '../container/IndexContainer';\r\nimport { BaseCell } from '../cell/BaseCell';\r\nimport { DragTransferDataInterface } from '../../interface/DragTransferData';\r\nimport { CellContainer } from '../container/CellContainer';\r\nimport { IndexThead } from '../thead/IndexThead';\r\nimport { TbodyContainer } from '../container/TbodyContainer';\r\nimport { BaseTableConfig } from '../../config/BaseTableConfig';\r\nimport { SubjectMsgInterface } from '../../interface/SubjectMsgInterface';\r\nimport { PositionInterface } from '../../interface/PositionInterface';\r\nimport { ProcessTheadInterface, ParamTheadAdd, ParamTheadMove, ParamTheadAddReplace, ParamTheadMoveReplace, ParamTheadDelete } from '../../interface/ProcessTheadInterface';\r\nimport { TableContainer } from '../container/TableContainer';\r\nimport { TheadContainerInterface } from '../../interface/viewModule/container/TheadContainer';\r\nimport { AddDataPostionInterface } from '../../interface/viewModule/tbody/BaseTbody';\r\nimport { TbodyContainerInterface } from '../../interface/viewModule/container/TbodyContainer';\r\nimport { BaseTableInterface } from '../../interface/viewModule/table/BaseTable';\r\nimport { CellContainerInterface } from '../../interface/viewModule/container/CellContainer';\r\nimport { SelectBox } from '../selectBox/SelectBox';\r\nimport { DragTable } from '../../DragTable';\r\nimport { TableConfigInterface } from '../../interface/config/TableConfig';\r\nimport { TreeContainer } from '../container/TreeContainer';\r\n\r\nexport class BaseTable extends TableContainer implements BaseTableInterface {\r\n    public config: BaseTableConfig; // 表格的总体设置\r\n    public $parent: DragTable;\r\n    public defaultExpandedIds: any[];\r\n    constructor(param: BaseTableInterface) {\r\n        super(param);\r\n        this.setExpandedContainer();\r\n    }\r\n\r\n    /**\r\n     * setDefaultExpanded\r\n     */\r\n    public setExpandedContainer(defaultExpandedIds?: any[]): void {\r\n        this.defaultExpandedIds = defaultExpandedIds || this.defaultExpandedIds;\r\n        const treeContainerMap = this.$positionManager.treeContainerMap;\r\n        treeContainerMap.forEach((value: TreeContainer, key: any) => {\r\n            value.$openStatus = 'close';\r\n        });\r\n        this.defaultExpandedIds.forEach((id: any) => {\r\n            let canDo: boolean = true;\r\n            let treeContainer = treeContainerMap.get(id);\r\n            if (treeContainer) {\r\n                do {\r\n                    treeContainer.$openStatus = 'open';\r\n                    treeContainer.$treeParent;\r\n                    if (treeContainer.$treeParent) {\r\n                        treeContainer = treeContainer.$treeParent;\r\n                    } else {\r\n                        canDo = false;\r\n                    }\r\n                } while (canDo);\r\n                treeContainer.resize();\r\n                treeContainer.loop(treeContainer.$openStatus as 'open' | 'close');\r\n            }\r\n\r\n        });\r\n        this.render();\r\n    }\r\n\r\n    public getAllHideContainer(): Map<any, CellContainer> {\r\n        return this.$positionManager.hideContainerMap;\r\n    }\r\n\r\n    public initBeforeSetData(paramClone?: any): void {\r\n        super.initBeforeSetData(paramClone);\r\n        _.objectSet(this.config, this.$dragTableConfig.BaseTableConfig, 'union');\r\n        _.objectSet(paramClone, this.$dragTableConfig.table, 'union');\r\n        const $groupId = this.$groupId;\r\n        this.$selectBoxEntity = SelectBox.getInstance(this.$groupId, this);\r\n        // debugger\r\n        // this.tableHeadTopLeft = ContainerFactory.create('TheadContainer', { style: { backgroundColor: '#fff' } });\r\n        this.tableHeadTopLeft = new TheadContainer({ id: 'top-left', side1: 1, side2: 1, style: { backgroundColor: '#fff' }, $groupId, $rootTable: this }); // 左上角空白单元格长宽\r\n        this.theadTopEntity = new BaseThead({ id: 'topThead', type: 'top', $groupId, $rootTable: this, side1: 0, side2: 0 });\r\n        this.theadLeftEntity = new BaseThead({ id: 'leftThead', type: 'left', $groupId, $rootTable: this, side1: 0, side2: 0 });\r\n        this.theadTopIndexEntity = new IndexThead({ id: 'topIndexThead', type: 'top-index', $groupId, $rootTable: this, side1: 0, side2: 0 });\r\n        this.theadLeftIndexEntity = new IndexThead({ id: 'leftIndexThead', type: 'left-index', $groupId, $rootTable: this, side1: 0, side2: 0 });\r\n        this.tbodyEntity = new BaseTbody({ id: 'baseTbody', type: 'tbody', $groupId, $rootTable: this, side1: 0, side2: 0 });\r\n        this.initSubject(this);\r\n    }\r\n\r\n    /**\r\n     * setConfig\r\n     */\r\n    public setConfig(tableConfig: TableConfigInterface): void {\r\n        _.objectSet(this.config, tableConfig.table, 'union');\r\n        _.objectSet(this.theadTopEntity.config, tableConfig.topThead, 'union');\r\n        _.objectSet(this.theadLeftEntity.config, tableConfig.leftThead, 'union');\r\n        _.objectSet(this.theadTopIndexEntity.config, tableConfig.topIndexThead, 'union');\r\n        _.objectSet(this.theadLeftIndexEntity.config, tableConfig.leftIndexThead, 'union');\r\n        _.objectSet(this.tbodyEntity.config, tableConfig.baseTbody, 'union');\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * setContainerData 反序列化\r\n     */\r\n    public setContainerData(param: BaseTableInterface): void {\r\n        try {\r\n            const copyJson = _.keepClone(param);\r\n            const conditionHandle = (key: string, value: any) => {\r\n                if (key === 'theadTopEntity') {\r\n                    _.objectSet(value, this.$dragTableConfig.topThead);\r\n                    this.theadTopEntity.setContainerData(value);\r\n                    return;\r\n                } else if (key === 'theadLeftEntity') {\r\n                    _.objectSet(value, this.$dragTableConfig.leftThead);\r\n                    this.theadLeftEntity.setContainerData(value);\r\n                    return;\r\n                } else if (key === 'theadTopIndexEntity') {\r\n                    _.objectSet(value, this.$dragTableConfig.topIndexThead);\r\n                    this.theadTopIndexEntity.setContainerData(value);\r\n                    return;\r\n                } else if (key === 'theadLeftIndexEntity') {\r\n                    _.objectSet(value, this.$dragTableConfig.leftIndexThead);\r\n                    this.theadLeftIndexEntity.setContainerData(value);\r\n                    return;\r\n                } else if (key === 'tbodyEntity') {\r\n                    _.objectSet(value, this.$dragTableConfig.baseTbody);\r\n                    this.tbodyEntity.setContainerData(value);\r\n                    return;\r\n                }\r\n                this.setProperty(key, value);\r\n            };\r\n            super.setContainerData(copyJson, undefined, undefined, undefined, conditionHandle);\r\n        } catch (error) {\r\n            console.error('setContainerData 中出现出错');\r\n            console.error(error);\r\n        }\r\n        this.initAfterSetData();\r\n        this.subjectSend(\r\n            {\r\n                ev_type: 'beforeRender',\r\n                render: true,\r\n                event: null,\r\n                data: {\r\n                    objectName: 'setContainerData',\r\n                    object: this\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * onDestroy\r\n     */\r\n    public onDestroy(): void {\r\n        const self: BaseTable = this;\r\n        self.theadTopEntity.$subject.unsubscribe(self.onReceiveMsg, self);\r\n        self.theadLeftEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n        self.tbodyEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n    }\r\n\r\n    /**\r\n     * initTable 初始化表格\r\n     *\r\n     * @param {number} width\r\n     * @memberof BaseTable\r\n     */\r\n    public initTable(width: number, height?: number): void {\r\n        for (let colIndex = 0; colIndex < width; colIndex++) {\r\n            this.theadTopIndexEntity.fastAddChild();\r\n            this.theadAdd({\r\n                type: 'top',\r\n                targetParentPosition: [],\r\n            });\r\n        }\r\n        height = height === undefined ? 1 : height;\r\n        for (let i = 0; i < height; i++) {\r\n            this.addOneRow();\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * addOneRow 添加一行数据\r\n     *\r\n     * @param {*} [rowData]\r\n     * @memberof BaseTable\r\n     */\r\n    public addOneRow(params?:\r\n        {\r\n            data?: object | any[] | CellContainer[],\r\n            param?: AddDataPostionInterface,\r\n            render?: boolean;\r\n        }\r\n    ): string {\r\n        const param = params ? params.param : undefined;\r\n        const rowData = params ? params.data : undefined;\r\n        const render = params ? params.render : undefined;\r\n\r\n\r\n        let id: string = null;\r\n        let needAddThead = false;\r\n        let paramTheadAdd: ParamTheadAdd;\r\n        const lastSelectContainer: TheadContainer = this.$selectBoxEntity.currentCotanier as TheadContainer;\r\n        if (param) {\r\n            paramTheadAdd = {\r\n                type: 'left',\r\n                targetParentPosition: param.targetParentPosition,\r\n                insertIndex: param.insertIndex,\r\n                sourceContainerData: param.sourceContainerData,\r\n            };\r\n            needAddThead = true;\r\n        } else if (this.$tableHeadLeft.length !== 0) {\r\n            needAddThead = true;\r\n        }\r\n\r\n        if (lastSelectContainer) {\r\n            let lastSCParam: any;\r\n            if (/^left$/.test(lastSelectContainer.type)) {\r\n                lastSCParam = {\r\n                    type: 'left',\r\n                    targetParentPosition: _.dropRight(lastSelectContainer.theadPosition),\r\n                    insertIndex: _.last(lastSelectContainer.theadPosition) + 1\r\n                };\r\n            } else {\r\n                const leftIndexContainer = this.getLeftIndexContainer(lastSelectContainer.position) as IndexContainer;\r\n                if (leftIndexContainer && leftIndexContainer.$theadContainer) {\r\n                    const leftContainer = leftIndexContainer.$theadContainer;\r\n                    lastSCParam = {\r\n                        type: 'left',\r\n                        targetParentPosition: _.dropRight(leftContainer.theadPosition),\r\n                        insertIndex: _.last(leftContainer.theadPosition) + 1\r\n                    };\r\n                }\r\n            }\r\n            paramTheadAdd = _.objectSet(lastSCParam, paramTheadAdd, 'union');\r\n\r\n        } else {\r\n            const defParam = {\r\n                type: 'left',\r\n                targetParentPosition: [],\r\n            };\r\n            paramTheadAdd = _.objectSet(defParam, paramTheadAdd, 'union');\r\n        }\r\n\r\n        // addTbody\r\n        if (needAddThead) {\r\n            const addContainer = this.theadAdd(paramTheadAdd);\r\n            id = addContainer.id;\r\n        }\r\n\r\n        const container = this.theadLeftIndexEntity.createContain();\r\n        this.theadLeftIndexEntity.addChild(container);\r\n        id = this.tbodyEntity.setRowData(id, rowData || {});\r\n        container.renderId = id;\r\n        if (render !== false) {\r\n            this.render();\r\n        }\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * addOneCol 添加一列数据\r\n     *\r\n     * @param {*} [data]\r\n     * @memberof BaseTable\r\n     */\r\n    public addOneCol(\r\n        params?:\r\n            {\r\n                data?: object | any[] | CellContainer[],\r\n                param?: AddDataPostionInterface,\r\n                render?: boolean;\r\n            }\r\n    ): string {\r\n        const param = params ? params.param : undefined;\r\n        const colData = params ? params.data : undefined;\r\n        const render = params ? params.render : undefined;\r\n\r\n        let id: string = null;\r\n        let needAddThead = false;\r\n        let paramTheadAdd: ParamTheadAdd;\r\n        const lastSelectContainer: TheadContainer = this.$selectBoxEntity.currentCotanier as TheadContainer;\r\n\r\n        if (param) {\r\n            paramTheadAdd = {\r\n                type: 'top',\r\n                targetParentPosition: param.targetParentPosition,\r\n                insertIndex: param.insertIndex,\r\n                sourceContainerData: param.sourceContainerData,\r\n            };\r\n            needAddThead = true;\r\n        } else if (this.$tableHeadTop.length !== 0) {\r\n            needAddThead = true;\r\n        }\r\n\r\n\r\n        if (lastSelectContainer) {\r\n            let lastSCParam: any;\r\n            if (/^top$/.test(lastSelectContainer.type)) {\r\n                lastSCParam = {\r\n                    type: 'top',\r\n                    targetParentPosition: _.dropRight(lastSelectContainer.theadPosition),\r\n                    insertIndex: _.last(lastSelectContainer.theadPosition) + 1\r\n                };\r\n            } else if (/^tbody$/.test(lastSelectContainer.type)) {\r\n                const topIndexContainer = this.getTopIndexContainer(lastSelectContainer.position) as IndexContainer;\r\n                if (topIndexContainer && topIndexContainer.$theadContainer) {\r\n                    const topContainer = topIndexContainer.$theadContainer;\r\n                    lastSCParam = {\r\n                        type: 'top',\r\n                        targetParentPosition: _.dropRight(topContainer.theadPosition),\r\n                        insertIndex: _.last(topContainer.theadPosition) + 1\r\n                    };\r\n                }\r\n            }\r\n            paramTheadAdd = _.objectSet(lastSCParam, paramTheadAdd, 'union');\r\n        } else {\r\n            const defParam = {\r\n                type: 'top',\r\n                targetParentPosition: [],\r\n            };\r\n            paramTheadAdd = _.objectSet(defParam, paramTheadAdd, 'union');\r\n        }\r\n\r\n        if (needAddThead) {\r\n            const addContainer = this.theadAdd(paramTheadAdd);\r\n            id = addContainer.id;\r\n        }\r\n\r\n        const container = this.theadTopIndexEntity.createContain();\r\n        id = this.tbodyEntity.setColData(id, colData || {});\r\n        container.renderId = id;\r\n        this.theadTopIndexEntity.addChild(container);\r\n        if (render !== false) {\r\n            this.render();\r\n        }\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * setTBodyData\r\n     */\r\n    public setTbodyData(data: object | Array<TbodyContainerInterface[] | object>): void {\r\n        this.tbodyEntity.setTbodyData(data);\r\n    }\r\n\r\n    /**\r\n     * 表头添加并替换\r\n     *\r\n     * @param {ParamTheadAddReplace} param\r\n     * @memberof BaseTable\r\n     */\r\n    public theadAddReplace(param: ParamTheadAddReplace, render?: boolean): void {\r\n        const targetContainerPosition = param.targetContainerPosition;\r\n        const targetThead: BaseThead = this.getEntity(param.type);\r\n        const targetIndexPosition = _.last(targetContainerPosition);\r\n        const targetParentPosition = _.dropRight(targetContainerPosition);\r\n        const targetParentContainer = targetThead.getContainerByTheadPosition(targetParentPosition);\r\n        if (param.sourceContainerData) {\r\n            if (param.withChildren == false) {\r\n                param.sourceContainerData.children = new Array();\r\n            }\r\n            const tmpContainer = targetThead.createContain(param.sourceContainerData);\r\n            targetParentContainer.replaceChild(tmpContainer, targetIndexPosition, param.targetWithChildren);\r\n        }\r\n\r\n        if (param.sourceContainerData) {\r\n            const tmpContainer = targetThead.createContain(param.sourceContainerData);\r\n            targetParentContainer.replaceChild(tmpContainer, targetIndexPosition, param.withChildren);\r\n        }\r\n\r\n        this.onReceiveMsg({\r\n            ev_type: 'theadAddReplace',\r\n            event: null,\r\n            render,\r\n            data: {\r\n                objectName: 'ParamTheadAddReplace',\r\n                object: param\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 表头添加\r\n     *\r\n     * @param {ParamTheadAdd} param\r\n     * @memberof BaseTable\r\n     */\r\n    public theadAdd(param: ParamTheadAdd, render?: boolean): any {\r\n        // debugger\r\n        let id = null;\r\n        let addContainer: TheadContainer;\r\n        try {\r\n            if (!param.sourceContainerData) {\r\n                param.sourceContainerData = {\r\n                    cell: {\r\n                        value: '',\r\n                    },\r\n                };\r\n            }\r\n            if (param.withChildren == false) {\r\n                param.sourceContainerData.children = new Array();\r\n            }\r\n            const targetThead: BaseThead = this.getEntity(param.type);\r\n            const targetParentContainer = targetThead.getContainerByTheadPosition(param.targetParentPosition) as TheadContainer;\r\n            addContainer = targetThead.createContain(param.sourceContainerData);\r\n            id = targetParentContainer.addChild(addContainer, param.insertIndex);\r\n            // targetThead.resize();\r\n            this.onReceiveMsg({\r\n                ev_type: 'theadAdd',\r\n                event: null,\r\n                render,\r\n                data: {\r\n                    objectName: 'ParamTheadAdd',\r\n                    object: param\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.onReceiveMsg({\r\n                ev_type: 'error',\r\n                event: null,\r\n                data: {\r\n                    objectName: 'error',\r\n                    object: error\r\n                }\r\n            });\r\n        }\r\n        return addContainer;\r\n    }\r\n\r\n    /**\r\n     * 表头移动\r\n     *\r\n     * @param {ParamTheadMove} param\r\n     * @memberof BaseTable\r\n     */\r\n    public theadMove(param: ParamTheadMove, render?: boolean): void {\r\n\r\n        try {\r\n            const souceIndexPosition = _.last(param.sourceContainerData.theadPosition);\r\n            const souceParentPosition = _.dropRight(param.sourceContainerData.theadPosition);\r\n\r\n            if (param.sourceContainerData) {\r\n                const targetThead: BaseThead = this.getEntity(param.type);\r\n                const targetParentContainer = targetThead.getContainerByTheadPosition(param.targetParentPosition) as TheadContainer;\r\n\r\n                const sourceThead: BaseThead = this.getEntity(param.sourceContainerData.type);\r\n                const sourceParentContainer = sourceThead.getContainerByTheadPosition(souceParentPosition) as TheadContainer;\r\n\r\n                // const tmpContainer = sourceThead.createContain(param.sourceContainerData);\r\n                const sourceContainer = sourceThead.getContainerByTheadPosition(param.sourceContainerData.theadPosition);\r\n                if (JSON.stringify(souceParentPosition) === JSON.stringify(param.targetParentPosition) && souceIndexPosition > param.insertIndex) {\r\n                    // 如果目标容器和源容器在同一个父级容器下，且源容器index小于目标容器index 则先删除源容器 再添加源容器的拷贝\r\n                    sourceParentContainer.deletChild(souceIndexPosition, 1, param.withChildren);\r\n                    targetParentContainer.addChild(sourceContainer, param.insertIndex);\r\n                } else {\r\n                    // 反之先添加源容器的拷贝 再删除除源容器\r\n                    targetParentContainer.addChild(sourceContainer, param.insertIndex);\r\n                    sourceParentContainer.deletChild(souceIndexPosition, 1, param.withChildren);\r\n                }\r\n\r\n                if (!param.withChildren) {\r\n                    sourceContainer.children = new Array();\r\n                }\r\n                targetThead.resize();\r\n                sourceThead.resize();\r\n            }\r\n\r\n            this.onReceiveMsg({\r\n                ev_type: 'theadMove',\r\n                render,\r\n                event: null,\r\n                data: {\r\n                    objectName: 'ParamTheadMove',\r\n                    object: param\r\n                }\r\n            });\r\n\r\n\r\n        } catch (error) {\r\n            this.onReceiveMsg({\r\n                ev_type: 'error',\r\n                event: null,\r\n                data: {\r\n                    objectName: 'theadMove',\r\n                    object: error\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 表头删除\r\n     *\r\n     * @param {ParamTheadDelete} param\r\n     * @memberof BaseTable\r\n     */\r\n    public theadDelete(param?: ParamTheadDelete, render?: boolean): void {\r\n        try {\r\n            let targetContainerPosition: number[];\r\n            let targetIndexPosition: number;\r\n            let targetParentPosition: number[];\r\n            let theadType: any;\r\n            let withChildren: boolean = false;\r\n\r\n            let canDel = false;\r\n            const lastSelectContainer: TheadContainer = this.$selectBoxEntity.currentCotanier as TheadContainer;\r\n\r\n\r\n            if (param) {\r\n                targetIndexPosition = _.last(param.targetContainerPosition);\r\n                targetParentPosition = _.dropRight(param.targetContainerPosition);\r\n                targetContainerPosition = param.targetContainerPosition;\r\n                theadType = param.type;\r\n                withChildren = param.withChildren;\r\n                canDel = true;\r\n            }\r\n\r\n            if (lastSelectContainer) {\r\n                targetIndexPosition = targetIndexPosition !== undefined ? targetIndexPosition : _.last(lastSelectContainer.theadPosition);\r\n                targetParentPosition = targetParentPosition !== undefined ? targetParentPosition : _.dropRight(lastSelectContainer.theadPosition);\r\n                targetContainerPosition = targetContainerPosition !== undefined ? targetContainerPosition : lastSelectContainer.theadPosition;\r\n                theadType = theadType || lastSelectContainer.type;\r\n                canDel = true;\r\n            }\r\n\r\n            // addTbody\r\n            if (canDel) {\r\n                const targetThead: BaseThead = this.getEntity(theadType);\r\n                const deleteContainer: TheadContainer = targetThead.getContainerByTheadPosition(targetContainerPosition);\r\n                const targetParentContainer = targetThead.getContainerByTheadPosition(targetParentPosition) as TheadContainer;\r\n                targetParentContainer.deletChild(targetIndexPosition, 1, withChildren);\r\n                targetThead.resize();\r\n\r\n                this.onReceiveMsg({\r\n                    ev_type: 'theadDelete',\r\n                    render,\r\n                    event: null,\r\n                    data: {\r\n                        objectName: 'ParamTheadDelete',\r\n                        object: param\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                console.error('theadDelete 未传入参数');\r\n            }\r\n        } catch (error) {\r\n            this.onReceiveMsg({\r\n                ev_type: 'error',\r\n                event: null,\r\n                data: {\r\n                    objectName: 'theadDelete',\r\n                    object: error\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 表头移动并覆盖\r\n     *\r\n     * @param {ParamTheadMoveReplace} param\r\n     * @memberof BaseTable\r\n     */\r\n    public theadMoveReplace(param: ParamTheadMoveReplace, render?: boolean): void {\r\n        try {\r\n            const targetContainerPosition = param.targetContainerPosition;\r\n            const targetIndexPosition = _.last(targetContainerPosition);\r\n            const targetParentPosition = _.dropRight(targetContainerPosition);\r\n            const targetThead: BaseThead = this.getEntity(param.type);\r\n            const targetParentContainer = targetThead.getContainerByTheadPosition(targetParentPosition) as TheadContainer;\r\n\r\n            const souceIndexPosition = _.last(param.sourceContainerData.theadPosition);\r\n            const souceParentPosition = _.dropRight(param.sourceContainerData.theadPosition);\r\n            const sourceThead: BaseThead = this.getEntity(param.sourceContainerData.type);\r\n            const sourceParentContainer = sourceThead.getContainerByTheadPosition(souceParentPosition) as TheadContainer;\r\n\r\n            if (param.sourceContainerData) {\r\n                if (!param.withChildren) {\r\n                    param.sourceContainerData.children = new Array();\r\n                }\r\n                const tmpContainer = targetThead.createContain(param.sourceContainerData);\r\n                targetParentContainer.replaceChild(tmpContainer, targetIndexPosition, false);\r\n                sourceParentContainer.deletChild(souceIndexPosition, 1, param.withChildren);\r\n                targetThead.resize();\r\n                if (sourceThead !== targetThead) {\r\n                    sourceThead.resize();\r\n                }\r\n                this.onReceiveMsg({\r\n                    ev_type: 'theadMoveReplace',\r\n                    event: null,\r\n                    render,\r\n                    data: {\r\n                        objectName: 'ParamTheadMoveReplace',\r\n                        object: param\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.onReceiveMsg({\r\n                ev_type: 'error',\r\n                event: null,\r\n                data: {\r\n                    objectName: 'theadMoveReplace',\r\n                    object: error\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * addSum\r\n     */\r\n    public addSum(newParentContainData?: TheadContainerInterface, param?: AddDataPostionInterface): void {\r\n        const mustContainerData: TheadContainerInterface = {\r\n            tbodyConfig: {\r\n                container: {\r\n                    cell: {\r\n                        displayClass: {\r\n                            normal: {\r\n                                displayType: 'text',\r\n                            },\r\n                            dbclick: {\r\n                                displayType: 'text',\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            id: 'sum' + '_' + _.guid(),\r\n            canSum: true,\r\n        } as any;\r\n        const addParam: any = {\r\n            sourceContainerData: {\r\n                cell: {\r\n                    value: '合计',\r\n                }\r\n            }\r\n        };\r\n        _.objectSet(addParam.sourceContainerData, newParentContainData, 'union');\r\n        if (param) {\r\n            _.objectSet(addParam, param, 'union');\r\n        }\r\n        const lastSelectContainer: TheadContainer = this.$selectBoxEntity.currentCotanier as TheadContainer;\r\n        if ((lastSelectContainer && /^top$|^left$/.test(lastSelectContainer.type))) {\r\n            const lSCParam = {\r\n                type: lastSelectContainer.type,\r\n                targetParentPosition: _.dropRight(lastSelectContainer.theadPosition),\r\n                sourceContainerData: addParam.sourceContainerData,\r\n            };\r\n            _.objectSet(addParam, lSCParam, 'union');\r\n        }\r\n        _.objectSet(addParam.sourceContainerData, mustContainerData, 'union');\r\n        this.theadAdd(addParam);\r\n        this.subjectSend(\r\n            {\r\n                ev_type: 'beforeRender',\r\n                render: true,\r\n                event: null,\r\n                data: {\r\n                    objectName: 'addSum',\r\n                    object: null\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {CellContainer} contianer\r\n     * @param {string} delType  'row' | 'col'\r\n     * @memberof BaseTable\r\n     */\r\n    public delOneRowCol(delType: 'row' | 'col', container?: CellContainerInterface): void {\r\n\r\n        const lastSelectContainer: TheadContainer = this.$selectBoxEntity.currentCotanier as TheadContainer;\r\n        container = container || lastSelectContainer;\r\n        const delContainerWithParentWhoHasNoChild = (delContainer: TheadContainer) => {\r\n            const Entity: BaseThead = this.getEntity(delContainer.type);\r\n            const parentContainer: TheadContainer = Entity.getContainerByTheadPosition(_.dropRight(delContainer.theadPosition));\r\n            this.theadDelete({\r\n                type: delContainer.type,\r\n                targetContainerPosition: delContainer.theadPosition,\r\n                withChildren: true\r\n            });\r\n            if (parentContainer.children.length === 0 && !parentContainer.isRootParent) {\r\n                delContainerWithParentWhoHasNoChild(parentContainer);\r\n            }\r\n        };\r\n        let needDelTheadContainer: TheadContainer;\r\n        const type = delType === 'row' ? 'left' : 'top';\r\n        if (container.type === 'tbody') {\r\n            const tbodyContainer: TbodyContainer = this.getContainer(container.position) as TbodyContainer;\r\n            // 删除index\r\n            const delIndex = type === 'left' ? tbodyContainer.position.rowNum : tbodyContainer.position.colNum;\r\n            const IndexEntity: IndexThead = this.getEntity(type + '-index');\r\n            const indexContainer: IndexContainer = IndexEntity.getContainerByTheadPosition([delIndex]);\r\n            needDelTheadContainer = indexContainer.$theadContainer;\r\n            if (!needDelTheadContainer) {\r\n                this.theadDelete({\r\n                    type: (type + '-index') as any,\r\n                    targetContainerPosition: indexContainer.theadPosition\r\n                });\r\n            }\r\n        } else {\r\n            needDelTheadContainer = container as any;\r\n            const position = container.position;\r\n            const colObj = this.$positionManager.getColObj(position);\r\n            for (const rowStr in colObj) {\r\n                if (colObj.hasOwnProperty(rowStr)) {\r\n                    // const parentPosition = _.dropRight(delContainer.theadPosition);\r\n                    // this.processThead(type, 'delete', [], undefined, position.colNum);\r\n                }\r\n            }\r\n            const topIndexContainer = needDelTheadContainer.getTopIndexContainer(needDelTheadContainer.position) as IndexContainer;\r\n            const leftIndexContainer = needDelTheadContainer.getLeftIndexContainer(needDelTheadContainer.position) as IndexContainer;\r\n            if (topIndexContainer && delType === 'col') {\r\n                this.theadDelete({\r\n                    type: ('top-index') as any,\r\n                    targetContainerPosition: topIndexContainer.theadPosition\r\n                });\r\n            }\r\n            if (leftIndexContainer && delType === 'row') {\r\n                this.theadDelete({\r\n                    type: ('left-index') as any,\r\n                    targetContainerPosition: leftIndexContainer.theadPosition\r\n                });\r\n            }\r\n        }\r\n        if (needDelTheadContainer) {\r\n            delContainerWithParentWhoHasNoChild(needDelTheadContainer);\r\n        }\r\n\r\n        this.subjectSend(\r\n            {\r\n                ev_type: 'delOneRowCol',\r\n                event: null,\r\n                render: true,\r\n                data: {\r\n                    objectName: 'delOneRowCol',\r\n                    object: null\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * getTbodyData 根据outPutType输出tbody数据\r\n     *\r\n     * @param {number} [outPutType]\r\n     * @returns\r\n     * @memberof BaseTable\r\n     */\r\n    public getTbodyData(outPutType?: 'objectData' | 'arrayObjectData' | 'arrayArrayData', valueType?: 'content' | 'container'): any {\r\n        outPutType = outPutType || 'arrayObjectData';\r\n        valueType = valueType || 'content';\r\n        const res = this.tbodyEntity.output(valueType)[outPutType];\r\n        return res;\r\n    }\r\n\r\n\r\n    /**\r\n     * 渲染表格渲染\r\n     *\r\n     * @memberof BaseTable\r\n     */\r\n    public render(): void {\r\n        // debugger\r\n        // console.log('render');\r\n        this.$positionManager.hideContainerMap.clear();\r\n        this.resizeTable();\r\n        this.indexTheadRender();\r\n        const theadTopHeight = this.theadTopEntity.side2;\r\n        const theadLeftWidth = this.theadLeftEntity.side2;\r\n        if (this.theadTopEntity) {\r\n            const topBasePosition: PositionInterface = _.clone(this.position);\r\n            topBasePosition.colNum = theadLeftWidth;\r\n            topBasePosition.rowNum = 0;\r\n            this.$tableHeadTop = this.theadTopEntity.convert2TheadTopList(topBasePosition);\r\n        }\r\n        if (this.theadLeftEntity) {\r\n            const leftBasePosition: PositionInterface = _.clone(this.position);\r\n            leftBasePosition.colNum = 0;\r\n            leftBasePosition.rowNum = theadTopHeight;\r\n            this.$tableHeadLeft = this.theadLeftEntity.convert2TheadLeftList(leftBasePosition);\r\n        }\r\n        const topLeftCell = new BaseCell({ value: this.id, $parent: this.tableHeadTopLeft });\r\n        // debugger\r\n        this.tableHeadTopLeft.widthSelfNum = this.theadLeftEntity.widthNum;\r\n        this.tableHeadTopLeft.heightSelfNum = this.theadTopEntity.heightNum;\r\n        this.tableHeadTopLeft.resize();\r\n        this.tableHeadTopLeft.setCell(topLeftCell);\r\n        topLeftCell.render();\r\n        if (theadTopHeight > 0 && theadLeftWidth > 0) {\r\n            this.$positionManager.setPositionMap(this.tableHeadTopLeft.position, this.tableHeadTopLeft, 'source');\r\n            this.$positionManager.setPositionMap(this.tableHeadTopLeft.position, this.tableHeadTopLeft, 'clone');\r\n        }\r\n        this.renderTBody();\r\n        this.$selectBoxEntity.clear();\r\n        // debugger\r\n        this.saveLastPositionMap(this.position);\r\n    }\r\n\r\n    /**\r\n     * serialize 序列化\r\n     */\r\n    public clone(): BaseTableInterface {\r\n        let Table: any = {};\r\n        try {\r\n            Table = super.clone(/\\$/, /userData/);\r\n        } catch (error) {\r\n            console.error('clone 中出现出错');\r\n            console.error(error);\r\n        }\r\n        return Table;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *  添加父级\r\n     *\r\n     * @returns\r\n     * @memberof BaseTable\r\n     */\r\n    public addParent(newParentContainData?: TheadContainerInterface): void {\r\n        let fristContainer: TheadContainer;\r\n        const containerList = this.$selectBoxEntity.selectList;\r\n        this.onReceiveMsg({\r\n            ev_type: 'addParent',\r\n            event: null,\r\n            data: {\r\n                objectName: 'selectContainer',\r\n                object: containerList\r\n            }\r\n        });\r\n        if (this.$selectBoxEntity.size > 0) {\r\n            fristContainer = containerList[0] as TheadContainer;\r\n            const isSameParent = this.isSameParent(containerList);\r\n            if (isSameParent && fristContainer) {\r\n                const theadEntity: BaseThead = this.getEntity(fristContainer.type);\r\n                if (theadEntity === null) { return; }\r\n                const sourceContainerList: TheadContainer[] = new Array();\r\n\r\n\r\n                this.$selectBoxEntity.forEach((th: CellContainer) => {\r\n                    sourceContainerList.push(this.getContainer(th.position) as TheadContainer);\r\n                });\r\n                // 按position从大到小排序 目的是先删除position大的\r\n                sourceContainerList.sort((a: TheadContainer, b: TheadContainer) => {\r\n                    return _.last(b.theadPosition) - _.last(a.theadPosition);\r\n                });\r\n                // console.log(sourceContainerList);\r\n                // 添加在第一个选中th位置上\r\n                // debugger\r\n                fristContainer = _.last(sourceContainerList);\r\n                const targetParentPosition = _.dropRight(fristContainer.theadPosition, 1);\r\n\r\n                newParentContainData = newParentContainData || {\r\n                    cell: {\r\n                        value: '新建合计',\r\n                        data: '',\r\n                    },\r\n                } as any;\r\n                const tmpContainer = theadEntity.createContain(newParentContainData) as TheadContainer;\r\n                sourceContainerList.forEach((th: TheadContainer) => {\r\n                    tmpContainer.addChild(th, 0);\r\n                    this.theadDelete({\r\n                        type: fristContainer.type,\r\n                        targetContainerPosition: th.theadPosition,\r\n                        withChildren: true\r\n                    });\r\n                });\r\n                this.theadAdd({\r\n                    type: fristContainer.type,\r\n                    targetParentPosition,\r\n                    insertIndex: _.last(fristContainer.theadPosition),\r\n                    sourceContainerData: tmpContainer,\r\n                });\r\n                // debugger\r\n                this.subjectSend(\r\n                    {\r\n                        ev_type: 'beforeRender',\r\n                        render: true,\r\n                        event: null,\r\n                        data: {\r\n                            objectName: 'addParent',\r\n                            object: this\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        this.$selectBoxEntity.clear();\r\n    }\r\n\r\n    /**\r\n     * 获得叶子节点1\r\n     */\r\n    public getTheadLeavesList1(theadType: 'top' | 'left'): TheadContainerInterface[] | null {\r\n        let res = null;\r\n        try {\r\n            const Entity = this.getEntity(theadType) as BaseThead;\r\n            Entity.resize();\r\n            res = Entity.$leafIndexList;\r\n        } catch (error) {\r\n            console.error('获取错误');\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 合并单元格\r\n     *\r\n     * @protected\r\n     * @memberof BaseTable\r\n     */\r\n    public merge(): void {\r\n        if (this.canMerge()) {\r\n            const r = window.confirm('合并单元格时只保留左上单元格，删除其他单元格，确定合并？');\r\n            if (r === true) {\r\n                this.$selectBoxEntity.selectList.sort((pre: TheadContainer, lat: TheadContainer) => {\r\n                    return _.last(lat.theadPosition) - _.last(pre.theadPosition);\r\n                });\r\n\r\n                this.$selectBoxEntity.selectList.forEach((container: TheadContainer, i: number) => {\r\n                    if (i < this.$selectBoxEntity.selectList.length - 1) {\r\n                        this.theadDelete({\r\n                            targetContainerPosition: container.theadPosition,\r\n                            type: container.type\r\n                        });\r\n                    }\r\n                });\r\n                this.subjectSend(\r\n                    {\r\n                        ev_type: 'beforeRender',\r\n                        render: true,\r\n                        event: null,\r\n                        data: {\r\n                            objectName: 'merge',\r\n                            object: this\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拆分单元格\r\n     *\r\n     * @protected\r\n     * @memberof BaseTable\r\n     */\r\n    public disMerge() {\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 判断是否符合合并要求\r\n     *\r\n     * @private\r\n     * @returns\r\n     * @memberof BaseTable\r\n     */\r\n    private canMerge(): boolean {\r\n        const containerList = this.$selectBoxEntity.selectList;\r\n        const isSameParent = this.isSameParent(containerList);\r\n        return isSameParent;\r\n    }\r\n\r\n\r\n    /**\r\n     * 渲染表格内容\r\n     *\r\n     * @memberof DefaultTable\r\n     */\r\n    private renderTBody(): void {\r\n        this.tbodyEntity.topIndexList = this.$colNumber.slice(0 + this.theadLeftEntity.side2, this.$colNumber.length);\r\n        this.tbodyEntity.leftIndexList = this.$rowNumber.slice(0 + this.theadTopEntity.side2, this.$rowNumber.length);\r\n        this.tbodyEntity.render();\r\n        this.$tableBody = this.tbodyEntity.convert();\r\n    }\r\n\r\n    /**\r\n     * 保证table 表头与表内容长宽高一致 并且创建行、列标志数组\r\n     *\r\n     * @memberof DefaultTable\r\n     */\r\n    private resizeTable(): void {\r\n        this.theadTopEntity.resize();\r\n        this.theadLeftEntity.resize();\r\n        this.theadTopIndexEntity.resize();\r\n        this.theadLeftIndexEntity.resize();\r\n        let maxWidth: number;\r\n        let maxHeight: number;\r\n        const theadTopWidth = this.theadTopEntity.side1;\r\n        const theadTopHeight = this.theadTopEntity.side2;\r\n        const theadLeftHeight = this.theadLeftEntity.side1;\r\n        const theadLeftWidth = this.theadLeftEntity.side2;\r\n\r\n        let topIndexWidth = this.theadTopIndexEntity.side1;\r\n        let leftIndexHeight = this.theadLeftIndexEntity.side1;\r\n\r\n        const resizeTableWidth = () => {\r\n            if (theadTopWidth > 0) {\r\n                this.theadTopIndexEntity.deletChild(theadLeftWidth, topIndexWidth, true);\r\n                this.theadTopIndexEntity.resize();\r\n                topIndexWidth = this.theadTopIndexEntity.side1;\r\n                this.theadTopEntity.$leafIndexList.forEach((th: TheadContainer, i: number) => {\r\n                    const index = i + theadLeftWidth;\r\n                    const container = this.theadTopIndexEntity.createContain();\r\n                    const thContainer = this.theadTopEntity.getContainerByTheadPosition(th.theadPosition);\r\n                    container.update(th);\r\n                    thContainer.$IndexContainer = container;\r\n                    if (index + 1 > topIndexWidth) {\r\n                        this.theadTopIndexEntity.addChild(container);\r\n                    } else {\r\n                        this.theadTopIndexEntity.replaceChild(container, index);\r\n                    }\r\n                });\r\n            } else {\r\n                // console.log(this.theadTopIndexEntity.children);\r\n                this.theadTopIndexEntity.children.forEach((th: IndexContainer, i: number) => {\r\n                    if (i + 1 <= theadLeftWidth) {\r\n                        const theadContainer: TheadContainer = this.theadLeftEntity.$leafIndexList2[i];\r\n                        const container = this.theadTopIndexEntity.createContain();\r\n                        container.update(theadContainer);\r\n                        if (/tbody/.test(th.renderId)) {\r\n                            this.theadTopIndexEntity.addChild(container, i);\r\n                        } else {\r\n                            this.theadTopIndexEntity.replaceChild(container, i);\r\n                        }\r\n                    } else if ((i + 1) > theadLeftWidth && !/tbody/.test(th.renderId)) {\r\n                        this.theadTopIndexEntity.deletChild(i, 1, true);\r\n                    }\r\n                });\r\n\r\n            }\r\n        };\r\n\r\n        const resizeTableHeight = () => {\r\n            if (theadLeftHeight > 0) {\r\n                this.theadLeftIndexEntity.deletChild(theadTopHeight, leftIndexHeight, true);\r\n                this.theadLeftIndexEntity.resize();\r\n                leftIndexHeight = this.theadLeftIndexEntity.side1;\r\n                // console.log(this.theadLeftEntity);\r\n\r\n                this.theadLeftEntity.$leafIndexList.forEach((th: TheadContainer, i: number) => {\r\n                    const index = i + theadTopHeight;\r\n                    const container = this.theadLeftIndexEntity.createContain();\r\n                    // console.log(this.theadLeftEntity);\r\n                    const thContainer = this.theadLeftEntity.getContainerByTheadPosition(th.theadPosition);\r\n                    thContainer.$IndexContainer = container;\r\n                    container.update(th);\r\n                    if (index + 1 > leftIndexHeight) {\r\n                        this.theadLeftIndexEntity.addChild(container);\r\n                    } else {\r\n                        this.theadLeftIndexEntity.replaceChild(container, index);\r\n                    }\r\n                });\r\n            } else {\r\n                this.theadLeftIndexEntity.children.forEach((th: IndexContainer, i: number) => {\r\n                    if (i + 1 <= theadTopHeight) {\r\n                        const theadContainer: TheadContainer = this.theadTopEntity.$leafIndexList2[i];\r\n                        const container = this.theadLeftIndexEntity.createContain();\r\n                        container.update(theadContainer);\r\n                        if (/tbody/.test(th.renderId)) {\r\n                            this.theadLeftIndexEntity.addChild(container, i);\r\n                        } else {\r\n                            this.theadLeftIndexEntity.replaceChild(container, i);\r\n                        }\r\n                    } else if ((i + 1) > theadTopHeight && !/tbody/.test(th.renderId)) {\r\n                        this.theadLeftIndexEntity.deletChild(i, 1, true);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // 如果列标识数小于左表头宽度+上表头宽度 例如：添加了单元格\r\n        if (topIndexWidth <= theadTopWidth + theadLeftWidth) {\r\n            maxWidth = theadTopWidth + theadLeftWidth;\r\n            if (maxWidth) {\r\n                for (let colIndex = 0; colIndex < theadLeftWidth; colIndex++) {\r\n                    const originalColTh: IndexContainer = this.theadTopIndexEntity.getContainerByTheadPosition([colIndex]);\r\n                    const thContainer = this.theadLeftEntity.$leafIndexList2[colIndex];\r\n                    const container = this.theadTopIndexEntity.createContain();\r\n                    container.update(thContainer);\r\n                    if (colIndex + 1 > topIndexWidth || /tbody/.test(originalColTh.renderId)) {\r\n                        this.theadTopIndexEntity.addChild(container, colIndex);\r\n                    } else {\r\n                        this.theadTopIndexEntity.replaceChild(container, colIndex);\r\n                        // this.$positionManager.setPositionMap(container.position, container, 'last');\r\n                    }\r\n                }\r\n                resizeTableWidth();\r\n            }\r\n        } else { // 如果列标识数大于左表头宽度+上表头宽度 例如：删除了单元格\r\n            maxWidth = topIndexWidth;\r\n            resizeTableWidth();\r\n        }\r\n        this.theadLeftIndexEntity.render();\r\n        leftIndexHeight = this.theadLeftIndexEntity.side1;\r\n        if (leftIndexHeight <= theadLeftHeight + theadTopHeight) {\r\n            maxHeight = theadLeftHeight + theadTopHeight;\r\n            if (maxHeight) {\r\n                for (let rowIndex = 0; rowIndex < theadTopHeight; rowIndex++) {\r\n                    const originalRowTh: IndexContainer = this.theadLeftIndexEntity.getContainerByTheadPosition([rowIndex]);\r\n                    const thContainer = this.theadTopEntity.$leafIndexList2[rowIndex];\r\n                    const container = this.theadLeftIndexEntity.createContain();\r\n                    container.update(thContainer);\r\n                    if (rowIndex + 1 > leftIndexHeight || /tbody/.test(originalRowTh.renderId)) {\r\n                        this.theadLeftIndexEntity.addChild(container, rowIndex);\r\n                    } else {\r\n                        this.theadLeftIndexEntity.replaceChild(container, rowIndex);\r\n\r\n                    }\r\n                }\r\n                resizeTableHeight();\r\n            }\r\n        } else {\r\n            maxHeight = leftIndexHeight;\r\n            resizeTableHeight();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当拖拽形成表格后 操作\r\n     *\r\n     * @private\r\n     * @param {*} msg\r\n     * @returns\r\n     * @memberof BaseTable\r\n     */\r\n    private dropHandle(msg: DragTransferDataInterface): void {\r\n        if (msg) {\r\n            let position: number[] = [];\r\n            let insertIndex = null;\r\n            let targetWithChildren = msg.target.withChildren;\r\n            let sourceWithChildren = msg.source.withChildren;\r\n            let targetContainer: TheadContainerInterface = msg.target.containerData;\r\n            let sourceContainer: TheadContainerInterface = msg.source.containerData;\r\n            let operationType = msg.operationType;\r\n            if (sourceWithChildren === undefined && sourceContainer.children && sourceContainer.children.length !== 0) {\r\n                const r = window.confirm('整组移动？');\r\n                if (r === true) {\r\n                    sourceWithChildren = true;\r\n                } else {\r\n                    sourceWithChildren = false;\r\n                }\r\n            }\r\n            // 处理inner情况\r\n            const handleInner = () => {\r\n                if (/replace/.test(operationType)) {\r\n                    // do nothing\r\n                } else if (targetContainer.cell && targetContainer.cell.value) {\r\n                    const r = window.confirm('该单元格已有数据,替换请按确定，放弃请按取消');\r\n                    if (r === true) {\r\n                        operationType += '-replace';\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    operationType += '-replace';\r\n                }\r\n\r\n                if (targetWithChildren === undefined && targetContainer.children && targetContainer.children.length > 0) {\r\n                    const r = window.confirm('是否删除该单元格的子节点');\r\n                    if (r === true) {\r\n                        targetWithChildren = true;\r\n                    } else {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                position = _.dropRight(targetContainer.theadPosition, 1);\r\n                insertIndex = _.last(targetContainer.theadPosition);\r\n            };\r\n            const handleTop = () => {\r\n                const targetContainer1Position = _.clone(targetContainer.theadPosition);\r\n                const sourceContainerSource = this.getContainer(sourceContainer.position, 'source') as TheadContainer;\r\n                position = _.dropRight(targetContainer.theadPosition, 1);\r\n                insertIndex = _.last(targetContainer.theadPosition);\r\n                const targetParentPosition1 = _.dropRight(targetContainer.theadPosition, 1);\r\n                const targetContainerIndex = _.last(targetContainer.theadPosition);\r\n                // 先将sourceContainer添加或移动到targetContainer位置,得到sourceContainer2,和targetParentPosition2\r\n                {\r\n                    this.processThead({\r\n                        operationType,\r\n                        param: {\r\n                            type: targetContainer.type,\r\n                            targetParentPosition: targetParentPosition1,\r\n                            insertIndex: targetContainerIndex,\r\n                            withChildren: sourceWithChildren,\r\n                            sourceContainerData: sourceContainer,\r\n                        } as ParamTheadMove | ParamTheadAdd\r\n                    });\r\n                }\r\n                // this.render();\r\n                // return;\r\n                this.getEntity(targetContainer.type).resize();\r\n                // 再将targetContainer移动到sourceContainer2或者sourceContainer2根节点下面\r\n                const source2ParentPosition = sourceContainerSource ? sourceContainerSource.theadPosition : targetContainer1Position;\r\n                if (sourceWithChildren) {\r\n                    let tmpChild = sourceContainer;\r\n                    if (tmpChild) {\r\n                        let hasChild = (tmpChild.children || []).length > 0;\r\n                        while (hasChild) {\r\n                            tmpChild = tmpChild.children[0];\r\n                            hasChild = (tmpChild.children || []).length > 0;\r\n                            source2ParentPosition.push(0);\r\n                        }\r\n                    }\r\n                }\r\n                {\r\n\r\n                    operationType = 'move';\r\n                    position = source2ParentPosition;\r\n                    sourceContainer = targetContainer;\r\n                    insertIndex = 0;\r\n                    sourceWithChildren = true;\r\n                    // this.theadMove({\r\n                    //     type: targetContainer.type,\r\n                    //     targetParentPosition: source2ParentPosition,\r\n                    //     sourceContainerData: targetContainer,\r\n                    //     insertIndex: 0,  // ?\r\n                    //     withChildren: true\r\n                    // }, false);\r\n                }\r\n            };\r\n\r\n            if (/top/.test(targetContainer.type)) {\r\n                switch (msg.targetBearing) {\r\n                    case 'left':\r\n                        position = _.dropRight(targetContainer.theadPosition, 1);\r\n                        insertIndex = _.last(targetContainer.theadPosition); break;\r\n                    case 'right':\r\n                        position = _.dropRight(targetContainer.theadPosition, 1);\r\n                        insertIndex = _.last(targetContainer.theadPosition) + 1; break;\r\n                    case 'top':\r\n                        handleTop();\r\n                        // return;\r\n                        break;\r\n                    case 'bottom':\r\n                        position = targetContainer.theadPosition;\r\n                        insertIndex = null; break;\r\n                    case 'inner':\r\n                        const res = handleInner();\r\n                        if (false === res) {\r\n                            return;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        targetContainer = this.theadTopEntity;\r\n                        position = targetContainer.theadPosition;\r\n                        insertIndex = null;\r\n                        break;\r\n                }\r\n            } else if (/left/.test(targetContainer.type)) {\r\n                switch (msg.targetBearing) {\r\n                    case 'top':\r\n                        position = _.dropRight(targetContainer.theadPosition, 1);\r\n                        insertIndex = _.last(targetContainer.theadPosition); break;\r\n                    case 'bottom':\r\n                        position = _.dropRight(targetContainer.theadPosition, 1);\r\n                        insertIndex = _.last(targetContainer.theadPosition) + 1; break;\r\n                    case 'left':\r\n                        handleTop();\r\n                        // return;\r\n                        break;\r\n                    case 'right':\r\n                        position = targetContainer.theadPosition;\r\n                        insertIndex = null; break;\r\n                    case 'inner':\r\n                        const res = handleInner();\r\n                        if (false === res) {\r\n                            return;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        targetContainer = this.theadLeftEntity;\r\n                        position = targetContainer.theadPosition;\r\n                        insertIndex = null;\r\n\r\n                        break;\r\n                }\r\n            }\r\n\r\n            this.processThead({\r\n                operationType,\r\n                param: {\r\n                    type: targetContainer.type,\r\n                    insertIndex,\r\n                    withChildren: sourceWithChildren,\r\n                    targetWithChildren,\r\n                    targetParentPosition: position,\r\n                    sourceContainerData: sourceContainer,\r\n                    targetContainerPosition: targetContainer.theadPosition\r\n                }\r\n            } as ProcessTheadInterface);\r\n            this.onReceiveMsg({\r\n                ev_type: 'beforeRender',\r\n                event: null,\r\n                render: true,\r\n                data: {\r\n                    objectName: 'BaseTable',\r\n                    object: this\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 批量粘贴 截止2018-10-9还未使用\r\n     *\r\n     * @param {*} e\r\n     * @memberof BaseTable\r\n     */\r\n    private mutiPaste(e: any) {\r\n        // console.log(1111);\r\n    }\r\n\r\n    /**\r\n     * 判断选中的selectBoxEntity 是否是同一个父容器下\r\n     *\r\n     * @returns\r\n     * @memberof BaseTable\r\n     */\r\n    private isSameParent(containerList: TheadContainer[]): boolean {\r\n        let lastContainer: TheadContainer;\r\n        let isSameParentSet = true;\r\n        containerList.forEach((th: TheadContainer) => {\r\n            if (!lastContainer) {\r\n                lastContainer = th;\r\n            } else {\r\n                if (lastContainer.type !== th.type) {\r\n                    isSameParentSet = false;\r\n                } else if (JSON.stringify(_.dropRight(th.theadPosition, 1)) !== JSON.stringify(_.dropRight(lastContainer.theadPosition, 1))) {\r\n                    isSameParentSet = false;\r\n                }\r\n            }\r\n        });\r\n        return isSameParentSet;\r\n    }\r\n\r\n    /**\r\n     * indexTheadRender 渲染行列标识列\r\n     *\r\n     * @private\r\n     * @memberof BaseTable\r\n     */\r\n    private indexTheadRender(): void {\r\n        this.theadLeftIndexEntity.render();\r\n        this.theadTopIndexEntity.render();\r\n        this.$colNumber = this.theadTopIndexEntity.convert();\r\n        this.$rowNumber = this.theadLeftIndexEntity.convert();\r\n    }\r\n\r\n    /**\r\n     * 表头改变事件\r\n     *\r\n     * @param {*} msg\r\n     * @memberof BaseTable\r\n     */\r\n    private onReceiveMsg(msg: SubjectMsgInterface) {\r\n        const resultList = this.subjectSend(msg);\r\n        if (/cancel/.test(resultList.join('-'))) {\r\n            return resultList;\r\n        }\r\n        if (!this.$parent && msg.render) {\r\n            this.render();\r\n        }\r\n        switch (msg.ev_type) {\r\n            case 'drop':\r\n                this.dropHandle(msg.data.object);\r\n                break;\r\n            case 'click':\r\n                this.afterContainerClick(msg.event, msg.data.object);\r\n                break;\r\n            case 'rightClick':\r\n                this.afterContainerRClick(msg.event, msg.data.object);\r\n                break;\r\n            default:\r\n        }\r\n        return resultList;\r\n    }\r\n\r\n    /**\r\n     * 通用表头处理方法\r\n     *\r\n     * @private\r\n     * @param {string} theadType\r\n     * @param {string} operationType\r\n     * @param {number[]} targetParentPostion\r\n     * @param {(TheadContainer | null)} [sourceContainerData]\r\n     * @param {number} [operationIndex]\r\n     * @memberof BaseTable\r\n     */\r\n    private processThead(processTheadData: ProcessTheadInterface): void {\r\n        const param = processTheadData.param;\r\n        switch (processTheadData.operationType) {\r\n            case 'add':\r\n                this.theadAdd(param as ParamTheadAdd, false);\r\n                break;\r\n            case 'move':\r\n                this.theadMove(param as ParamTheadMove, false);\r\n                break;\r\n            case 'add-replace':\r\n                this.theadAddReplace(param as ParamTheadAddReplace, false);\r\n                break;\r\n            case 'move-replace':\r\n                this.theadMoveReplace(param as ParamTheadMoveReplace, false);\r\n                break;\r\n            case 'delete':\r\n                this.theadDelete(param as ParamTheadDelete, false);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    private afterContainerClick(ev: any, th: CellContainer): void {\r\n        // debugger\r\n        const dom = ev.currentTarget;\r\n\r\n        const container = this.$selectBoxEntity.createSelectContainer(dom, th);\r\n        if (!this.$keyDownSet.has('Control')) {\r\n            this.$selectBoxEntity.clear();\r\n        }\r\n        this.$selectBoxEntity.add(container);\r\n        const editContainer = this.$positionManager.$editContainer;\r\n        // console.log(editContainer);\r\n\r\n        if (editContainer && editContainer.cell && editContainer.cell.formula.canClickAdd && editContainer.id !== th.id) {\r\n            const oldValue = editContainer.cell.formula.tmpValue;\r\n            const valueArr = oldValue.split('');\r\n            let addValue = '';\r\n            if (this.$positionManager.$editContainer.position.table !== this.position.table) {\r\n                addValue = th.position.table + '!';\r\n            }\r\n            addValue += th.position.colStr + th.position.rowStr;\r\n            valueArr.splice(editContainer.cell.selectionStart, 0, addValue);\r\n            // this.$positionManager.$editContainer.cell.value = valueArr.join('');\r\n            const elInput: any = document.activeElement;\r\n            editContainer.cell.value = valueArr.join('');\r\n            elInput.value = valueArr.join('');\r\n            elInput.selectionStart = editContainer.cell.selectionStart + addValue.length;\r\n            elInput.selectionEnd = editContainer.cell.selectionStart + addValue.length;\r\n        }\r\n        focus();\r\n    }\r\n    private afterContainerRClick(ev: any, th: CellContainer): void {\r\n        // debugger\r\n        const dom = ev.currentTarget;\r\n        const container = this.$selectBoxEntity.createSelectContainer(dom, th);\r\n        if (this.$selectBoxEntity.has(container)) {\r\n            // 已选中自己 doNoting\r\n        } else {\r\n            this.$selectBoxEntity.clear();\r\n            this.$selectBoxEntity.add(container);\r\n        }\r\n\r\n        focus();\r\n    }\r\n\r\n    /**\r\n     * 初始化订阅事件 订阅表头变化\r\n     *\r\n     * @param {*} self\r\n     * @memberof BaseTable\r\n     */\r\n    private initSubject?(self: BaseTable): void {\r\n        self = self || this;\r\n        if (self.theadTopEntity) {\r\n            self.theadTopEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n        }\r\n        if (self.theadLeftEntity) {\r\n            self.theadLeftEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n        }\r\n        if (self.tbodyEntity) {\r\n            self.tbodyEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n        }\r\n        self.theadTopIndexEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n        self.theadLeftIndexEntity.$subject.subscribe(self.onReceiveMsg, self);\r\n    }\r\n\r\n\r\n    private initAfterSetData(): void {\r\n        this.position.table = this.id;\r\n        const topLeftPositon: PositionInterface = {\r\n            table: this.position.table,\r\n            colStr: 'A',\r\n            rowStr: 1,\r\n        };\r\n        this.tableHeadTopLeft.position = topLeftPositon;\r\n        const style = {\r\n            // 主表样式\r\n            mainTable: {\r\n                position: 'relative',\r\n                float: 'left',\r\n                overflowX: this.isOverflowX ? 'auto' : 'visible',\r\n                overflowY: this.isOverflowY ? 'auto' : 'visible',\r\n                maxWidth: !this.isOverflowX ? 'auto' : this.maxWidth,\r\n                maxHeight: !this.isOverflowY ? 'auto' : this.maxHeight,\r\n            },\r\n            leftTable: {\r\n                position: 'absolute',\r\n                // zIndex: 100,\r\n                overflowX: this.isOverflowX ? 'hidden' : 'visible',\r\n                overflowY: this.isOverflowY ? 'hidden' : 'visible',\r\n                maxHeight: !this.isOverflowY ? 'auto' : 'calc(' + this.maxHeight + ' - ' + this.scrollBarHeight + ')',\r\n            },\r\n            // 上侧表头\r\n            topTable: {\r\n                overflowX: this.isOverflowX ? 'hidden' : 'visible',\r\n                overflowY: this.isOverflowY ? 'hidden' : 'visible',\r\n                maxWidth: !this.isOverflowX ? 'auto' : 'calc(' + this.maxWidth + ' - ' + this.scrollBarWidth + ')',\r\n            },\r\n        };\r\n        _.objectSet(this.style, style, 'union');\r\n    }\r\n}\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport TopFixTable from \"./com/TopFixTable.vue\";\nimport TopLeftFixTable from \"./com/TopLeftFixTable.vue\";\nimport LeftFixTable from \"./com/LeftFixTable.vue\";\nimport SelectBox from \"./com/SelectBox.vue\";\nimport { BaseTable } from \"../viewModule/table/BaseTable\";\nexport default Vue.component(\"MyTable\", {\n  components: {\n    TopLeftFixTable,\n    TopFixTable,\n    LeftFixTable,\n    SelectBox\n  },\n  props: {\n    inputTable: Object\n  },\n  data: function() {\n    return {\n      myTable: this.inputTable || new BaseTable({ id: \"test\" })\n    };\n  },\n  watch: {\n    inputTable: function(val, oldVal) {\n      this.myTable = val || oldVal;\n    }\n  },\n  created() {\n    console.log(this.myTable.id);\n  }\n});\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableCom.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableCom.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TableCom.vue?vue&type=template&id=5f04bc67&scoped=true&\"\nimport script from \"./TableCom.vue?vue&type=script&lang=ts&\"\nexport * from \"./TableCom.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./TableCom.vue?vue&type=style&index=0&id=5f04bc67&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f04bc67\",\n  null\n  \n)\n\ncomponent.options.__file = \"TableCom.vue\"\nexport default component.exports","import { BaseTable } from './viewModule/table/BaseTable';\r\nimport { DragTableConfigInterface } from './interface/config/DragTableConfig';\r\nimport { DragTableConfig } from './config/DragTableConfig';\r\nimport { PositionManager } from './module/positionManager/PositionManager';\r\nimport * as _ from './utils/index';\r\nimport { BaseTableInterface } from './interface/viewModule/table/BaseTable';\r\nimport { PositionInterface } from './interface/PositionInterface';\r\nimport { TheadContainerInterface } from './interface/viewModule/container/TheadContainer';\r\nimport { TbodyContainerInterface } from './interface/viewModule/container/TbodyContainer';\r\nimport { IndexContainerInterface } from './interface/viewModule/container/IndexContainer';\r\nimport { SubjectMsgInterface } from './interface/SubjectMsgInterface';\r\nimport { Subject } from './communication/Subject';\r\n\r\nexport class DragTable {\r\n    public id: string = null;\r\n    public $subject: Subject = new Subject();\r\n    public $config: DragTableConfig = {};// 总体设置\r\n    public readonly version: string = '0.2.6';\r\n    public tableList: BaseTable[] = [];\r\n    public tableMap: Map<any, BaseTable> = new Map();\r\n    public $positionManager: PositionManager; // 位置记录器\r\n    public currentTable: BaseTable;\r\n    constructor(id: any, defConfig?: DragTableConfigInterface) {\r\n        this.id = id;\r\n        this.$config = DragTableConfig.getInstance(id);\r\n        this.setConfig(defConfig);\r\n        this.$positionManager = PositionManager.getInstance(id);\r\n    }\r\n\r\n    /**\r\n     * addTable\r\n     */\r\n    public addTable(table: BaseTable): PositionInterface {\r\n        if (this.tableMap.has(table.id)) {\r\n            this.deleteTable(table.id);\r\n            console.log('重复表格id:' + table.id);\r\n        }\r\n        table.$groupId = this.id;\r\n        this.tableMap.set(table.id, table);\r\n        table.$parent = this;\r\n        this.currentTable = table;\r\n        this.resize();\r\n        table.$subject.subscribe(this.ontableChange, this);\r\n        return table.position;\r\n    }\r\n\r\n\r\n    /**\r\n     * createTable\r\n     */\r\n    public createTable(param: BaseTableInterface): BaseTable {\r\n        const unionParam = _.keepClone(param);\r\n        unionParam.$groupId = this.id;\r\n        _.objectSet(unionParam, this.$config.table);\r\n        const table: BaseTable = new BaseTable(unionParam);\r\n        return table;\r\n    }\r\n\r\n    /**\r\n     * deleteTable\r\n     */\r\n    public deleteTable(key: any) {\r\n        try {\r\n            this.tableMap.delete(key);\r\n            this.$positionManager.clearPositionMapById(key);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        this.resize();\r\n    }\r\n\r\n\r\n    /**\r\n     * setConfig\r\n     */\r\n    public setConfig(config: DragTableConfigInterface): void {\r\n        try {\r\n            if (config) {\r\n                _.objectSet(this.$config, config, 'union');\r\n            }\r\n        } catch (error) {\r\n            console.error('initDefaultConfig error');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * render\r\n     */\r\n    public render(): void {\r\n        this.tableList.forEach((tmpTable: BaseTable) => {\r\n            tmpTable.render();\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * serialize\r\n     */\r\n    public serialize(): BaseTableInterface[] {\r\n        const jsonList: BaseTableInterface[] = new Array();\r\n        this.tableList.forEach((table: BaseTable, i: number) => {\r\n            jsonList.push(table.clone());\r\n        });\r\n        return jsonList;\r\n    }\r\n\r\n    /**\r\n     * deserialize\r\n     */\r\n    public deserialize(jsonList: BaseTableInterface[]): void {\r\n        jsonList.forEach((table: BaseTableInterface, i: number) => {\r\n            const tmpTable = this.createTable(table);\r\n            this.addTable(tmpTable);\r\n        });\r\n    }\r\n\r\n\r\n    /** 获得容器\r\n     * getContainer\r\n     */\r\n    public getContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainerInterface | TbodyContainerInterface | IndexContainerInterface {\r\n        return this.$positionManager.getContainer(position, type);\r\n    }\r\n\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getTopIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainerInterface | TbodyContainerInterface | IndexContainerInterface {\r\n        return this.$positionManager.getTopIndexContainer(position, type);\r\n    }\r\n\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getLeftIndexContainer(position: PositionInterface, type?: 'clone' | 'source' | 'last'): TheadContainerInterface | TbodyContainerInterface | IndexContainerInterface {\r\n        return this.$positionManager.getLeftIndexContainer(position, type);\r\n    }\r\n    /**\r\n     * getTopIndexContainer\r\n     */\r\n    public getRowObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): object {\r\n        return this.$positionManager.getRowObj(position, type);\r\n    }\r\n    /**\r\n     * getColObj\r\n     */\r\n    public getColObj(position: PositionInterface, type?: 'clone' | 'source' | 'last'): object {\r\n        return this.$positionManager.getColObj(position, type);\r\n    }\r\n\r\n    /**\r\n     * saveLastPositionMap\r\n     */\r\n    public saveLastPositionMap(position: PositionInterface) {\r\n        return this.$positionManager.saveLastPositionMap(position);\r\n    }\r\n\r\n    /**\r\n     * ontableChange\r\n     */\r\n    private ontableChange(msg: SubjectMsgInterface) {\r\n        if (msg.render) {\r\n            this.render();\r\n        }\r\n        return this.$subject.sendMsg(msg);\r\n    }\r\n\r\n    /**\r\n     * resize\r\n     */\r\n    private resize(): void {\r\n        this.tableList = [];\r\n        this.tableMap.forEach((table: BaseTable, i: number) => {\r\n            this.tableList.push(table);\r\n        });\r\n    }\r\n\r\n}","import './setPublicPath'\nexport * from '~entry'\n"],"sourceRoot":""}